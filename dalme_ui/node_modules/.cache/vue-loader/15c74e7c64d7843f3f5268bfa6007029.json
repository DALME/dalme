{"remainingRequest":"/Users/gabep/Repos/DALME-Online-Database/dalme_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gabep/Repos/DALME-Online-Database/dalme_ui/node_modules/primevue/components/menu/Menu.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/gabep/Repos/DALME-Online-Database/dalme_ui/node_modules/primevue/components/menu/Menu.vue","mtime":499162500000},{"path":"/Users/gabep/Repos/DALME-Online-Database/dalme_ui/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gabep/Repos/DALME-Online-Database/dalme_ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/gabep/Repos/DALME-Online-Database/dalme_ui/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/gabep/Repos/DALME-Online-Database/dalme_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gabep/Repos/DALME-Online-Database/dalme_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5wLW1lbnUtZHluYW1pYyB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7Cn0KCi5wLW1lbnUgdWwgewogICAgbWFyZ2luOiAwOwogICAgcGFkZGluZzogMDsKICAgIGxpc3Qtc3R5bGU6IG5vbmU7Cn0KCi5wLW1lbnUgLnAtbWVudWl0ZW0tbGluayB7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKICAgIG92ZXJmbG93OiBoaWRkZW47CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7Cn0KCi5wLW1lbnUgLnAtbWVudWl0ZW0tdGV4dCB7CiAgICBsaW5lLWhlaWdodDogMTsKfQo="},{"version":3,"sources":["Menu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2LA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Menu.vue","sourceRoot":"node_modules/primevue/components/menu","sourcesContent":["<template>\n    <transition name=\"p-connected-overlay\" @enter=\"onEnter\" @leave=\"onLeave\">\n        <div ref=\"container\" :class=\"containerClass\" v-if=\"popup ? overlayVisible : true\">\n            <ul class=\"p-menu-list p-reset\" role=\"menu\">\n                <template v-for=\"(item, i) of model\">\n                    <template v-if=\"item.items && visible(item) && !item.separator\">\n                        <li class=\"p-submenu-header\" :key=\"item.label+i\" v-if=\"item.items\">{{item.label}}</li>\n                        <template v-for=\"(child, j) of item.items\">\n                            <Menuitem v-if=\"visible(child) && !child.separator\" :key=\"child.label + i + j\" :item=\"child\" @click=\"itemClick\" />\n                            <li v-else-if=\"visible(child) && child.separator\" class=\"p-menu-separator\" :style=\"child.style\" :key=\"'separator' + i + j\" role=\"separator\"></li>\n                        </template>\n                    </template>\n                    <li v-else-if=\"visible(item) && item.separator\" class=\"p-menu-separator\" :style=\"item.style\" :key=\"'separator' + i\" role=\"separator\"></li>\n                    <Menuitem v-else :key=\"item.label+i\" :item=\"item\" @click=\"itemClick\" />\n                </template>\n            </ul>\n        </div>\n    </transition>\n</template>\n\n<script>\nimport DomHandler from '../utils/DomHandler';\nimport Menuitem from './Menuitem';\n\nexport default {\n    props: {\n        popup: {\n            type: Boolean,\n            default: false\n        },\n\t\tmodel: {\n            type: Array,\n            default: null\n        },\n        appendTo: {\n            type: String,\n            default: null\n        },\n        autoZIndex: {\n            type: Boolean,\n            default: true\n        },\n        baseZIndex: {\n            type: Number,\n            default: 0\n        }\n    },\n    data() {\n        return {\n            overlayVisible: false\n        };\n    },\n    target: null,\n    outsideClickListener: null,\n    resizeListener: null,\n    relativeAlign: false,\n    beforeDestroy() {\n        this.restoreAppend();\n        this.unbindResizeListener();\n        this.unbindOutsideClickListener();\n        this.target = null;\n    },\n    methods: {\n        itemClick(event) {\n            const item = event.item;\n            if (item.disabled) {\n                return;\n            }\n\n            if (item.command) {\n                item.command(event);\n                event.originalEvent.preventDefault();\n            }\n            this.hide();\n        },\n        toggle(event) {\n            if (this.overlayVisible)\n                this.hide();\n            else\n                this.show(event);\n        },\n        show(event) {\n            this.overlayVisible = true;\n            this.relativeAlign = event.relativeAlign;\n            this.target = event.currentTarget;\n        },\n        hide() {\n            this.overlayVisible = false;\n            this.target = false;\n            this.relativeAlign = false;\n        },\n        onEnter() {\n            this.appendContainer();\n            this.alignOverlay();\n            this.bindOutsideClickListener();\n            this.bindResizeListener();\n\n            if (this.autoZIndex) {\n                this.$refs.container.style.zIndex = String(this.baseZIndex + DomHandler.generateZIndex());\n            }\n        },\n        onLeave() {\n            this.unbindOutsideClickListener();\n            this.unbindResizeListener();\n        },\n        alignOverlay() {\n            if (this.relativeAlign)\n                DomHandler.relativePosition(this.$refs.container, this.target);\n            else\n                DomHandler.absolutePosition(this.$refs.container, this.target);\n\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    if (this.overlayVisible && this.$refs.container && !this.$refs.container.contains(event.target) && !this.isTargetClicked(event)) {\n                        this.hide();\n                    }\n                };\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = () => {\n                    if (this.overlayVisible) {\n                        this.hide();\n                    }\n                };\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        isTargetClicked() {\n            return this.target && (this.target === event.target || this.target.contains(event.target));\n        },\n        appendContainer() {\n            if (this.appendTo) {\n                if (this.appendTo === 'body')\n                    document.body.appendChild(this.$refs.container);\n                else\n                    document.getElementById(this.appendTo).appendChild(this.$refs.container);\n            }\n        },\n        restoreAppend() {\n            if (this.$refs.container && this.appendTo) {\n                if (this.appendTo === 'body')\n                    document.body.removeChild(this.$refs.container);\n                else\n                    document.getElementById(this.appendTo).removeChild(this.$refs.container);\n            }\n        },\n        beforeDestroy() {\n            this.restoreAppend();\n            this.unbindResizeListener();\n            this.unbindOutsideClickListener();\n            this.target = null;\n        },\n        visible(item) {\n            return (typeof item.visible === 'function' ? item.visible() : item.visible !== false);\n        }\n    },\n    computed: {\n        containerClass() {\n            return ['p-menu p-component', {\n                'p-menu-dynamic p-menu-overlay': this.popup\n            }]\n        }\n    },\n    components: {\n        'Menuitem': Menuitem\n    }\n}\n</script>\n\n<style>\n.p-menu-dynamic {\n    position: absolute;\n}\n\n.p-menu ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n}\n\n.p-menu .p-menuitem-link {\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    overflow: hidden;\n    position: relative;\n}\n\n.p-menu .p-menuitem-text {\n    line-height: 1;\n}\n</style>\n"]}]}