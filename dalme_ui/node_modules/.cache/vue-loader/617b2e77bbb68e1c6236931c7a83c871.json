{"remainingRequest":"/Users/gabep/Repos/DALME-Online-Database/dalme_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gabep/Repos/DALME-Online-Database/dalme_ui/node_modules/primevue/components/datatable/BodyCell.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gabep/Repos/DALME-Online-Database/dalme_ui/node_modules/primevue/components/datatable/BodyCell.vue","mtime":499162500000},{"path":"/Users/gabep/Repos/DALME-Online-Database/dalme_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gabep/Repos/DALME-Online-Database/dalme_ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/gabep/Repos/DALME-Online-Database/dalme_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gabep/Repos/DALME-Online-Database/dalme_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BodyCell.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"BodyCell.vue","sourceRoot":"node_modules/primevue/components/datatable","sourcesContent":["<template>\n    <td :style=\"column.bodyStyle\" :class=\"containerClass\" @click=\"onClick\" @keydown=\"onKeyDown\">\n        <ColumnSlot :data=\"rowData\" :column=\"column\" :index=\"index\" type=\"body\" v-if=\"column.$scopedSlots.body && !d_editing\" />\n        <ColumnSlot :data=\"rowData\" :column=\"column\" :index=\"index\" type=\"editor\" v-else-if=\"column.$scopedSlots.editor && d_editing\" />\n        <template v-else-if=\"column.selectionMode\">\n            <DTRadioButton :value=\"rowData\" :checked=\"selected\" @change=\"toggleRowWithRadio\" v-if=\"column.selectionMode === 'single'\" />\n            <DTCheckbox :value=\"rowData\" :checked=\"selected\" @change=\"toggleRowWithCheckbox\" v-else-if=\"column.selectionMode ==='multiple'\" />\n        </template>\n        <template v-else-if=\"column.rowReorder\">\n            <i :class=\"['p-datatable-reorderablerow-handle', column.rowReorderIcon]\"></i>\n        </template>\n        <template v-else-if=\"column.expander\">\n            <button class=\"p-row-toggler p-link\" @click=\"toggleRow\" v-ripple>\n                <span :class=\"rowTogglerIcon\"></span>\n            </button>\n        </template>\n        <template v-else-if=\"editMode === 'row' && column.rowEditor\">\n            <button class=\"p-row-editor-init p-link\" v-if=\"!d_editing\" @click=\"onRowEditInit\" type=\"button\" v-ripple>\n                <span class=\"p-row-editor-init-icon pi pi-fw pi-pencil\"></span>\n            </button>\n            <button class=\"p-row-editor-save p-link\" v-if=\"d_editing\" @click=\"onRowEditSave\" type=\"button\" v-ripple>\n                <span class=\"p-row-editor-save-icon pi pi-fw pi-check\"></span>\n            </button>\n            <button class=\"p-row-editor-cancel p-link\" v-if=\"d_editing\" @click=\"onRowEditCancel\" type=\"button\" v-ripple>\n                <span class=\"p-row-editor-cancel-icon pi pi-fw pi-times\"></span>\n            </button>\n        </template>\n        <template v-else>{{resolveFieldData()}}</template>\n    </td>\n</template>\n\n<script>\nimport DomHandler from '../utils/DomHandler';\nimport ObjectUtils from '../utils/ObjectUtils';\nimport ColumnSlot from './ColumnSlot.vue';\nimport RowRadioButton from './RowRadioButton';\nimport RowCheckbox from './RowCheckbox.vue';\nimport Ripple from '../ripple/Ripple';\n\nexport default {\n    props: {\n        rowData: {\n            type: Object,\n            default: null\n        },\n        column: {\n            type: Object,\n            default: null\n        },\n        index: {\n            type: Number,\n            default: null\n        },\n        rowTogglerIcon: {\n            type: Array,\n            default: null\n        },\n        selected: {\n            type: Boolean,\n            default: false\n        },\n        editing: {\n            type: Boolean,\n            default: false\n        },\n        editMode: {\n            type: String,\n            default: null\n        }\n    },\n    documentEditListener: null,\n    data() {\n        return {\n            d_editing: this.editing\n        }\n    },\n    watch: {\n        editing(newValue) {\n            this.d_editing = newValue;\n        }\n    },\n    mounted() {\n        this.children = this.$children;\n    },\n    updated() {\n        let query = this.editMode === 'row' ? '[autofocus]' : 'input';\n        let focusable = DomHandler.findSingle(this.$el, query);\n        if (focusable && document.activeElement != focusable) {\n            focusable.focus();\n        }\n    },\n    methods: {\n        resolveFieldData() {\n            return ObjectUtils.resolveFieldData(this.rowData, this.column.field);\n        },\n        toggleRow(event) {\n            this.$emit('row-toggle', {\n                originalEvent: event,\n                data: this.rowData\n            });\n        },\n        toggleRowWithRadio(event) {\n            this.$emit('radio-change', event);\n        },\n        toggleRowWithCheckbox(event) {\n            this.$emit('checkbox-change', event);\n        },\n        isEditable() {\n            return this.column.$scopedSlots.editor != null;\n        },\n        bindDocumentEditListener() {\n            if (!this.documentEditListener) {\n                this.documentEditListener = (event) => {\n                    if (this.isOutsideClicked(event)) {\n                        this.completeEdit(event, 'outside');\n                    }\n                };\n\n                document.addEventListener('click', this.documentEditListener);\n            }\n        },\n        unbindDocumentEditListener() {\n            if (this.documentEditListener) {\n                document.removeEventListener('click', this.documentEditListener);\n                this.documentEditListener = null;\n            }\n        },\n        switchCellToViewMode() {\n            this.d_editing = false;\n            this.unbindDocumentEditListener();\n        },\n        isOutsideClicked(event) {\n            return !this.$el.contains(event.target) && !this.$el.isSameNode(event.target);\n        },\n        onClick(event) {\n            if (this.editMode === 'cell' && this.isEditable() && !this.d_editing) {\n                this.d_editing = true;\n                this.bindDocumentEditListener();\n                this.$emit('cell-edit-init', {originalEvent: event, data: this.rowData, field: this.column.field, index: this.index});\n            }\n        },\n        completeEdit(event, type) {\n            let completeEvent = {\n                originalEvent: event,\n                data: this.rowData,\n                field: this.column.field,\n                index: this.index,\n                type: type,\n                defaultPrevented: false,\n                preventDefault: function() {\n                    this.defaultPrevented = true;\n                }\n            };\n\n            this.$emit('cell-edit-complete', completeEvent);\n\n            if (!completeEvent.defaultPrevented) {\n                this.switchCellToViewMode();\n            }\n        },\n        onKeyDown(event) {\n            if (this.editMode === 'cell') {\n                switch (event.which) {\n                    case 13:\n                        this.completeEdit(event, 'enter');\n                    break;\n\n                    case 27:\n                        this.switchCellToViewMode();\n                        this.$emit('cell-edit-cancel', {originalEvent: event, data: this.rowData, field: this.column.field, index: this.index});\n                    break;\n\n                    case 9:\n                        this.completeEdit(event, 'tab');\n\n                        if (event.shiftKey)\n                            this.moveToPreviousCell(event);\n                        else\n                            this.moveToNextCell(event);\n                    break;\n                }\n            }\n        },\n        moveToPreviousCell(event) {\n            let currentCell = this.findCell(event.target);\n            let targetCell = this.findPreviousEditableColumn(currentCell);\n\n            if (targetCell) {\n                DomHandler.invokeElementMethod(targetCell, 'click');\n                event.preventDefault();\n            }\n        },\n        moveToNextCell(event) {\n            let currentCell = this.findCell(event.target);\n            let targetCell = this.findNextEditableColumn(currentCell);\n\n            if (targetCell) {\n                DomHandler.invokeElementMethod(targetCell, 'click');\n                event.preventDefault();\n            }\n        },\n        findCell(element) {\n            if (element) {\n                let cell = element;\n                while (cell && !DomHandler.hasClass(cell, 'p-cell-editing')) {\n                    cell = cell.parentElement;\n                }\n\n                return cell;\n            }\n            else {\n                return null;\n            }\n        },\n        findPreviousEditableColumn(cell) {\n            let prevCell = cell.previousElementSibling;\n\n            if (!prevCell) {\n                let previousRow = cell.parentElement.previousElementSibling;\n                if (previousRow) {\n                    prevCell = previousRow.lastElementChild;\n                }\n            }\n\n            if (prevCell) {\n                if (DomHandler.hasClass(prevCell, 'p-editable-column'))\n                    return prevCell;\n                else\n                    return this.findPreviousEditableColumn(prevCell);\n            }\n            else {\n                return null;\n            }\n        },\n        findNextEditableColumn(cell) {\n            let nextCell = cell.nextElementSibling;\n\n            if (!nextCell) {\n                let nextRow = cell.parentElement.nextElementSibling;\n                if (nextRow) {\n                    nextCell = nextRow.firstElementChild;\n                }\n            }\n\n            if (nextCell) {\n                if (DomHandler.hasClass(nextCell, 'p-editable-column'))\n                    return nextCell;\n                else\n                    return this.findNextEditableColumn(nextCell);\n            }\n            else {\n                return null;\n            }\n        },\n        isEditingCellValid() {\n            return (DomHandler.find(this.$el, '.p-invalid').length === 0);\n        },\n        onRowEditInit(event) {\n            this.$emit('row-edit-init', {originalEvent: event, data: this.rowData, field: this.column.field, index: this.index});\n        },\n        onRowEditSave(event) {\n            this.$emit('row-edit-save', {originalEvent: event, data: this.rowData, field: this.column.field, index: this.index});\n        },\n        onRowEditCancel(event) {\n            this.$emit('row-edit-cancel', {originalEvent: event, data: this.rowData, field: this.column.field, index: this.index});\n        }\n    },\n    computed: {\n        containerClass() {\n            return [this.column.bodyClass, {\n                'p-selection-column': this.column.selectionMode != null,\n                'p-editable-column': this.isEditable(),\n                'p-cell-editing': this.d_editing\n            }];\n        }\n    },\n    components: {\n        'ColumnSlot': ColumnSlot,\n        'DTRadioButton': RowRadioButton,\n        'DTCheckbox': RowCheckbox\n    },\n    directives: {\n        'ripple': Ripple\n    }\n}\n</script>"]}]}