{"remainingRequest":"/Users/gabep/Repos/DALME-Online-Database/dalme_ui/node_modules/babel-loader/lib/index.js!/Users/gabep/Repos/DALME-Online-Database/dalme_ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gabep/Repos/DALME-Online-Database/dalme_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gabep/Repos/DALME-Online-Database/dalme_ui/node_modules/primevue/components/datatable/DataTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gabep/Repos/DALME-Online-Database/dalme_ui/node_modules/primevue/components/datatable/DataTable.vue","mtime":499162500000},{"path":"/Users/gabep/Repos/DALME-Online-Database/dalme_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gabep/Repos/DALME-Online-Database/dalme_ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/gabep/Repos/DALME-Online-Database/dalme_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gabep/Repos/DALME-Online-Database/dalme_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQtaW5kZXgiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mb3ItZWFjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluZGV4LW9mIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLnVybCI7CmltcG9ydCBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciBmcm9tICIvVXNlcnMvZ2FiZXAvUmVwb3MvREFMTUUtT25saW5lLURhdGFiYXNlL2RhbG1lX3VpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvZ2FiZXAvUmVwb3MvREFMTUUtT25saW5lLURhdGFiYXNlL2RhbG1lX3VpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBPYmplY3RVdGlscyBmcm9tICcuLi91dGlscy9PYmplY3RVdGlscyc7CmltcG9ydCBGaWx0ZXJVdGlscyBmcm9tICcuLi91dGlscy9GaWx0ZXJVdGlscyc7CmltcG9ydCBEb21IYW5kbGVyIGZyb20gJy4uL3V0aWxzL0RvbUhhbmRsZXInOwppbXBvcnQgUGFnaW5hdG9yIGZyb20gJy4uL3BhZ2luYXRvci9QYWdpbmF0b3InOwppbXBvcnQgU2Nyb2xsYWJsZVZpZXcgZnJvbSAnLi9TY3JvbGxhYmxlVmlldy52dWUnOwppbXBvcnQgVGFibGVIZWFkZXIgZnJvbSAnLi9UYWJsZUhlYWRlci52dWUnOwppbXBvcnQgVGFibGVCb2R5IGZyb20gJy4vVGFibGVCb2R5LnZ1ZSc7CmltcG9ydCBUYWJsZUZvb3RlciBmcm9tICcuL1RhYmxlRm9vdGVyLnZ1ZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgdmFsdWU6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6IG51bGwKICAgIH0sCiAgICBkYXRhS2V5OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIHJvd3M6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAwCiAgICB9LAogICAgZmlyc3Q6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAwCiAgICB9LAogICAgdG90YWxSZWNvcmRzOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMAogICAgfSwKICAgIHBhZ2luYXRvcjogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIHBhZ2luYXRvclBvc2l0aW9uOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ2JvdHRvbScKICAgIH0sCiAgICBhbHdheXNTaG93UGFnaW5hdG9yOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHRydWUKICAgIH0sCiAgICBwYWdpbmF0b3JUZW1wbGF0ZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdGaXJzdFBhZ2VMaW5rIFByZXZQYWdlTGluayBQYWdlTGlua3MgTmV4dFBhZ2VMaW5rIExhc3RQYWdlTGluayBSb3dzUGVyUGFnZURyb3Bkb3duJwogICAgfSwKICAgIHBhZ2VMaW5rU2l6ZTogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDUKICAgIH0sCiAgICByb3dzUGVyUGFnZU9wdGlvbnM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6IG51bGwKICAgIH0sCiAgICBjdXJyZW50UGFnZVJlcG9ydFRlbXBsYXRlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJyh7Y3VycmVudFBhZ2V9IG9mIHt0b3RhbFBhZ2VzfSknCiAgICB9LAogICAgbGF6eTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGxvYWRpbmc6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBsb2FkaW5nSWNvbjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdwaSBwaS1zcGlubmVyJwogICAgfSwKICAgIHNvcnRGaWVsZDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IG51bGwKICAgIH0sCiAgICBzb3J0T3JkZXI6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgZGVmYXVsdFNvcnRPcmRlcjogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDEKICAgIH0sCiAgICBtdWx0aVNvcnRNZXRhOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgc29ydE1vZGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnc2luZ2xlJwogICAgfSwKICAgIHJlbW92YWJsZVNvcnQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBmaWx0ZXJzOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIGZpbHRlckxvY2FsZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IHVuZGVmaW5lZAogICAgfSwKICAgIHNlbGVjdGlvbjogewogICAgICB0eXBlOiBbQXJyYXksIE9iamVjdF0sCiAgICAgIGRlZmF1bHQ6IG51bGwKICAgIH0sCiAgICBzZWxlY3Rpb25Nb2RlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIGNvbXBhcmVTZWxlY3Rpb25CeTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdkZWVwRXF1YWxzJwogICAgfSwKICAgIG1ldGFLZXlTZWxlY3Rpb246IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfSwKICAgIGNvbnRleHRNZW51OiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgY29udGV4dE1lbnVTZWxlY3Rpb246IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgcm93SG92ZXI6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBjc3ZTZXBhcmF0b3I6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnLCcKICAgIH0sCiAgICBleHBvcnRGaWxlbmFtZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdkb3dubG9hZCcKICAgIH0sCiAgICBhdXRvTGF5b3V0OiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgcmVzaXphYmxlQ29sdW1uczogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGNvbHVtblJlc2l6ZU1vZGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnZml0JwogICAgfSwKICAgIHJlb3JkZXJhYmxlQ29sdW1uczogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGV4cGFuZGVkUm93czogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIGV4cGFuZGVkUm93SWNvbjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdwaS1jaGV2cm9uLWRvd24nCiAgICB9LAogICAgY29sbGFwc2VkUm93SWNvbjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdwaS1jaGV2cm9uLXJpZ2h0JwogICAgfSwKICAgIHJvd0dyb3VwTW9kZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IG51bGwKICAgIH0sCiAgICBncm91cFJvd3NCeTogewogICAgICB0eXBlOiBbQXJyYXksIFN0cmluZ10sCiAgICAgIGRlZmF1bHQ6IG51bGwKICAgIH0sCiAgICBleHBhbmRhYmxlUm93R3JvdXBzOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgZXhwYW5kZWRSb3dHcm91cHM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6IG51bGwKICAgIH0sCiAgICBzdGF0ZVN0b3JhZ2U6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnc2Vzc2lvbicKICAgIH0sCiAgICBzdGF0ZUtleTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IG51bGwKICAgIH0sCiAgICBlZGl0TW9kZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IG51bGwKICAgIH0sCiAgICBlZGl0aW5nUm93czogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIHJvd0NsYXNzOiB7CiAgICAgIHR5cGU6IG51bGwsCiAgICAgIGRlZmF1bHQ6IG51bGwKICAgIH0sCiAgICBzY3JvbGxhYmxlOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgc2Nyb2xsSGVpZ2h0OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIGZyb3plblZhbHVlOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgZnJvemVuV2lkdGg6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgdmlydHVhbFNjcm9sbDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIHZpcnR1YWxSb3dIZWlnaHQ6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAyOAogICAgfSwKICAgIHZpcnR1YWxTY3JvbGxEZWxheTogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDE1MAogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFsbENoaWxkcmVuOiBudWxsLAogICAgICBkX2ZpcnN0OiB0aGlzLmZpcnN0LAogICAgICBkX3Jvd3M6IHRoaXMucm93cywKICAgICAgZF9zb3J0RmllbGQ6IHRoaXMuc29ydEZpZWxkLAogICAgICBkX3NvcnRPcmRlcjogdGhpcy5zb3J0T3JkZXIsCiAgICAgIGRfbXVsdGlTb3J0TWV0YTogdGhpcy5tdWx0aVNvcnRNZXRhID8gX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMubXVsdGlTb3J0TWV0YSkgOiBbXSwKICAgICAgZF9zZWxlY3Rpb25LZXlzOiBudWxsLAogICAgICBkX2V4cGFuZGVkUm93S2V5czogbnVsbCwKICAgICAgZF9jb2x1bW5PcmRlcjogbnVsbCwKICAgICAgZF9lZGl0aW5nUm93S2V5czogbnVsbAogICAgfTsKICB9LAogIHJvd1RvdWNoZWQ6IGZhbHNlLAogIGFuY2hvclJvd0luZGV4OiBudWxsLAogIHJhbmdlUm93SW5kZXg6IG51bGwsCiAgZG9jdW1lbnRDb2x1bW5SZXNpemVMaXN0ZW5lcjogbnVsbCwKICBkb2N1bWVudENvbHVtblJlc2l6ZUVuZExpc3RlbmVyOiBudWxsLAogIGxhc3RSZXNpemVIZWxwZXJYOiBudWxsLAogIHJlc2l6ZUNvbHVtbkVsZW1lbnQ6IG51bGwsCiAgY29sdW1uUmVzaXppbmc6IGZhbHNlLAogIGNvbFJlb3JkZXJJY29uV2lkdGg6IG51bGwsCiAgY29sUmVvcmRlckljb25IZWlnaHQ6IG51bGwsCiAgZHJhZ2dlZENvbHVtbjogbnVsbCwKICBkcmFnZ2VkUm93SW5kZXg6IG51bGwsCiAgZHJvcHBlZFJvd0luZGV4OiBudWxsLAogIHJvd0RyYWdnaW5nOiBudWxsLAogIGNvbHVtbldpZHRoc1N0YXRlOiBudWxsLAogIHRhYmxlV2lkdGhTdGF0ZTogbnVsbCwKICBjb2x1bW5XaWR0aHNSZXN0b3JlZDogZmFsc2UsCiAgdmlydHVhbFNjcm9sbFRpbWVyOiBudWxsLAogIHdhdGNoOiB7CiAgICBmaXJzdDogZnVuY3Rpb24gZmlyc3QobmV3VmFsdWUpIHsKICAgICAgdGhpcy5kX2ZpcnN0ID0gbmV3VmFsdWU7CiAgICB9LAogICAgcm93czogZnVuY3Rpb24gcm93cyhuZXdWYWx1ZSkgewogICAgICB0aGlzLmRfcm93cyA9IG5ld1ZhbHVlOwogICAgfSwKICAgIHNvcnRGaWVsZDogZnVuY3Rpb24gc29ydEZpZWxkKG5ld1ZhbHVlKSB7CiAgICAgIHRoaXMuZF9zb3J0RmllbGQgPSBuZXdWYWx1ZTsKICAgIH0sCiAgICBzb3J0T3JkZXI6IGZ1bmN0aW9uIHNvcnRPcmRlcihuZXdWYWx1ZSkgewogICAgICB0aGlzLmRfc29ydE9yZGVyID0gbmV3VmFsdWU7CiAgICB9LAogICAgbXVsdGlTb3J0TWV0YTogZnVuY3Rpb24gbXVsdGlTb3J0TWV0YShuZXdWYWx1ZSkgewogICAgICB0aGlzLmRfbXVsdGlTb3J0TWV0YSA9IG5ld1ZhbHVlOwogICAgfSwKICAgIHNlbGVjdGlvbjogZnVuY3Rpb24gc2VsZWN0aW9uKG5ld1ZhbHVlKSB7CiAgICAgIGlmICh0aGlzLmRhdGFLZXkpIHsKICAgICAgICB0aGlzLnVwZGF0ZVNlbGVjdGlvbktleXMobmV3VmFsdWUpOwogICAgICB9CiAgICB9LAogICAgZXhwYW5kZWRSb3dzOiBmdW5jdGlvbiBleHBhbmRlZFJvd3MobmV3VmFsdWUpIHsKICAgICAgaWYgKHRoaXMuZGF0YUtleSkgewogICAgICAgIHRoaXMudXBkYXRlRXhwYW5kZWRSb3dLZXlzKG5ld1ZhbHVlKTsKICAgICAgfQogICAgfSwKICAgIGVkaXRpbmdSb3dzOiBmdW5jdGlvbiBlZGl0aW5nUm93cyhuZXdWYWx1ZSkgewogICAgICBpZiAodGhpcy5kYXRhS2V5KSB7CiAgICAgICAgdGhpcy51cGRhdGVFZGl0aW5nUm93S2V5cyhuZXdWYWx1ZSk7CiAgICAgIH0KICAgIH0KICB9LAogIGJlZm9yZU1vdW50OiBmdW5jdGlvbiBiZWZvcmVNb3VudCgpIHsKICAgIGlmICh0aGlzLmlzU3RhdGVmdWwoKSkgewogICAgICB0aGlzLnJlc3RvcmVTdGF0ZSgpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuYWxsQ2hpbGRyZW4gPSB0aGlzLiRjaGlsZHJlbjsKCiAgICBpZiAodGhpcy5yZW9yZGVyYWJsZUNvbHVtbnMpIHsKICAgICAgdmFyIGNvbHVtbk9yZGVyID0gW107CgogICAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIodGhpcy5hbGxDaGlsZHJlbiksCiAgICAgICAgICBfc3RlcDsKCiAgICAgIHRyeSB7CiAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgIHZhciBjaGlsZCA9IF9zdGVwLnZhbHVlOwoKICAgICAgICAgIGlmIChjaGlsZC4kb3B0aW9ucy5fcHJvcEtleXMuaW5kZXhPZignY29sdW1uS2V5JykgIT09IC0xKSB7CiAgICAgICAgICAgIGNvbHVtbk9yZGVyLnB1c2goY2hpbGQuY29sdW1uS2V5IHx8IGNoaWxkLmZpZWxkKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9pdGVyYXRvci5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgfQoKICAgICAgdGhpcy5kX2NvbHVtbk9yZGVyID0gY29sdW1uT3JkZXI7CiAgICB9CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgewogICAgdGhpcy51bmJpbmRDb2x1bW5SZXNpemVFdmVudHMoKTsKICB9LAogIHVwZGF0ZWQ6IGZ1bmN0aW9uIHVwZGF0ZWQoKSB7CiAgICBpZiAodGhpcy5pc1N0YXRlZnVsKCkpIHsKICAgICAgdGhpcy5zYXZlU3RhdGUoKTsKCiAgICAgIGlmICh0aGlzLnJlc2l6YWJsZUNvbHVtbnMgJiYgIXRoaXMuY29sdW1uV2lkdGhzUmVzdG9yZWQpIHsKICAgICAgICB0aGlzLnJlc3RvcmVDb2x1bW5XaWR0aHMoKTsKICAgICAgICB0aGlzLmNvbHVtbldpZHRoc1Jlc3RvcmVkID0gdHJ1ZTsKICAgICAgfQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgb25QYWdlOiBmdW5jdGlvbiBvblBhZ2UoZXZlbnQpIHsKICAgICAgdGhpcy5kX2ZpcnN0ID0gZXZlbnQuZmlyc3Q7CiAgICAgIHRoaXMuZF9yb3dzID0gZXZlbnQucm93czsKICAgICAgdmFyIHBhZ2VFdmVudCA9IHRoaXMuY3JlYXRlTGF6eUxvYWRFdmVudChldmVudCk7CiAgICAgIHBhZ2VFdmVudC5wYWdlQ291bnQgPSBldmVudC5wYWdlQ291bnQ7CiAgICAgIHBhZ2VFdmVudC5wYWdlID0gZXZlbnQucGFnZTsKICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOmZpcnN0JywgdGhpcy5kX2ZpcnN0KTsKICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOnJvd3MnLCB0aGlzLmRfcm93cyk7CiAgICAgIHRoaXMuJGVtaXQoJ3BhZ2UnLCBwYWdlRXZlbnQpOwogICAgfSwKICAgIG9uQ29sdW1uSGVhZGVyQ2xpY2s6IGZ1bmN0aW9uIG9uQ29sdW1uSGVhZGVyQ2xpY2soZSkgewogICAgICB2YXIgZXZlbnQgPSBlLm9yaWdpbmFsRXZlbnQ7CiAgICAgIHZhciBjb2x1bW4gPSBlLmNvbHVtbjsKCiAgICAgIGlmIChjb2x1bW4uc29ydGFibGUpIHsKICAgICAgICB2YXIgdGFyZ2V0Tm9kZSA9IGV2ZW50LnRhcmdldDsKICAgICAgICB2YXIgY29sdW1uRmllbGQgPSBjb2x1bW4uc29ydEZpZWxkIHx8IGNvbHVtbi5maWVsZDsKCiAgICAgICAgaWYgKERvbUhhbmRsZXIuaGFzQ2xhc3ModGFyZ2V0Tm9kZSwgJ3Atc29ydGFibGUtY29sdW1uJykgfHwgRG9tSGFuZGxlci5oYXNDbGFzcyh0YXJnZXROb2RlLCAncC1jb2x1bW4tdGl0bGUnKSB8fCBEb21IYW5kbGVyLmhhc0NsYXNzKHRhcmdldE5vZGUsICdwLXNvcnRhYmxlLWNvbHVtbi1pY29uJykgfHwgRG9tSGFuZGxlci5oYXNDbGFzcyh0YXJnZXROb2RlLnBhcmVudEVsZW1lbnQsICdwLXNvcnRhYmxlLWNvbHVtbi1pY29uJykpIHsKICAgICAgICAgIERvbUhhbmRsZXIuY2xlYXJTZWxlY3Rpb24oKTsKCiAgICAgICAgICBpZiAodGhpcy5zb3J0TW9kZSA9PT0gJ3NpbmdsZScpIHsKICAgICAgICAgICAgaWYgKHRoaXMuZF9zb3J0RmllbGQgPT09IGNvbHVtbkZpZWxkKSB7CiAgICAgICAgICAgICAgaWYgKHRoaXMucmVtb3ZhYmxlU29ydCAmJiB0aGlzLmRfc29ydE9yZGVyICogLTEgPT09IHRoaXMuZGVmYXVsdFNvcnRPcmRlcikgewogICAgICAgICAgICAgICAgdGhpcy5kX3NvcnRPcmRlciA9IG51bGw7CiAgICAgICAgICAgICAgICB0aGlzLmRfc29ydEZpZWxkID0gbnVsbDsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgdGhpcy5kX3NvcnRPcmRlciA9IHRoaXMuZF9zb3J0T3JkZXIgKiAtMTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgdGhpcy5kX3NvcnRPcmRlciA9IHRoaXMuZGVmYXVsdFNvcnRPcmRlcjsKICAgICAgICAgICAgICB0aGlzLmRfc29ydEZpZWxkID0gY29sdW1uRmllbGQ7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpzb3J0RmllbGQnLCB0aGlzLmRfc29ydEZpZWxkKTsKICAgICAgICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOnNvcnRPcmRlcicsIHRoaXMuZF9zb3J0T3JkZXIpOwogICAgICAgICAgICB0aGlzLnJlc2V0UGFnZSgpOwogICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnNvcnRNb2RlID09PSAnbXVsdGlwbGUnKSB7CiAgICAgICAgICAgIHZhciBtZXRhS2V5ID0gZXZlbnQubWV0YUtleSB8fCBldmVudC5jdHJsS2V5OwoKICAgICAgICAgICAgaWYgKCFtZXRhS2V5KSB7CiAgICAgICAgICAgICAgdGhpcy5kX211bHRpU29ydE1ldGEgPSB0aGlzLmRfbXVsdGlTb3J0TWV0YS5maWx0ZXIoZnVuY3Rpb24gKG1ldGEpIHsKICAgICAgICAgICAgICAgIHJldHVybiBtZXRhLmZpZWxkID09PSBjb2x1bW5GaWVsZDsKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgdGhpcy5hZGRNdWx0aVNvcnRGaWVsZChjb2x1bW5GaWVsZCk7CiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTptdWx0aVNvcnRNZXRhJywgdGhpcy5kX211bHRpU29ydE1ldGEpOwogICAgICAgICAgfQoKICAgICAgICAgIHRoaXMuJGVtaXQoJ3NvcnQnLCB0aGlzLmNyZWF0ZUxhenlMb2FkRXZlbnQoZXZlbnQpKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBzb3J0U2luZ2xlOiBmdW5jdGlvbiBzb3J0U2luZ2xlKHZhbHVlKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgZGF0YSA9IF90b0NvbnN1bWFibGVBcnJheSh2YWx1ZSk7CgogICAgICBkYXRhLnNvcnQoZnVuY3Rpb24gKGRhdGExLCBkYXRhMikgewogICAgICAgIHZhciB2YWx1ZTEgPSBPYmplY3RVdGlscy5yZXNvbHZlRmllbGREYXRhKGRhdGExLCBfdGhpcy5kX3NvcnRGaWVsZCk7CiAgICAgICAgdmFyIHZhbHVlMiA9IE9iamVjdFV0aWxzLnJlc29sdmVGaWVsZERhdGEoZGF0YTIsIF90aGlzLmRfc29ydEZpZWxkKTsKICAgICAgICB2YXIgcmVzdWx0ID0gbnVsbDsKICAgICAgICBpZiAodmFsdWUxID09IG51bGwgJiYgdmFsdWUyICE9IG51bGwpIHJlc3VsdCA9IC0xO2Vsc2UgaWYgKHZhbHVlMSAhPSBudWxsICYmIHZhbHVlMiA9PSBudWxsKSByZXN1bHQgPSAxO2Vsc2UgaWYgKHZhbHVlMSA9PSBudWxsICYmIHZhbHVlMiA9PSBudWxsKSByZXN1bHQgPSAwO2Vsc2UgaWYgKHR5cGVvZiB2YWx1ZTEgPT09ICdzdHJpbmcnICYmIHR5cGVvZiB2YWx1ZTIgPT09ICdzdHJpbmcnKSByZXN1bHQgPSB2YWx1ZTEubG9jYWxlQ29tcGFyZSh2YWx1ZTIsIHVuZGVmaW5lZCwgewogICAgICAgICAgbnVtZXJpYzogdHJ1ZQogICAgICAgIH0pO2Vsc2UgcmVzdWx0ID0gdmFsdWUxIDwgdmFsdWUyID8gLTEgOiB2YWx1ZTEgPiB2YWx1ZTIgPyAxIDogMDsKICAgICAgICByZXR1cm4gX3RoaXMuZF9zb3J0T3JkZXIgKiByZXN1bHQ7CiAgICAgIH0pOwogICAgICByZXR1cm4gZGF0YTsKICAgIH0sCiAgICBzb3J0TXVsdGlwbGU6IGZ1bmN0aW9uIHNvcnRNdWx0aXBsZSh2YWx1ZSkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHZhciBkYXRhID0gX3RvQ29uc3VtYWJsZUFycmF5KHZhbHVlKTsKCiAgICAgIGRhdGEuc29ydChmdW5jdGlvbiAoZGF0YTEsIGRhdGEyKSB7CiAgICAgICAgcmV0dXJuIF90aGlzMi5tdWx0aXNvcnRGaWVsZChkYXRhMSwgZGF0YTIsIDApOwogICAgICB9KTsKICAgICAgcmV0dXJuIGRhdGE7CiAgICB9LAogICAgbXVsdGlzb3J0RmllbGQ6IGZ1bmN0aW9uIG11bHRpc29ydEZpZWxkKGRhdGExLCBkYXRhMiwgaW5kZXgpIHsKICAgICAgdmFyIHZhbHVlMSA9IE9iamVjdFV0aWxzLnJlc29sdmVGaWVsZERhdGEoZGF0YTEsIHRoaXMuZF9tdWx0aVNvcnRNZXRhW2luZGV4XS5maWVsZCk7CiAgICAgIHZhciB2YWx1ZTIgPSBPYmplY3RVdGlscy5yZXNvbHZlRmllbGREYXRhKGRhdGEyLCB0aGlzLmRfbXVsdGlTb3J0TWV0YVtpbmRleF0uZmllbGQpOwogICAgICB2YXIgcmVzdWx0ID0gbnVsbDsKCiAgICAgIGlmICh0eXBlb2YgdmFsdWUxID09PSAnc3RyaW5nJyB8fCB2YWx1ZTEgaW5zdGFuY2VvZiBTdHJpbmcpIHsKICAgICAgICBpZiAodmFsdWUxLmxvY2FsZUNvbXBhcmUgJiYgdmFsdWUxICE9PSB2YWx1ZTIpIHsKICAgICAgICAgIHJldHVybiB0aGlzLmRfbXVsdGlTb3J0TWV0YVtpbmRleF0ub3JkZXIgKiB2YWx1ZTEubG9jYWxlQ29tcGFyZSh2YWx1ZTIsIHVuZGVmaW5lZCwgewogICAgICAgICAgICBudW1lcmljOiB0cnVlCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmVzdWx0ID0gdmFsdWUxIDwgdmFsdWUyID8gLTEgOiAxOwogICAgICB9CgogICAgICBpZiAodmFsdWUxID09PSB2YWx1ZTIpIHsKICAgICAgICByZXR1cm4gdGhpcy5kX211bHRpU29ydE1ldGEubGVuZ3RoIC0gMSA+IGluZGV4ID8gdGhpcy5tdWx0aXNvcnRGaWVsZChkYXRhMSwgZGF0YTIsIGluZGV4ICsgMSkgOiAwOwogICAgICB9CgogICAgICByZXR1cm4gdGhpcy5kX211bHRpU29ydE1ldGFbaW5kZXhdLm9yZGVyICogcmVzdWx0OwogICAgfSwKICAgIGFkZE11bHRpU29ydEZpZWxkOiBmdW5jdGlvbiBhZGRNdWx0aVNvcnRGaWVsZChmaWVsZCkgewogICAgICB2YXIgaW5kZXggPSB0aGlzLmRfbXVsdGlTb3J0TWV0YS5maW5kSW5kZXgoZnVuY3Rpb24gKG1ldGEpIHsKICAgICAgICByZXR1cm4gbWV0YS5maWVsZCA9PT0gZmllbGQ7CiAgICAgIH0pOwoKICAgICAgaWYgKGluZGV4ID49IDApIHsKICAgICAgICBpZiAodGhpcy5yZW1vdmFibGVTb3J0ICYmIHRoaXMuZF9tdWx0aVNvcnRNZXRhW2luZGV4XS5vcmRlciAqIC0xID09PSB0aGlzLmRlZmF1bHRTb3J0T3JkZXIpIHRoaXMuZF9tdWx0aVNvcnRNZXRhLnNwbGljZShpbmRleCwgMSk7ZWxzZSB0aGlzLmRfbXVsdGlTb3J0TWV0YVtpbmRleF0gPSB7CiAgICAgICAgICBmaWVsZDogZmllbGQsCiAgICAgICAgICBvcmRlcjogdGhpcy5kX211bHRpU29ydE1ldGFbaW5kZXhdLm9yZGVyICogLTEKICAgICAgICB9OwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuZF9tdWx0aVNvcnRNZXRhLnB1c2goewogICAgICAgICAgZmllbGQ6IGZpZWxkLAogICAgICAgICAgb3JkZXI6IHRoaXMuZGVmYXVsdFNvcnRPcmRlcgogICAgICAgIH0pOwogICAgICB9CgogICAgICB0aGlzLmRfbXVsdGlTb3J0TWV0YSA9IF90b0NvbnN1bWFibGVBcnJheSh0aGlzLmRfbXVsdGlTb3J0TWV0YSk7CiAgICB9LAogICAgZmlsdGVyOiBmdW5jdGlvbiBmaWx0ZXIoZGF0YSkgewogICAgICB2YXIgZmlsdGVyZWRWYWx1ZSA9IFtdOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgdmFyIGxvY2FsTWF0Y2ggPSB0cnVlOwogICAgICAgIHZhciBnbG9iYWxNYXRjaCA9IGZhbHNlOwoKICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHRoaXMuY29sdW1ucy5sZW5ndGg7IGorKykgewogICAgICAgICAgdmFyIGNvbCA9IHRoaXMuY29sdW1uc1tqXTsKICAgICAgICAgIHZhciBjb2x1bW5GaWVsZCA9IGNvbC5maWx0ZXJGaWVsZCB8fCBjb2wuZmllbGQ7IC8vbG9jYWwKCiAgICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRoaXMuZmlsdGVycywgY29sdW1uRmllbGQpKSB7CiAgICAgICAgICAgIHZhciBmaWx0ZXJWYWx1ZSA9IHRoaXMuZmlsdGVyc1tjb2x1bW5GaWVsZF07CiAgICAgICAgICAgIHZhciBkYXRhRmllbGRWYWx1ZSA9IE9iamVjdFV0aWxzLnJlc29sdmVGaWVsZERhdGEoZGF0YVtpXSwgY29sdW1uRmllbGQpOwogICAgICAgICAgICB2YXIgZmlsdGVyQ29uc3RyYWludCA9IGNvbC5maWx0ZXJNYXRjaE1vZGUgPT09ICdjdXN0b20nID8gY29sLmZpbHRlckZ1bmN0aW9uIDogRmlsdGVyVXRpbHNbY29sLmZpbHRlck1hdGNoTW9kZV07CgogICAgICAgICAgICBpZiAoIWZpbHRlckNvbnN0cmFpbnQoZGF0YUZpZWxkVmFsdWUsIGZpbHRlclZhbHVlLCB0aGlzLmZpbHRlckxvY2FsZSkpIHsKICAgICAgICAgICAgICBsb2NhbE1hdGNoID0gZmFsc2U7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICghbG9jYWxNYXRjaCkgewogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKCFjb2wuZXhjbHVkZUdsb2JhbEZpbHRlciAmJiB0aGlzLmhhc0dsb2JhbEZpbHRlciAmJiAhZ2xvYmFsTWF0Y2gpIHsKICAgICAgICAgICAgZ2xvYmFsTWF0Y2ggPSBGaWx0ZXJVdGlscy5jb250YWlucyhPYmplY3RVdGlscy5yZXNvbHZlRmllbGREYXRhKGRhdGFbaV0sIGNvbHVtbkZpZWxkKSwgdGhpcy5maWx0ZXJzWydnbG9iYWwnXSwgdGhpcy5maWx0ZXJMb2NhbGUpOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgdmFyIG1hdGNoZXMgPSBsb2NhbE1hdGNoOwoKICAgICAgICBpZiAodGhpcy5oYXNHbG9iYWxGaWx0ZXIpIHsKICAgICAgICAgIG1hdGNoZXMgPSBsb2NhbE1hdGNoICYmIGdsb2JhbE1hdGNoOwogICAgICAgIH0KCiAgICAgICAgaWYgKG1hdGNoZXMpIHsKICAgICAgICAgIGZpbHRlcmVkVmFsdWUucHVzaChkYXRhW2ldKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmIChmaWx0ZXJlZFZhbHVlLmxlbmd0aCA9PT0gZGF0YS5sZW5ndGgpIHsKICAgICAgICBmaWx0ZXJlZFZhbHVlID0gZGF0YTsKICAgICAgfQoKICAgICAgdmFyIGZpbHRlckV2ZW50ID0gdGhpcy5jcmVhdGVMYXp5TG9hZEV2ZW50KCk7CiAgICAgIGZpbHRlckV2ZW50LmZpbHRlcmVkVmFsdWUgPSBmaWx0ZXJlZFZhbHVlOwogICAgICB0aGlzLiRlbWl0KCdmaWx0ZXInLCBmaWx0ZXJFdmVudCk7CiAgICAgIHJldHVybiBmaWx0ZXJlZFZhbHVlOwogICAgfSwKICAgIG9uUm93Q2xpY2s6IGZ1bmN0aW9uIG9uUm93Q2xpY2soZSkgewogICAgICB2YXIgZXZlbnQgPSBlLm9yaWdpbmFsRXZlbnQ7CgogICAgICBpZiAoRG9tSGFuZGxlci5pc0NsaWNrYWJsZShldmVudC50YXJnZXQpKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLiRlbWl0KCdyb3ctY2xpY2snLCBlKTsKCiAgICAgIGlmICh0aGlzLnNlbGVjdGlvbk1vZGUpIHsKICAgICAgICB2YXIgcm93RGF0YSA9IGUuZGF0YTsKICAgICAgICB2YXIgcm93SW5kZXggPSBlLmluZGV4OwoKICAgICAgICBpZiAodGhpcy5pc011bHRpcGxlU2VsZWN0aW9uTW9kZSgpICYmIGV2ZW50LnNoaWZ0S2V5ICYmIHRoaXMuYW5jaG9yUm93SW5kZXggIT0gbnVsbCkgewogICAgICAgICAgRG9tSGFuZGxlci5jbGVhclNlbGVjdGlvbigpOwogICAgICAgICAgdGhpcy5yYW5nZVJvd0luZGV4ID0gcm93SW5kZXg7CiAgICAgICAgICB0aGlzLnNlbGVjdFJhbmdlKGV2ZW50KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdmFyIHNlbGVjdGVkID0gdGhpcy5pc1NlbGVjdGVkKHJvd0RhdGEpOwogICAgICAgICAgdmFyIG1ldGFTZWxlY3Rpb24gPSB0aGlzLnJvd1RvdWNoZWQgPyBmYWxzZSA6IHRoaXMubWV0YUtleVNlbGVjdGlvbjsKICAgICAgICAgIHRoaXMuYW5jaG9yUm93SW5kZXggPSByb3dJbmRleDsKICAgICAgICAgIHRoaXMucmFuZ2VSb3dJbmRleCA9IHJvd0luZGV4OwoKICAgICAgICAgIGlmIChtZXRhU2VsZWN0aW9uKSB7CiAgICAgICAgICAgIHZhciBtZXRhS2V5ID0gZXZlbnQubWV0YUtleSB8fCBldmVudC5jdHJsS2V5OwoKICAgICAgICAgICAgaWYgKHNlbGVjdGVkICYmIG1ldGFLZXkpIHsKICAgICAgICAgICAgICBpZiAodGhpcy5pc1NpbmdsZVNlbGVjdGlvbk1vZGUoKSkgewogICAgICAgICAgICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOnNlbGVjdGlvbicsIG51bGwpOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB2YXIgc2VsZWN0aW9uSW5kZXggPSB0aGlzLmZpbmRJbmRleEluU2VsZWN0aW9uKHJvd0RhdGEpOwoKICAgICAgICAgICAgICAgIHZhciBfc2VsZWN0aW9uID0gdGhpcy5zZWxlY3Rpb24uZmlsdGVyKGZ1bmN0aW9uICh2YWwsIGkpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGkgIT0gc2VsZWN0aW9uSW5kZXg7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6c2VsZWN0aW9uJywgX3NlbGVjdGlvbik7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICB0aGlzLiRlbWl0KCdyb3ctdW5zZWxlY3QnLCB7CiAgICAgICAgICAgICAgICBvcmlnaW5hbEV2ZW50OiBldmVudCwKICAgICAgICAgICAgICAgIGRhdGE6IHJvd0RhdGEsCiAgICAgICAgICAgICAgICBpbmRleDogZXZlbnQuaW5kZXgsCiAgICAgICAgICAgICAgICB0eXBlOiAncm93JwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIGlmICh0aGlzLmlzU2luZ2xlU2VsZWN0aW9uTW9kZSgpKSB7CiAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6c2VsZWN0aW9uJywgcm93RGF0YSk7CiAgICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLmlzTXVsdGlwbGVTZWxlY3Rpb25Nb2RlKCkpIHsKICAgICAgICAgICAgICAgIHZhciBfc2VsZWN0aW9uMiA9IG1ldGFLZXkgPyB0aGlzLnNlbGVjdGlvbiB8fCBbXSA6IFtdOwoKICAgICAgICAgICAgICAgIF9zZWxlY3Rpb24yID0gW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShfc2VsZWN0aW9uMiksIFtyb3dEYXRhXSk7CiAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6c2VsZWN0aW9uJywgX3NlbGVjdGlvbjIpOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgdGhpcy4kZW1pdCgncm93LXNlbGVjdCcsIHsKICAgICAgICAgICAgICAgIG9yaWdpbmFsRXZlbnQ6IGV2ZW50LAogICAgICAgICAgICAgICAgZGF0YTogcm93RGF0YSwKICAgICAgICAgICAgICAgIGluZGV4OiBldmVudC5pbmRleCwKICAgICAgICAgICAgICAgIHR5cGU6ICdyb3cnCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGlmICh0aGlzLnNlbGVjdGlvbk1vZGUgPT09ICdzaW5nbGUnKSB7CiAgICAgICAgICAgICAgaWYgKHNlbGVjdGVkKSB7CiAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6c2VsZWN0aW9uJywgbnVsbCk7CiAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCdyb3ctdW5zZWxlY3QnLCB7CiAgICAgICAgICAgICAgICAgIG9yaWdpbmFsRXZlbnQ6IGV2ZW50LAogICAgICAgICAgICAgICAgICBkYXRhOiByb3dEYXRhLAogICAgICAgICAgICAgICAgICBpbmRleDogZXZlbnQuaW5kZXgsCiAgICAgICAgICAgICAgICAgIHR5cGU6ICdyb3cnCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOnNlbGVjdGlvbicsIHJvd0RhdGEpOwogICAgICAgICAgICAgICAgdGhpcy4kZW1pdCgncm93LXNlbGVjdCcsIHsKICAgICAgICAgICAgICAgICAgb3JpZ2luYWxFdmVudDogZXZlbnQsCiAgICAgICAgICAgICAgICAgIGRhdGE6IHJvd0RhdGEsCiAgICAgICAgICAgICAgICAgIGluZGV4OiBldmVudC5pbmRleCwKICAgICAgICAgICAgICAgICAgdHlwZTogJ3JvdycKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnNlbGVjdGlvbk1vZGUgPT09ICdtdWx0aXBsZScpIHsKICAgICAgICAgICAgICBpZiAoc2VsZWN0ZWQpIHsKICAgICAgICAgICAgICAgIHZhciBfc2VsZWN0aW9uSW5kZXggPSB0aGlzLmZpbmRJbmRleEluU2VsZWN0aW9uKHJvd0RhdGEpOwoKICAgICAgICAgICAgICAgIHZhciBfc2VsZWN0aW9uMyA9IHRoaXMuc2VsZWN0aW9uLmZpbHRlcihmdW5jdGlvbiAodmFsLCBpKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBpICE9IF9zZWxlY3Rpb25JbmRleDsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpzZWxlY3Rpb24nLCBfc2VsZWN0aW9uMyk7CiAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCdyb3ctdW5zZWxlY3QnLCB7CiAgICAgICAgICAgICAgICAgIG9yaWdpbmFsRXZlbnQ6IGV2ZW50LAogICAgICAgICAgICAgICAgICBkYXRhOiByb3dEYXRhLAogICAgICAgICAgICAgICAgICBpbmRleDogZXZlbnQuaW5kZXgsCiAgICAgICAgICAgICAgICAgIHR5cGU6ICdyb3cnCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgdmFyIF9zZWxlY3Rpb240ID0gdGhpcy5zZWxlY3Rpb24gPyBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMuc2VsZWN0aW9uKSwgW3Jvd0RhdGFdKSA6IFtyb3dEYXRhXTsKCiAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6c2VsZWN0aW9uJywgX3NlbGVjdGlvbjQpOwogICAgICAgICAgICAgICAgdGhpcy4kZW1pdCgncm93LXNlbGVjdCcsIHsKICAgICAgICAgICAgICAgICAgb3JpZ2luYWxFdmVudDogZXZlbnQsCiAgICAgICAgICAgICAgICAgIGRhdGE6IHJvd0RhdGEsCiAgICAgICAgICAgICAgICAgIGluZGV4OiBldmVudC5pbmRleCwKICAgICAgICAgICAgICAgICAgdHlwZTogJ3JvdycKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQoKICAgICAgdGhpcy5yb3dUb3VjaGVkID0gZmFsc2U7CiAgICB9LAogICAgb25Sb3dSaWdodENsaWNrOiBmdW5jdGlvbiBvblJvd1JpZ2h0Q2xpY2soZXZlbnQpIHsKICAgICAgRG9tSGFuZGxlci5jbGVhclNlbGVjdGlvbigpOwogICAgICBldmVudC5vcmlnaW5hbEV2ZW50LnRhcmdldC5mb2N1cygpOwogICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6Y29udGV4dE1lbnVTZWxlY3Rpb24nLCBldmVudC5kYXRhKTsKICAgICAgdGhpcy4kZW1pdCgncm93LWNvbnRleHRtZW51JywgZXZlbnQpOwogICAgfSwKICAgIG9uUm93VG91Y2hFbmQ6IGZ1bmN0aW9uIG9uUm93VG91Y2hFbmQoKSB7CiAgICAgIHRoaXMucm93VG91Y2hlZCA9IHRydWU7CiAgICB9LAogICAgb25Sb3dLZXlEb3duOiBmdW5jdGlvbiBvblJvd0tleURvd24oZSkgewogICAgICB2YXIgZXZlbnQgPSBlLm9yaWdpbmFsRXZlbnQ7CiAgICAgIHZhciByb3dEYXRhID0gZS5kYXRhOwogICAgICB2YXIgcm93SW5kZXggPSBlLmluZGV4OwoKICAgICAgaWYgKHRoaXMuc2VsZWN0aW9uTW9kZSkgewogICAgICAgIHZhciByb3cgPSBldmVudC50YXJnZXQ7CgogICAgICAgIHN3aXRjaCAoZXZlbnQud2hpY2gpIHsKICAgICAgICAgIC8vZG93biBhcnJvdwogICAgICAgICAgY2FzZSA0MDoKICAgICAgICAgICAgdmFyIG5leHRSb3cgPSB0aGlzLmZpbmROZXh0U2VsZWN0YWJsZVJvdyhyb3cpOwoKICAgICAgICAgICAgaWYgKG5leHRSb3cpIHsKICAgICAgICAgICAgICBuZXh0Um93LmZvY3VzKCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgLy91cCBhcnJvdwoKICAgICAgICAgIGNhc2UgMzg6CiAgICAgICAgICAgIHZhciBwcmV2Um93ID0gdGhpcy5maW5kUHJldlNlbGVjdGFibGVSb3cocm93KTsKCiAgICAgICAgICAgIGlmIChwcmV2Um93KSB7CiAgICAgICAgICAgICAgcHJldlJvdy5mb2N1cygpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIC8vZW50ZXIKCiAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICB0aGlzLm9uUm93Q2xpY2soewogICAgICAgICAgICAgIG9yaWdpbmFsRXZlbnQ6IGV2ZW50LAogICAgICAgICAgICAgIGRhdGE6IHJvd0RhdGEsCiAgICAgICAgICAgICAgaW5kZXg6IHJvd0luZGV4CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBkZWZhdWx0OgogICAgICAgICAgICAvL25vIG9wCiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGZpbmROZXh0U2VsZWN0YWJsZVJvdzogZnVuY3Rpb24gZmluZE5leHRTZWxlY3RhYmxlUm93KHJvdykgewogICAgICB2YXIgbmV4dFJvdyA9IHJvdy5uZXh0RWxlbWVudFNpYmxpbmc7CgogICAgICBpZiAobmV4dFJvdykgewogICAgICAgIGlmIChEb21IYW5kbGVyLmhhc0NsYXNzKG5leHRSb3csICdwLWRhdGF0YWJsZS1yb3cnKSkgcmV0dXJuIG5leHRSb3c7ZWxzZSByZXR1cm4gdGhpcy5maW5kTmV4dFNlbGVjdGFibGVSb3cobmV4dFJvdyk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgIH0KICAgIH0sCiAgICBmaW5kUHJldlNlbGVjdGFibGVSb3c6IGZ1bmN0aW9uIGZpbmRQcmV2U2VsZWN0YWJsZVJvdyhyb3cpIHsKICAgICAgdmFyIHByZXZSb3cgPSByb3cucHJldmlvdXNFbGVtZW50U2libGluZzsKCiAgICAgIGlmIChwcmV2Um93KSB7CiAgICAgICAgaWYgKERvbUhhbmRsZXIuaGFzQ2xhc3MocHJldlJvdywgJ3AtZGF0YXRhYmxlLXJvdycpKSByZXR1cm4gcHJldlJvdztlbHNlIHJldHVybiB0aGlzLmZpbmRQcmV2U2VsZWN0YWJsZVJvdyhwcmV2Um93KTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfQogICAgfSwKICAgIHRvZ2dsZVJvd1dpdGhSYWRpbzogZnVuY3Rpb24gdG9nZ2xlUm93V2l0aFJhZGlvKGV2ZW50KSB7CiAgICAgIHZhciByb3dEYXRhID0gZXZlbnQuZGF0YTsKCiAgICAgIGlmICh0aGlzLmlzU2VsZWN0ZWQocm93RGF0YSkpIHsKICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6c2VsZWN0aW9uJywgbnVsbCk7CiAgICAgICAgdGhpcy4kZW1pdCgncm93LXVuc2VsZWN0JywgewogICAgICAgICAgb3JpZ2luYWxFdmVudDogZXZlbnQsCiAgICAgICAgICBkYXRhOiByb3dEYXRhLAogICAgICAgICAgdHlwZTogJ3JhZGlvYnV0dG9uJwogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpzZWxlY3Rpb24nLCByb3dEYXRhKTsKICAgICAgICB0aGlzLiRlbWl0KCdyb3ctc2VsZWN0JywgewogICAgICAgICAgb3JpZ2luYWxFdmVudDogZXZlbnQsCiAgICAgICAgICBkYXRhOiByb3dEYXRhLAogICAgICAgICAgdHlwZTogJ3JhZGlvYnV0dG9uJwogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgdG9nZ2xlUm93V2l0aENoZWNrYm94OiBmdW5jdGlvbiB0b2dnbGVSb3dXaXRoQ2hlY2tib3goZXZlbnQpIHsKICAgICAgdmFyIHJvd0RhdGEgPSBldmVudC5kYXRhOwoKICAgICAgaWYgKHRoaXMuaXNTZWxlY3RlZChyb3dEYXRhKSkgewogICAgICAgIHZhciBzZWxlY3Rpb25JbmRleCA9IHRoaXMuZmluZEluZGV4SW5TZWxlY3Rpb24ocm93RGF0YSk7CgogICAgICAgIHZhciBfc2VsZWN0aW9uID0gdGhpcy5zZWxlY3Rpb24uZmlsdGVyKGZ1bmN0aW9uICh2YWwsIGkpIHsKICAgICAgICAgIHJldHVybiBpICE9IHNlbGVjdGlvbkluZGV4OwogICAgICAgIH0pOwoKICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6c2VsZWN0aW9uJywgX3NlbGVjdGlvbik7CiAgICAgICAgdGhpcy4kZW1pdCgncm93LXVuc2VsZWN0JywgewogICAgICAgICAgb3JpZ2luYWxFdmVudDogZXZlbnQsCiAgICAgICAgICBkYXRhOiByb3dEYXRhLAogICAgICAgICAgdHlwZTogJ2NoZWNrYm94JwogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIHZhciBfc2VsZWN0aW9uNSA9IHRoaXMuc2VsZWN0aW9uID8gX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMuc2VsZWN0aW9uKSA6IFtdOwoKICAgICAgICBfc2VsZWN0aW9uNSA9IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoX3NlbGVjdGlvbjUpLCBbcm93RGF0YV0pOwogICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpzZWxlY3Rpb24nLCBfc2VsZWN0aW9uNSk7CiAgICAgICAgdGhpcy4kZW1pdCgncm93LXNlbGVjdCcsIHsKICAgICAgICAgIG9yaWdpbmFsRXZlbnQ6IGV2ZW50LAogICAgICAgICAgZGF0YTogcm93RGF0YSwKICAgICAgICAgIHR5cGU6ICdjaGVja2JveCcKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIHRvZ2dsZVJvd3NXaXRoQ2hlY2tib3g6IGZ1bmN0aW9uIHRvZ2dsZVJvd3NXaXRoQ2hlY2tib3goZXZlbnQpIHsKICAgICAgdmFyIHByb2Nlc3NlZERhdGEgPSB0aGlzLnByb2Nlc3NlZERhdGE7CiAgICAgIHZhciBjaGVja2VkID0gdGhpcy5hbGxSb3dzU2VsZWN0ZWQ7CgogICAgICB2YXIgX3NlbGVjdGlvbiA9IGNoZWNrZWQgPyBbXSA6IHByb2Nlc3NlZERhdGEgPyBfdG9Db25zdW1hYmxlQXJyYXkocHJvY2Vzc2VkRGF0YSkgOiBfdG9Db25zdW1hYmxlQXJyYXkodGhpcy52YWx1ZSk7CgogICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6c2VsZWN0aW9uJywgX3NlbGVjdGlvbik7CiAgICAgIGlmIChjaGVja2VkKSB0aGlzLiRlbWl0KCdyb3ctdW5zZWxlY3QtYWxsJywgewogICAgICAgIG9yaWdpbmFsRXZlbnQ6IGV2ZW50CiAgICAgIH0pO2Vsc2UgdGhpcy4kZW1pdCgncm93LXNlbGVjdC1hbGwnLCB7CiAgICAgICAgb3JpZ2luYWxFdmVudDogZXZlbnQsCiAgICAgICAgZGF0YTogX3NlbGVjdGlvbgogICAgICB9KTsKICAgIH0sCiAgICBpc1NpbmdsZVNlbGVjdGlvbk1vZGU6IGZ1bmN0aW9uIGlzU2luZ2xlU2VsZWN0aW9uTW9kZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0aW9uTW9kZSA9PT0gJ3NpbmdsZSc7CiAgICB9LAogICAgaXNNdWx0aXBsZVNlbGVjdGlvbk1vZGU6IGZ1bmN0aW9uIGlzTXVsdGlwbGVTZWxlY3Rpb25Nb2RlKCkgewogICAgICByZXR1cm4gdGhpcy5zZWxlY3Rpb25Nb2RlID09PSAnbXVsdGlwbGUnOwogICAgfSwKICAgIGlzU2VsZWN0ZWQ6IGZ1bmN0aW9uIGlzU2VsZWN0ZWQocm93RGF0YSkgewogICAgICBpZiAocm93RGF0YSAmJiB0aGlzLnNlbGVjdGlvbikgewogICAgICAgIGlmICh0aGlzLmRhdGFLZXkpIHsKICAgICAgICAgIHJldHVybiB0aGlzLmRfc2VsZWN0aW9uS2V5cyA/IHRoaXMuZF9zZWxlY3Rpb25LZXlzW09iamVjdFV0aWxzLnJlc29sdmVGaWVsZERhdGEocm93RGF0YSwgdGhpcy5kYXRhS2V5KV0gIT09IHVuZGVmaW5lZCA6IGZhbHNlOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBpZiAodGhpcy5zZWxlY3Rpb24gaW5zdGFuY2VvZiBBcnJheSkgcmV0dXJuIHRoaXMuZmluZEluZGV4SW5TZWxlY3Rpb24ocm93RGF0YSkgPiAtMTtlbHNlIHJldHVybiB0aGlzLmVxdWFscyhyb3dEYXRhLCB0aGlzLnNlbGVjdGlvbik7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gZmFsc2U7CiAgICB9LAogICAgZmluZEluZGV4SW5TZWxlY3Rpb246IGZ1bmN0aW9uIGZpbmRJbmRleEluU2VsZWN0aW9uKHJvd0RhdGEpIHsKICAgICAgcmV0dXJuIHRoaXMuZmluZEluZGV4KHJvd0RhdGEsIHRoaXMuc2VsZWN0aW9uKTsKICAgIH0sCiAgICBmaW5kSW5kZXg6IGZ1bmN0aW9uIGZpbmRJbmRleChyb3dEYXRhLCBjb2xsZWN0aW9uKSB7CiAgICAgIHZhciBpbmRleCA9IC0xOwoKICAgICAgaWYgKGNvbGxlY3Rpb24gJiYgY29sbGVjdGlvbi5sZW5ndGgpIHsKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNvbGxlY3Rpb24ubGVuZ3RoOyBpKyspIHsKICAgICAgICAgIGlmICh0aGlzLmVxdWFscyhyb3dEYXRhLCBjb2xsZWN0aW9uW2ldKSkgewogICAgICAgICAgICBpbmRleCA9IGk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIGluZGV4OwogICAgfSwKICAgIHVwZGF0ZVNlbGVjdGlvbktleXM6IGZ1bmN0aW9uIHVwZGF0ZVNlbGVjdGlvbktleXMoc2VsZWN0aW9uKSB7CiAgICAgIHRoaXMuZF9zZWxlY3Rpb25LZXlzID0ge307CgogICAgICBpZiAoQXJyYXkuaXNBcnJheShzZWxlY3Rpb24pKSB7CiAgICAgICAgdmFyIF9pdGVyYXRvcjIgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihzZWxlY3Rpb24pLAogICAgICAgICAgICBfc3RlcDI7CgogICAgICAgIHRyeSB7CiAgICAgICAgICBmb3IgKF9pdGVyYXRvcjIucygpOyAhKF9zdGVwMiA9IF9pdGVyYXRvcjIubigpKS5kb25lOykgewogICAgICAgICAgICB2YXIgZGF0YSA9IF9zdGVwMi52YWx1ZTsKICAgICAgICAgICAgdGhpcy5kX3NlbGVjdGlvbktleXNbU3RyaW5nKE9iamVjdFV0aWxzLnJlc29sdmVGaWVsZERhdGEoZGF0YSwgdGhpcy5kYXRhS2V5KSldID0gMTsKICAgICAgICAgIH0KICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgIF9pdGVyYXRvcjIuZShlcnIpOwogICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICBfaXRlcmF0b3IyLmYoKTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5kX3NlbGVjdGlvbktleXNbU3RyaW5nKE9iamVjdFV0aWxzLnJlc29sdmVGaWVsZERhdGEoc2VsZWN0aW9uLCB0aGlzLmRhdGFLZXkpKV0gPSAxOwogICAgICB9CiAgICB9LAogICAgdXBkYXRlRXhwYW5kZWRSb3dLZXlzOiBmdW5jdGlvbiB1cGRhdGVFeHBhbmRlZFJvd0tleXMoZXhwYW5kZWRSb3dzKSB7CiAgICAgIGlmIChleHBhbmRlZFJvd3MgJiYgZXhwYW5kZWRSb3dzLmxlbmd0aCkgewogICAgICAgIHRoaXMuZF9leHBhbmRlZFJvd0tleXMgPSB7fTsKCiAgICAgICAgdmFyIF9pdGVyYXRvcjMgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihleHBhbmRlZFJvd3MpLAogICAgICAgICAgICBfc3RlcDM7CgogICAgICAgIHRyeSB7CiAgICAgICAgICBmb3IgKF9pdGVyYXRvcjMucygpOyAhKF9zdGVwMyA9IF9pdGVyYXRvcjMubigpKS5kb25lOykgewogICAgICAgICAgICB2YXIgZGF0YSA9IF9zdGVwMy52YWx1ZTsKICAgICAgICAgICAgdGhpcy5kX2V4cGFuZGVkUm93S2V5c1tTdHJpbmcoT2JqZWN0VXRpbHMucmVzb2x2ZUZpZWxkRGF0YShkYXRhLCB0aGlzLmRhdGFLZXkpKV0gPSAxOwogICAgICAgICAgfQogICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgX2l0ZXJhdG9yMy5lKGVycik7CiAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgIF9pdGVyYXRvcjMuZigpOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmRfZXhwYW5kZWRSb3dLZXlzID0gbnVsbDsKICAgICAgfQogICAgfSwKICAgIHVwZGF0ZUVkaXRpbmdSb3dLZXlzOiBmdW5jdGlvbiB1cGRhdGVFZGl0aW5nUm93S2V5cyhlZGl0aW5nUm93cykgewogICAgICBpZiAoZWRpdGluZ1Jvd3MgJiYgZWRpdGluZ1Jvd3MubGVuZ3RoKSB7CiAgICAgICAgdGhpcy5kX2VkaXRpbmdSb3dLZXlzID0ge307CgogICAgICAgIHZhciBfaXRlcmF0b3I0ID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZWRpdGluZ1Jvd3MpLAogICAgICAgICAgICBfc3RlcDQ7CgogICAgICAgIHRyeSB7CiAgICAgICAgICBmb3IgKF9pdGVyYXRvcjQucygpOyAhKF9zdGVwNCA9IF9pdGVyYXRvcjQubigpKS5kb25lOykgewogICAgICAgICAgICB2YXIgZGF0YSA9IF9zdGVwNC52YWx1ZTsKICAgICAgICAgICAgdGhpcy5kX2VkaXRpbmdSb3dLZXlzW1N0cmluZyhPYmplY3RVdGlscy5yZXNvbHZlRmllbGREYXRhKGRhdGEsIHRoaXMuZGF0YUtleSkpXSA9IDE7CiAgICAgICAgICB9CiAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICBfaXRlcmF0b3I0LmUoZXJyKTsKICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgX2l0ZXJhdG9yNC5mKCk7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuZF9lZGl0aW5nUm93S2V5cyA9IG51bGw7CiAgICAgIH0KICAgIH0sCiAgICBlcXVhbHM6IGZ1bmN0aW9uIGVxdWFscyhkYXRhMSwgZGF0YTIpIHsKICAgICAgcmV0dXJuIHRoaXMuY29tcGFyZVNlbGVjdGlvbkJ5ID09PSAnZXF1YWxzJyA/IGRhdGExID09PSBkYXRhMiA6IE9iamVjdFV0aWxzLmVxdWFscyhkYXRhMSwgZGF0YTIsIHRoaXMuZGF0YUtleSk7CiAgICB9LAogICAgc2VsZWN0UmFuZ2U6IGZ1bmN0aW9uIHNlbGVjdFJhbmdlKGV2ZW50KSB7CiAgICAgIHZhciByYW5nZVN0YXJ0LCByYW5nZUVuZDsKCiAgICAgIGlmICh0aGlzLnJhbmdlUm93SW5kZXggPiB0aGlzLmFuY2hvclJvd0luZGV4KSB7CiAgICAgICAgcmFuZ2VTdGFydCA9IHRoaXMuYW5jaG9yUm93SW5kZXg7CiAgICAgICAgcmFuZ2VFbmQgPSB0aGlzLnJhbmdlUm93SW5kZXg7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5yYW5nZVJvd0luZGV4IDwgdGhpcy5hbmNob3JSb3dJbmRleCkgewogICAgICAgIHJhbmdlU3RhcnQgPSB0aGlzLnJhbmdlUm93SW5kZXg7CiAgICAgICAgcmFuZ2VFbmQgPSB0aGlzLmFuY2hvclJvd0luZGV4OwogICAgICB9IGVsc2UgewogICAgICAgIHJhbmdlU3RhcnQgPSB0aGlzLnJhbmdlUm93SW5kZXg7CiAgICAgICAgcmFuZ2VFbmQgPSB0aGlzLnJhbmdlUm93SW5kZXg7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmxhenkgJiYgdGhpcy5wYWdpbmF0b3IpIHsKICAgICAgICByYW5nZVN0YXJ0IC09IHRoaXMuZmlyc3Q7CiAgICAgICAgcmFuZ2VFbmQgLT0gdGhpcy5maXJzdDsKICAgICAgfQoKICAgICAgdmFyIHZhbHVlID0gdGhpcy5wcm9jZXNzZWREYXRhOwogICAgICB2YXIgX3NlbGVjdGlvbiA9IFtdOwoKICAgICAgZm9yICh2YXIgaSA9IHJhbmdlU3RhcnQ7IGkgPD0gcmFuZ2VFbmQ7IGkrKykgewogICAgICAgIHZhciByYW5nZVJvd0RhdGEgPSB2YWx1ZVtpXTsKCiAgICAgICAgX3NlbGVjdGlvbi5wdXNoKHJhbmdlUm93RGF0YSk7CgogICAgICAgIHRoaXMuJGVtaXQoJ3Jvdy1zZWxlY3QnLCB7CiAgICAgICAgICBvcmlnaW5hbEV2ZW50OiBldmVudCwKICAgICAgICAgIGRhdGE6IHJhbmdlUm93RGF0YSwKICAgICAgICAgIHR5cGU6ICdyb3cnCiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpzZWxlY3Rpb24nLCBfc2VsZWN0aW9uKTsKICAgIH0sCiAgICBleHBvcnRDU1Y6IGZ1bmN0aW9uIGV4cG9ydENTVihvcHRpb25zKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdmFyIGRhdGEgPSB0aGlzLnByb2Nlc3NlZERhdGE7CiAgICAgIHZhciBjc3YgPSAiXHVGRUZGIjsKCiAgICAgIGlmIChvcHRpb25zICYmIG9wdGlvbnMuc2VsZWN0aW9uT25seSkgewogICAgICAgIGRhdGEgPSB0aGlzLnNlbGVjdGlvbiB8fCBbXTsKICAgICAgfSAvL2hlYWRlcnMKCgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuY29sdW1ucy5sZW5ndGg7IGkrKykgewogICAgICAgIHZhciBjb2x1bW4gPSB0aGlzLmNvbHVtbnNbaV07CgogICAgICAgIGlmIChjb2x1bW4uZXhwb3J0YWJsZSAhPT0gZmFsc2UgJiYgY29sdW1uLmZpZWxkKSB7CiAgICAgICAgICBjc3YgKz0gJyInICsgKGNvbHVtbi5oZWFkZXIgfHwgY29sdW1uLmZpZWxkKSArICciJzsKCiAgICAgICAgICBpZiAoaSA8IHRoaXMuY29sdW1ucy5sZW5ndGggLSAxKSB7CiAgICAgICAgICAgIGNzdiArPSB0aGlzLmNzdlNlcGFyYXRvcjsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gLy9ib2R5CgoKICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChyZWNvcmQpIHsKICAgICAgICBjc3YgKz0gJ1xuJzsKCiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IF90aGlzMy5jb2x1bW5zLmxlbmd0aDsgX2krKykgewogICAgICAgICAgdmFyIF9jb2x1bW4gPSBfdGhpczMuY29sdW1uc1tfaV07CgogICAgICAgICAgaWYgKF9jb2x1bW4uZXhwb3J0YWJsZSAhPT0gZmFsc2UgJiYgX2NvbHVtbi5maWVsZCkgewogICAgICAgICAgICB2YXIgY2VsbERhdGEgPSBPYmplY3RVdGlscy5yZXNvbHZlRmllbGREYXRhKHJlY29yZCwgX2NvbHVtbi5maWVsZCk7CgogICAgICAgICAgICBpZiAoY2VsbERhdGEgIT0gbnVsbCkgewogICAgICAgICAgICAgIGlmIChfdGhpczMuZXhwb3J0RnVuY3Rpb24pIHsKICAgICAgICAgICAgICAgIGNlbGxEYXRhID0gX3RoaXMzLmV4cG9ydEZ1bmN0aW9uKHsKICAgICAgICAgICAgICAgICAgZGF0YTogY2VsbERhdGEsCiAgICAgICAgICAgICAgICAgIGZpZWxkOiBfY29sdW1uLmZpZWxkCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9IGVsc2UgY2VsbERhdGEgPSBTdHJpbmcoY2VsbERhdGEpLnJlcGxhY2UoLyIvZywgJyIiJyk7CiAgICAgICAgICAgIH0gZWxzZSBjZWxsRGF0YSA9ICcnOwoKICAgICAgICAgICAgY3N2ICs9ICciJyArIGNlbGxEYXRhICsgJyInOwoKICAgICAgICAgICAgaWYgKF9pIDwgX3RoaXMzLmNvbHVtbnMubGVuZ3RoIC0gMSkgewogICAgICAgICAgICAgIGNzdiArPSBfdGhpczMuY3N2U2VwYXJhdG9yOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgICAgdmFyIGJsb2IgPSBuZXcgQmxvYihbY3N2XSwgewogICAgICAgIHR5cGU6ICd0ZXh0L2NzdjtjaGFyc2V0PXV0Zi04OycKICAgICAgfSk7CgogICAgICBpZiAod2luZG93Lm5hdmlnYXRvci5tc1NhdmVPck9wZW5CbG9iKSB7CiAgICAgICAgbmF2aWdhdG9yLm1zU2F2ZU9yT3BlbkJsb2IoYmxvYiwgdGhpcy5leHBvcnRGaWxlbmFtZSArICcuY3N2Jyk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdmFyIGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhIik7CiAgICAgICAgbGluay5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobGluayk7CgogICAgICAgIGlmIChsaW5rLmRvd25sb2FkICE9PSB1bmRlZmluZWQpIHsKICAgICAgICAgIGxpbmsuc2V0QXR0cmlidXRlKCdocmVmJywgVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKSk7CiAgICAgICAgICBsaW5rLnNldEF0dHJpYnV0ZSgnZG93bmxvYWQnLCB0aGlzLmV4cG9ydEZpbGVuYW1lICsgJy5jc3YnKTsKICAgICAgICAgIGxpbmsuY2xpY2soKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgY3N2ID0gJ2RhdGE6dGV4dC9jc3Y7Y2hhcnNldD11dGYtOCwnICsgY3N2OwogICAgICAgICAgd2luZG93Lm9wZW4oZW5jb2RlVVJJKGNzdikpOwogICAgICAgIH0KCiAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChsaW5rKTsKICAgICAgfQogICAgfSwKICAgIHJlc2V0UGFnZTogZnVuY3Rpb24gcmVzZXRQYWdlKCkgewogICAgICB0aGlzLmRfZmlyc3QgPSAwOwogICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6Zmlyc3QnLCB0aGlzLmRfZmlyc3QpOwogICAgfSwKICAgIG9uQ29sdW1uUmVzaXplU3RhcnQ6IGZ1bmN0aW9uIG9uQ29sdW1uUmVzaXplU3RhcnQoZXZlbnQpIHsKICAgICAgdmFyIGNvbnRhaW5lckxlZnQgPSBEb21IYW5kbGVyLmdldE9mZnNldCh0aGlzLiRlbCkubGVmdDsKICAgICAgdGhpcy5yZXNpemVDb2x1bW5FbGVtZW50ID0gZXZlbnQudGFyZ2V0LnBhcmVudEVsZW1lbnQ7CiAgICAgIHRoaXMuY29sdW1uUmVzaXppbmcgPSB0cnVlOwogICAgICB0aGlzLmxhc3RSZXNpemVIZWxwZXJYID0gZXZlbnQucGFnZVggLSBjb250YWluZXJMZWZ0ICsgdGhpcy4kZWwuc2Nyb2xsTGVmdDsKICAgICAgdGhpcy5iaW5kQ29sdW1uUmVzaXplRXZlbnRzKCk7CiAgICB9LAogICAgb25Db2x1bW5SZXNpemU6IGZ1bmN0aW9uIG9uQ29sdW1uUmVzaXplKGV2ZW50KSB7CiAgICAgIHZhciBjb250YWluZXJMZWZ0ID0gRG9tSGFuZGxlci5nZXRPZmZzZXQodGhpcy4kZWwpLmxlZnQ7CiAgICAgIERvbUhhbmRsZXIuYWRkQ2xhc3ModGhpcy4kZWwsICdwLXVuc2VsZWN0YWJsZS10ZXh0Jyk7CiAgICAgIHRoaXMuJHJlZnMucmVzaXplSGVscGVyLnN0eWxlLmhlaWdodCA9IHRoaXMuJGVsLm9mZnNldEhlaWdodCArICdweCc7CiAgICAgIHRoaXMuJHJlZnMucmVzaXplSGVscGVyLnN0eWxlLnRvcCA9IDAgKyAncHgnOwogICAgICB0aGlzLiRyZWZzLnJlc2l6ZUhlbHBlci5zdHlsZS5sZWZ0ID0gZXZlbnQucGFnZVggLSBjb250YWluZXJMZWZ0ICsgdGhpcy4kZWwuc2Nyb2xsTGVmdCArICdweCc7CiAgICAgIHRoaXMuJHJlZnMucmVzaXplSGVscGVyLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snOwogICAgfSwKICAgIG9uQ29sdW1uUmVzaXplRW5kOiBmdW5jdGlvbiBvbkNvbHVtblJlc2l6ZUVuZCgpIHsKICAgICAgdmFyIGRlbHRhID0gdGhpcy4kcmVmcy5yZXNpemVIZWxwZXIub2Zmc2V0TGVmdCAtIHRoaXMubGFzdFJlc2l6ZUhlbHBlclg7CiAgICAgIHZhciBjb2x1bW5XaWR0aCA9IHRoaXMucmVzaXplQ29sdW1uRWxlbWVudC5vZmZzZXRXaWR0aDsKICAgICAgdmFyIG5ld0NvbHVtbldpZHRoID0gY29sdW1uV2lkdGggKyBkZWx0YTsKICAgICAgdmFyIG1pbldpZHRoID0gdGhpcy5yZXNpemVDb2x1bW5FbGVtZW50LnN0eWxlLm1pbldpZHRoIHx8IDE1OwoKICAgICAgaWYgKGNvbHVtbldpZHRoICsgZGVsdGEgPiBwYXJzZUludChtaW5XaWR0aCwgMTApKSB7CiAgICAgICAgaWYgKHRoaXMuY29sdW1uUmVzaXplTW9kZSA9PT0gJ2ZpdCcpIHsKICAgICAgICAgIHZhciBuZXh0Q29sdW1uID0gdGhpcy5yZXNpemVDb2x1bW5FbGVtZW50Lm5leHRFbGVtZW50U2libGluZzsKICAgICAgICAgIHZhciBuZXh0Q29sdW1uV2lkdGggPSBuZXh0Q29sdW1uLm9mZnNldFdpZHRoIC0gZGVsdGE7CgogICAgICAgICAgaWYgKG5ld0NvbHVtbldpZHRoID4gMTUgJiYgbmV4dENvbHVtbldpZHRoID4gMTUpIHsKICAgICAgICAgICAgaWYgKHRoaXMuc2Nyb2xsYWJsZSkgewogICAgICAgICAgICAgIHZhciBzY3JvbGxhYmxlVmlldyA9IHRoaXMuZmluZFBhcmVudFNjcm9sbGFibGVWaWV3KHRoaXMucmVzaXplQ29sdW1uRWxlbWVudCk7CiAgICAgICAgICAgICAgdmFyIHNjcm9sbGFibGVCb2R5VGFibGUgPSBEb21IYW5kbGVyLmZpbmRTaW5nbGUoc2Nyb2xsYWJsZVZpZXcsICd0YWJsZS5wLWRhdGF0YWJsZS1zY3JvbGxhYmxlLWJvZHktdGFibGUnKTsKICAgICAgICAgICAgICB2YXIgc2Nyb2xsYWJsZUhlYWRlclRhYmxlID0gRG9tSGFuZGxlci5maW5kU2luZ2xlKHNjcm9sbGFibGVWaWV3LCAndGFibGUucC1kYXRhdGFibGUtc2Nyb2xsYWJsZS1oZWFkZXItdGFibGUnKTsKICAgICAgICAgICAgICB2YXIgc2Nyb2xsYWJsZUZvb3RlclRhYmxlID0gRG9tSGFuZGxlci5maW5kU2luZ2xlKHNjcm9sbGFibGVWaWV3LCAndGFibGUucC1kYXRhdGFibGUtc2Nyb2xsYWJsZS1mb290ZXItdGFibGUnKTsKICAgICAgICAgICAgICB2YXIgcmVzaXplQ29sdW1uSW5kZXggPSBEb21IYW5kbGVyLmluZGV4KHRoaXMucmVzaXplQ29sdW1uRWxlbWVudCk7CiAgICAgICAgICAgICAgdGhpcy5yZXNpemVDb2xHcm91cChzY3JvbGxhYmxlSGVhZGVyVGFibGUsIHJlc2l6ZUNvbHVtbkluZGV4LCBuZXdDb2x1bW5XaWR0aCwgbmV4dENvbHVtbldpZHRoKTsKICAgICAgICAgICAgICB0aGlzLnJlc2l6ZUNvbEdyb3VwKHNjcm9sbGFibGVCb2R5VGFibGUsIHJlc2l6ZUNvbHVtbkluZGV4LCBuZXdDb2x1bW5XaWR0aCwgbmV4dENvbHVtbldpZHRoKTsKICAgICAgICAgICAgICB0aGlzLnJlc2l6ZUNvbEdyb3VwKHNjcm9sbGFibGVGb290ZXJUYWJsZSwgcmVzaXplQ29sdW1uSW5kZXgsIG5ld0NvbHVtbldpZHRoLCBuZXh0Q29sdW1uV2lkdGgpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHRoaXMucmVzaXplQ29sdW1uRWxlbWVudC5zdHlsZS53aWR0aCA9IG5ld0NvbHVtbldpZHRoICsgJ3B4JzsKCiAgICAgICAgICAgICAgaWYgKG5leHRDb2x1bW4pIHsKICAgICAgICAgICAgICAgIG5leHRDb2x1bW4uc3R5bGUud2lkdGggPSBuZXh0Q29sdW1uV2lkdGggKyAncHgnOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0gZWxzZSBpZiAodGhpcy5jb2x1bW5SZXNpemVNb2RlID09PSAnZXhwYW5kJykgewogICAgICAgICAgaWYgKHRoaXMuc2Nyb2xsYWJsZSkgewogICAgICAgICAgICB0aGlzLnJlc2l6ZVNjcm9sbGFibGVUYWJsZSh0aGlzLnJlc2l6ZUNvbHVtbkVsZW1lbnQsIG5ld0NvbHVtbldpZHRoLCBkZWx0YSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aGlzLiRyZWZzLnRhYmxlLnN0eWxlLndpZHRoID0gdGhpcy4kcmVmcy50YWJsZS5vZmZzZXRXaWR0aCArIGRlbHRhICsgJ3B4JzsKICAgICAgICAgICAgdGhpcy5yZXNpemVDb2x1bW5FbGVtZW50LnN0eWxlLndpZHRoID0gbmV3Q29sdW1uV2lkdGggKyAncHgnOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgdGhpcy4kZW1pdCgnY29sdW1uLXJlc2l6ZS1lbmQnLCB7CiAgICAgICAgICBlbGVtZW50OiB0aGlzLnJlc2l6ZUNvbHVtbkVsZW1lbnQsCiAgICAgICAgICBkZWx0YTogZGVsdGEKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgdGhpcy4kcmVmcy5yZXNpemVIZWxwZXIuc3R5bGUuZGlzcGxheSA9ICdub25lJzsKICAgICAgdGhpcy5yZXNpemVDb2x1bW4gPSBudWxsOwogICAgICBEb21IYW5kbGVyLnJlbW92ZUNsYXNzKHRoaXMuJGVsLCAncC11bnNlbGVjdGFibGUtdGV4dCcpOwogICAgICB0aGlzLnVuYmluZENvbHVtblJlc2l6ZUV2ZW50cygpOwoKICAgICAgaWYgKHRoaXMuaXNTdGF0ZWZ1bCgpKSB7CiAgICAgICAgdGhpcy5zYXZlU3RhdGUoKTsKICAgICAgfQogICAgfSwKICAgIHJlc2l6ZUNvbEdyb3VwOiBmdW5jdGlvbiByZXNpemVDb2xHcm91cCh0YWJsZSwgcmVzaXplQ29sdW1uSW5kZXgsIG5ld0NvbHVtbldpZHRoLCBuZXh0Q29sdW1uV2lkdGgpIHsKICAgICAgaWYgKHRhYmxlKSB7CiAgICAgICAgdmFyIGNvbEdyb3VwID0gdGFibGUuY2hpbGRyZW5bMF0ubm9kZU5hbWUgPT09ICdDT0xHUk9VUCcgPyB0YWJsZS5jaGlsZHJlblswXSA6IG51bGw7CgogICAgICAgIGlmIChjb2xHcm91cCkgewogICAgICAgICAgdmFyIGNvbCA9IGNvbEdyb3VwLmNoaWxkcmVuW3Jlc2l6ZUNvbHVtbkluZGV4XTsKICAgICAgICAgIHZhciBuZXh0Q29sID0gY29sLm5leHRFbGVtZW50U2libGluZzsKICAgICAgICAgIGNvbC5zdHlsZS53aWR0aCA9IG5ld0NvbHVtbldpZHRoICsgJ3B4JzsKCiAgICAgICAgICBpZiAobmV4dENvbCAmJiBuZXh0Q29sdW1uV2lkdGgpIHsKICAgICAgICAgICAgbmV4dENvbC5zdHlsZS53aWR0aCA9IG5leHRDb2x1bW5XaWR0aCArICdweCc7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRocm93IG5ldyBFcnJvcigiU2Nyb2xsYWJsZSB0YWJsZXMgcmVxdWlyZSBhIGNvbGdyb3VwIHRvIHN1cHBvcnQgcmVzaXphYmxlIGNvbHVtbnMiKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBiaW5kQ29sdW1uUmVzaXplRXZlbnRzOiBmdW5jdGlvbiBiaW5kQ29sdW1uUmVzaXplRXZlbnRzKCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIGlmICghdGhpcy5kb2N1bWVudENvbHVtblJlc2l6ZUxpc3RlbmVyKSB7CiAgICAgICAgdGhpcy5kb2N1bWVudENvbHVtblJlc2l6ZUxpc3RlbmVyID0gZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgZnVuY3Rpb24gKCkgewogICAgICAgICAgaWYgKF90aGlzNC5jb2x1bW5SZXNpemluZykgewogICAgICAgICAgICBfdGhpczQub25Db2x1bW5SZXNpemUoZXZlbnQpOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9CgogICAgICBpZiAoIXRoaXMuZG9jdW1lbnRDb2x1bW5SZXNpemVFbmRMaXN0ZW5lcikgewogICAgICAgIHRoaXMuZG9jdW1lbnRDb2x1bW5SZXNpemVFbmRMaXN0ZW5lciA9IGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICBpZiAoX3RoaXM0LmNvbHVtblJlc2l6aW5nKSB7CiAgICAgICAgICAgIF90aGlzNC5jb2x1bW5SZXNpemluZyA9IGZhbHNlOwoKICAgICAgICAgICAgX3RoaXM0Lm9uQ29sdW1uUmVzaXplRW5kKCk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICB1bmJpbmRDb2x1bW5SZXNpemVFdmVudHM6IGZ1bmN0aW9uIHVuYmluZENvbHVtblJlc2l6ZUV2ZW50cygpIHsKICAgICAgaWYgKHRoaXMuZG9jdW1lbnRDb2x1bW5SZXNpemVMaXN0ZW5lcikgewogICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2RvY3VtZW50JywgdGhpcy5kb2N1bWVudENvbHVtblJlc2l6ZUxpc3RlbmVyKTsKICAgICAgICB0aGlzLmRvY3VtZW50Q29sdW1uUmVzaXplTGlzdGVuZXIgPSBudWxsOwogICAgICB9CgogICAgICBpZiAodGhpcy5kb2N1bWVudENvbHVtblJlc2l6ZUVuZExpc3RlbmVyKSB7CiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignZG9jdW1lbnQnLCB0aGlzLmRvY3VtZW50Q29sdW1uUmVzaXplRW5kTGlzdGVuZXIpOwogICAgICAgIHRoaXMuZG9jdW1lbnRDb2x1bW5SZXNpemVFbmRMaXN0ZW5lciA9IG51bGw7CiAgICAgIH0KICAgIH0sCiAgICBvbkNvbHVtbkhlYWRlck1vdXNlRG93bjogZnVuY3Rpb24gb25Db2x1bW5IZWFkZXJNb3VzZURvd24oZSkgewogICAgICB2YXIgZXZlbnQgPSBlLm9yaWdpbmFsRXZlbnQ7CiAgICAgIHZhciBjb2x1bW4gPSBlLmNvbHVtbjsKCiAgICAgIGlmICh0aGlzLnJlb3JkZXJhYmxlQ29sdW1ucyAmJiBjb2x1bW4ucmVvcmRlcmFibGVDb2x1bW4pIHsKICAgICAgICBpZiAoZXZlbnQudGFyZ2V0Lm5vZGVOYW1lID09PSAnSU5QVVQnIHx8IGV2ZW50LnRhcmdldC5ub2RlTmFtZSA9PT0gJ1RFWFRBUkVBJyB8fCBEb21IYW5kbGVyLmhhc0NsYXNzKGV2ZW50LnRhcmdldCwgJ3AtY29sdW1uLXJlc2l6ZXInKSkgZXZlbnQuY3VycmVudFRhcmdldC5kcmFnZ2FibGUgPSBmYWxzZTtlbHNlIGV2ZW50LmN1cnJlbnRUYXJnZXQuZHJhZ2dhYmxlID0gdHJ1ZTsKICAgICAgfQogICAgfSwKICAgIG9uQ29sdW1uSGVhZGVyRHJhZ1N0YXJ0OiBmdW5jdGlvbiBvbkNvbHVtbkhlYWRlckRyYWdTdGFydChldmVudCkgewogICAgICBpZiAodGhpcy5jb2x1bW5SZXNpemluZykgewogICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLmNvbFJlb3JkZXJJY29uV2lkdGggPSBEb21IYW5kbGVyLmdldEhpZGRlbkVsZW1lbnRPdXRlcldpZHRoKHRoaXMuJHJlZnMucmVvcmRlckluZGljYXRvclVwKTsKICAgICAgdGhpcy5jb2xSZW9yZGVySWNvbkhlaWdodCA9IERvbUhhbmRsZXIuZ2V0SGlkZGVuRWxlbWVudE91dGVySGVpZ2h0KHRoaXMuJHJlZnMucmVvcmRlckluZGljYXRvclVwKTsKICAgICAgdGhpcy5kcmFnZ2VkQ29sdW1uID0gdGhpcy5maW5kUGFyZW50SGVhZGVyKGV2ZW50LnRhcmdldCk7CiAgICAgIGV2ZW50LmRhdGFUcmFuc2Zlci5zZXREYXRhKCd0ZXh0JywgJ2InKTsgLy8gRmlyZWZveCByZXF1aXJlcyB0aGlzIHRvIG1ha2UgZHJhZ2dpbmcgcG9zc2libGUKICAgIH0sCiAgICBvbkNvbHVtbkhlYWRlckRyYWdPdmVyOiBmdW5jdGlvbiBvbkNvbHVtbkhlYWRlckRyYWdPdmVyKGV2ZW50KSB7CiAgICAgIHZhciBkcm9wSGVhZGVyID0gdGhpcy5maW5kUGFyZW50SGVhZGVyKGV2ZW50LnRhcmdldCk7CgogICAgICBpZiAodGhpcy5yZW9yZGVyYWJsZUNvbHVtbnMgJiYgdGhpcy5kcmFnZ2VkQ29sdW1uICYmIGRyb3BIZWFkZXIpIHsKICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgIHZhciBjb250YWluZXJPZmZzZXQgPSBEb21IYW5kbGVyLmdldE9mZnNldCh0aGlzLiRlbCk7CiAgICAgICAgdmFyIGRyb3BIZWFkZXJPZmZzZXQgPSBEb21IYW5kbGVyLmdldE9mZnNldChkcm9wSGVhZGVyKTsKCiAgICAgICAgaWYgKHRoaXMuZHJhZ2dlZENvbHVtbiAhPT0gZHJvcEhlYWRlcikgewogICAgICAgICAgdmFyIHRhcmdldExlZnQgPSBkcm9wSGVhZGVyT2Zmc2V0LmxlZnQgLSBjb250YWluZXJPZmZzZXQubGVmdDsKICAgICAgICAgIHZhciBjb2x1bW5DZW50ZXIgPSBkcm9wSGVhZGVyT2Zmc2V0LmxlZnQgKyBkcm9wSGVhZGVyLm9mZnNldFdpZHRoIC8gMjsKICAgICAgICAgIHRoaXMuJHJlZnMucmVvcmRlckluZGljYXRvclVwLnN0eWxlLnRvcCA9IGRyb3BIZWFkZXJPZmZzZXQudG9wIC0gY29udGFpbmVyT2Zmc2V0LnRvcCAtICh0aGlzLmNvbFJlb3JkZXJJY29uSGVpZ2h0IC0gMSkgKyAncHgnOwogICAgICAgICAgdGhpcy4kcmVmcy5yZW9yZGVySW5kaWNhdG9yRG93bi5zdHlsZS50b3AgPSBkcm9wSGVhZGVyT2Zmc2V0LnRvcCAtIGNvbnRhaW5lck9mZnNldC50b3AgKyBkcm9wSGVhZGVyLm9mZnNldEhlaWdodCArICdweCc7CgogICAgICAgICAgaWYgKGV2ZW50LnBhZ2VYID4gY29sdW1uQ2VudGVyKSB7CiAgICAgICAgICAgIHRoaXMuJHJlZnMucmVvcmRlckluZGljYXRvclVwLnN0eWxlLmxlZnQgPSB0YXJnZXRMZWZ0ICsgZHJvcEhlYWRlci5vZmZzZXRXaWR0aCAtIE1hdGguY2VpbCh0aGlzLmNvbFJlb3JkZXJJY29uV2lkdGggLyAyKSArICdweCc7CiAgICAgICAgICAgIHRoaXMuJHJlZnMucmVvcmRlckluZGljYXRvckRvd24uc3R5bGUubGVmdCA9IHRhcmdldExlZnQgKyBkcm9wSGVhZGVyLm9mZnNldFdpZHRoIC0gTWF0aC5jZWlsKHRoaXMuY29sUmVvcmRlckljb25XaWR0aCAvIDIpICsgJ3B4JzsKICAgICAgICAgICAgdGhpcy5kcm9wUG9zaXRpb24gPSAxOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdGhpcy4kcmVmcy5yZW9yZGVySW5kaWNhdG9yVXAuc3R5bGUubGVmdCA9IHRhcmdldExlZnQgLSBNYXRoLmNlaWwodGhpcy5jb2xSZW9yZGVySWNvbldpZHRoIC8gMikgKyAncHgnOwogICAgICAgICAgICB0aGlzLiRyZWZzLnJlb3JkZXJJbmRpY2F0b3JEb3duLnN0eWxlLmxlZnQgPSB0YXJnZXRMZWZ0IC0gTWF0aC5jZWlsKHRoaXMuY29sUmVvcmRlckljb25XaWR0aCAvIDIpICsgJ3B4JzsKICAgICAgICAgICAgdGhpcy5kcm9wUG9zaXRpb24gPSAtMTsKICAgICAgICAgIH0KCiAgICAgICAgICB0aGlzLiRyZWZzLnJlb3JkZXJJbmRpY2F0b3JVcC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJzsKICAgICAgICAgIHRoaXMuJHJlZnMucmVvcmRlckluZGljYXRvckRvd24uc3R5bGUuZGlzcGxheSA9ICdibG9jayc7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgb25Db2x1bW5IZWFkZXJEcmFnTGVhdmU6IGZ1bmN0aW9uIG9uQ29sdW1uSGVhZGVyRHJhZ0xlYXZlKGV2ZW50KSB7CiAgICAgIGlmICh0aGlzLnJlb3JkZXJhYmxlQ29sdW1ucyAmJiB0aGlzLmRyYWdnZWRDb2x1bW4pIHsKICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgIHRoaXMuJHJlZnMucmVvcmRlckluZGljYXRvclVwLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7CiAgICAgICAgdGhpcy4kcmVmcy5yZW9yZGVySW5kaWNhdG9yRG93bi5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogICAgICB9CiAgICB9LAogICAgb25Db2x1bW5IZWFkZXJEcm9wOiBmdW5jdGlvbiBvbkNvbHVtbkhlYWRlckRyb3AoZXZlbnQpIHsKICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKCiAgICAgIGlmICh0aGlzLmRyYWdnZWRDb2x1bW4pIHsKICAgICAgICB2YXIgZHJhZ0luZGV4ID0gRG9tSGFuZGxlci5pbmRleCh0aGlzLmRyYWdnZWRDb2x1bW4pOwogICAgICAgIHZhciBkcm9wSW5kZXggPSBEb21IYW5kbGVyLmluZGV4KHRoaXMuZmluZFBhcmVudEhlYWRlcihldmVudC50YXJnZXQpKTsKICAgICAgICB2YXIgYWxsb3dEcm9wID0gZHJhZ0luZGV4ICE9PSBkcm9wSW5kZXg7CgogICAgICAgIGlmIChhbGxvd0Ryb3AgJiYgKGRyb3BJbmRleCAtIGRyYWdJbmRleCA9PT0gMSAmJiB0aGlzLmRyb3BQb3NpdGlvbiA9PT0gLTEgfHwgZHJhZ0luZGV4IC0gZHJvcEluZGV4ID09PSAxICYmIHRoaXMuZHJvcFBvc2l0aW9uID09PSAxKSkgewogICAgICAgICAgYWxsb3dEcm9wID0gZmFsc2U7CiAgICAgICAgfQoKICAgICAgICBpZiAoYWxsb3dEcm9wKSB7CiAgICAgICAgICBPYmplY3RVdGlscy5yZW9yZGVyQXJyYXkodGhpcy5kX2NvbHVtbk9yZGVyLCBkcmFnSW5kZXgsIGRyb3BJbmRleCk7CiAgICAgICAgICB0aGlzLiRlbWl0KCdjb2x1bW4tcmVvcmRlcicsIHsKICAgICAgICAgICAgb3JpZ2luYWxFdmVudDogZXZlbnQsCiAgICAgICAgICAgIGRyYWdJbmRleDogZHJhZ0luZGV4LAogICAgICAgICAgICBkcm9wSW5kZXg6IGRyb3BJbmRleAogICAgICAgICAgfSk7CiAgICAgICAgfQoKICAgICAgICB0aGlzLiRyZWZzLnJlb3JkZXJJbmRpY2F0b3JVcC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogICAgICAgIHRoaXMuJHJlZnMucmVvcmRlckluZGljYXRvckRvd24uc3R5bGUuZGlzcGxheSA9ICdub25lJzsKICAgICAgICB0aGlzLmRyYWdnZWRDb2x1bW4uZHJhZ2dhYmxlID0gZmFsc2U7CiAgICAgICAgdGhpcy5kcmFnZ2VkQ29sdW1uID0gbnVsbDsKICAgICAgICB0aGlzLmRyb3BQb3NpdGlvbiA9IG51bGw7CiAgICAgIH0KICAgIH0sCiAgICBmaW5kUGFyZW50SGVhZGVyOiBmdW5jdGlvbiBmaW5kUGFyZW50SGVhZGVyKGVsZW1lbnQpIHsKICAgICAgaWYgKGVsZW1lbnQubm9kZU5hbWUgPT09ICdUSCcpIHsKICAgICAgICByZXR1cm4gZWxlbWVudDsKICAgICAgfSBlbHNlIHsKICAgICAgICB2YXIgcGFyZW50ID0gZWxlbWVudC5wYXJlbnRFbGVtZW50OwoKICAgICAgICB3aGlsZSAocGFyZW50Lm5vZGVOYW1lICE9PSAnVEgnKSB7CiAgICAgICAgICBwYXJlbnQgPSBwYXJlbnQucGFyZW50RWxlbWVudDsKICAgICAgICAgIGlmICghcGFyZW50KSBicmVhazsKICAgICAgICB9CgogICAgICAgIHJldHVybiBwYXJlbnQ7CiAgICAgIH0KICAgIH0sCiAgICBmaW5kUGFyZW50U2Nyb2xsYWJsZVZpZXc6IGZ1bmN0aW9uIGZpbmRQYXJlbnRTY3JvbGxhYmxlVmlldyhjb2x1bW4pIHsKICAgICAgaWYgKGNvbHVtbikgewogICAgICAgIHZhciBwYXJlbnQgPSBjb2x1bW4ucGFyZW50RWxlbWVudDsKCiAgICAgICAgd2hpbGUgKHBhcmVudCAmJiAhRG9tSGFuZGxlci5oYXNDbGFzcyhwYXJlbnQsICdwLWRhdGF0YWJsZS1zY3JvbGxhYmxlLXZpZXcnKSkgewogICAgICAgICAgcGFyZW50ID0gcGFyZW50LnBhcmVudEVsZW1lbnQ7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gcGFyZW50OwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBudWxsOwogICAgICB9CiAgICB9LAogICAgZmluZENvbHVtbkJ5S2V5OiBmdW5jdGlvbiBmaW5kQ29sdW1uQnlLZXkoY29sdW1ucywga2V5KSB7CiAgICAgIGlmIChjb2x1bW5zICYmIGNvbHVtbnMubGVuZ3RoKSB7CiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb2x1bW5zLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICB2YXIgY2hpbGQgPSBjb2x1bW5zW2ldOwoKICAgICAgICAgIGlmIChjaGlsZC5jb2x1bW5LZXkgPT09IGtleSB8fCBjaGlsZC5maWVsZCA9PT0ga2V5KSB7CiAgICAgICAgICAgIHJldHVybiBjaGlsZDsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBudWxsOwogICAgfSwKICAgIHJlc2l6ZVNjcm9sbGFibGVUYWJsZTogZnVuY3Rpb24gcmVzaXplU2Nyb2xsYWJsZVRhYmxlKGNvbHVtbiwgbmV3Q29sdW1uV2lkdGgsIGRlbHRhKSB7CiAgICAgIHZhciBzY3JvbGxhYmxlVmlldyA9IGNvbHVtbiA/IHRoaXMuZmluZFBhcmVudFNjcm9sbGFibGVWaWV3KGNvbHVtbikgOiB0aGlzLiRlbDsKICAgICAgdmFyIHNjcm9sbGFibGVCb2R5ID0gRG9tSGFuZGxlci5maW5kU2luZ2xlKHNjcm9sbGFibGVWaWV3LCAnLnAtZGF0YXRhYmxlLXNjcm9sbGFibGUtYm9keScpOwogICAgICB2YXIgc2Nyb2xsYWJsZUhlYWRlciA9IERvbUhhbmRsZXIuZmluZFNpbmdsZShzY3JvbGxhYmxlVmlldywgJy5wLWRhdGF0YWJsZS1zY3JvbGxhYmxlLWhlYWRlcicpOwogICAgICB2YXIgc2Nyb2xsYWJsZUZvb3RlciA9IERvbUhhbmRsZXIuZmluZFNpbmdsZShzY3JvbGxhYmxlVmlldywgJy5wLWRhdGF0YWJsZS1zY3JvbGxhYmxlLWZvb3RlcicpOwogICAgICB2YXIgc2Nyb2xsYWJsZUJvZHlUYWJsZSA9IERvbUhhbmRsZXIuZmluZFNpbmdsZShzY3JvbGxhYmxlQm9keSwgJ3RhYmxlLnAtZGF0YXRhYmxlLXNjcm9sbGFibGUtYm9keS10YWJsZScpOwogICAgICB2YXIgc2Nyb2xsYWJsZUhlYWRlclRhYmxlID0gRG9tSGFuZGxlci5maW5kU2luZ2xlKHNjcm9sbGFibGVIZWFkZXIsICd0YWJsZS5wLWRhdGF0YWJsZS1zY3JvbGxhYmxlLWhlYWRlci10YWJsZScpOwogICAgICB2YXIgc2Nyb2xsYWJsZUZvb3RlclRhYmxlID0gRG9tSGFuZGxlci5maW5kU2luZ2xlKHNjcm9sbGFibGVGb290ZXIsICd0YWJsZS5wLWRhdGF0YWJsZS1zY3JvbGxhYmxlLWZvb3Rlci10YWJsZScpOwogICAgICB2YXIgc2Nyb2xsYWJsZUJvZHlUYWJsZVdpZHRoID0gY29sdW1uID8gc2Nyb2xsYWJsZUJvZHlUYWJsZS5vZmZzZXRXaWR0aCArIGRlbHRhIDogbmV3Q29sdW1uV2lkdGg7CiAgICAgIHZhciBzY3JvbGxhYmxlSGVhZGVyVGFibGVXaWR0aCA9IGNvbHVtbiA/IHNjcm9sbGFibGVIZWFkZXJUYWJsZS5vZmZzZXRXaWR0aCArIGRlbHRhIDogbmV3Q29sdW1uV2lkdGg7CiAgICAgIHZhciBpc0NvbnRhaW5lckluVmlld3BvcnQgPSB0aGlzLiRlbC5vZmZzZXRXaWR0aCA+PSBwYXJzZUZsb2F0KHNjcm9sbGFibGVCb2R5VGFibGVXaWR0aCk7CgogICAgICB2YXIgc2V0V2lkdGggPSBmdW5jdGlvbiBzZXRXaWR0aChjb250YWluZXIsIHRhYmxlLCB3aWR0aCwgaXNDb250YWluZXJJblZpZXdwb3J0KSB7CiAgICAgICAgaWYgKGNvbnRhaW5lciAmJiB0YWJsZSkgewogICAgICAgICAgY29udGFpbmVyLnN0eWxlLndpZHRoID0gaXNDb250YWluZXJJblZpZXdwb3J0ID8gd2lkdGggKyBEb21IYW5kbGVyLmNhbGN1bGF0ZVNjcm9sbGJhcldpZHRoKHNjcm9sbGFibGVCb2R5KSArICdweCcgOiAnYXV0byc7CiAgICAgICAgICB0YWJsZS5zdHlsZS53aWR0aCA9IHdpZHRoICsgJ3B4JzsKICAgICAgICB9CiAgICAgIH07CgogICAgICBzZXRXaWR0aChzY3JvbGxhYmxlQm9keSwgc2Nyb2xsYWJsZUJvZHlUYWJsZSwgc2Nyb2xsYWJsZUJvZHlUYWJsZVdpZHRoLCBpc0NvbnRhaW5lckluVmlld3BvcnQpOwogICAgICBzZXRXaWR0aChzY3JvbGxhYmxlSGVhZGVyLCBzY3JvbGxhYmxlSGVhZGVyVGFibGUsIHNjcm9sbGFibGVIZWFkZXJUYWJsZVdpZHRoLCBpc0NvbnRhaW5lckluVmlld3BvcnQpOwogICAgICBzZXRXaWR0aChzY3JvbGxhYmxlRm9vdGVyLCBzY3JvbGxhYmxlRm9vdGVyVGFibGUsIHNjcm9sbGFibGVIZWFkZXJUYWJsZVdpZHRoLCBpc0NvbnRhaW5lckluVmlld3BvcnQpOwoKICAgICAgaWYgKGNvbHVtbikgewogICAgICAgIHZhciByZXNpemVDb2x1bW5JbmRleCA9IERvbUhhbmRsZXIuaW5kZXgoY29sdW1uKTsKICAgICAgICB0aGlzLnJlc2l6ZUNvbEdyb3VwKHNjcm9sbGFibGVIZWFkZXJUYWJsZSwgcmVzaXplQ29sdW1uSW5kZXgsIG5ld0NvbHVtbldpZHRoLCBudWxsKTsKICAgICAgICB0aGlzLnJlc2l6ZUNvbEdyb3VwKHNjcm9sbGFibGVCb2R5VGFibGUsIHJlc2l6ZUNvbHVtbkluZGV4LCBuZXdDb2x1bW5XaWR0aCwgbnVsbCk7CiAgICAgICAgdGhpcy5yZXNpemVDb2xHcm91cChzY3JvbGxhYmxlRm9vdGVyVGFibGUsIHJlc2l6ZUNvbHVtbkluZGV4LCBuZXdDb2x1bW5XaWR0aCwgbnVsbCk7CiAgICAgIH0KICAgIH0sCiAgICBvblJvd01vdXNlRG93bjogZnVuY3Rpb24gb25Sb3dNb3VzZURvd24oZXZlbnQpIHsKICAgICAgaWYgKERvbUhhbmRsZXIuaGFzQ2xhc3MoZXZlbnQudGFyZ2V0LCAncC1kYXRhdGFibGUtcmVvcmRlcmFibGVyb3ctaGFuZGxlJykpIGV2ZW50LmN1cnJlbnRUYXJnZXQuZHJhZ2dhYmxlID0gdHJ1ZTtlbHNlIGV2ZW50LmN1cnJlbnRUYXJnZXQuZHJhZ2dhYmxlID0gZmFsc2U7CiAgICB9LAogICAgb25Sb3dEcmFnU3RhcnQ6IGZ1bmN0aW9uIG9uUm93RHJhZ1N0YXJ0KGUpIHsKICAgICAgdmFyIGV2ZW50ID0gZS5vcmlnaW5hbEV2ZW50OwogICAgICB2YXIgaW5kZXggPSBlLmluZGV4OwogICAgICB0aGlzLnJvd0RyYWdnaW5nID0gdHJ1ZTsKICAgICAgdGhpcy5kcmFnZ2VkUm93SW5kZXggPSBpbmRleDsKICAgICAgZXZlbnQuZGF0YVRyYW5zZmVyLnNldERhdGEoJ3RleHQnLCAnYicpOyAvLyBGb3IgZmlyZWZveAogICAgfSwKICAgIG9uUm93RHJhZ092ZXI6IGZ1bmN0aW9uIG9uUm93RHJhZ092ZXIoZSkgewogICAgICB2YXIgZXZlbnQgPSBlLm9yaWdpbmFsRXZlbnQ7CiAgICAgIHZhciBpbmRleCA9IGUuaW5kZXg7CgogICAgICBpZiAodGhpcy5yb3dEcmFnZ2luZyAmJiB0aGlzLmRyYWdnZWRSb3dJbmRleCAhPT0gaW5kZXgpIHsKICAgICAgICB2YXIgcm93RWxlbWVudCA9IGV2ZW50LmN1cnJlbnRUYXJnZXQ7CiAgICAgICAgdmFyIHJvd1kgPSBEb21IYW5kbGVyLmdldE9mZnNldChyb3dFbGVtZW50KS50b3AgKyBEb21IYW5kbGVyLmdldFdpbmRvd1Njcm9sbFRvcCgpOwogICAgICAgIHZhciBwYWdlWSA9IGV2ZW50LnBhZ2VZOwogICAgICAgIHZhciByb3dNaWRZID0gcm93WSArIERvbUhhbmRsZXIuZ2V0T3V0ZXJIZWlnaHQocm93RWxlbWVudCkgLyAyOwogICAgICAgIHZhciBwcmV2Um93RWxlbWVudCA9IHJvd0VsZW1lbnQucHJldmlvdXNFbGVtZW50U2libGluZzsKCiAgICAgICAgaWYgKHBhZ2VZIDwgcm93TWlkWSkgewogICAgICAgICAgRG9tSGFuZGxlci5yZW1vdmVDbGFzcyhyb3dFbGVtZW50LCAncC1kYXRhdGFibGUtZHJhZ3BvaW50LWJvdHRvbScpOwogICAgICAgICAgdGhpcy5kcm9wcGVkUm93SW5kZXggPSBpbmRleDsKICAgICAgICAgIGlmIChwcmV2Um93RWxlbWVudCkgRG9tSGFuZGxlci5hZGRDbGFzcyhwcmV2Um93RWxlbWVudCwgJ3AtZGF0YXRhYmxlLWRyYWdwb2ludC1ib3R0b20nKTtlbHNlIERvbUhhbmRsZXIuYWRkQ2xhc3Mocm93RWxlbWVudCwgJ3AtZGF0YXRhYmxlLWRyYWdwb2ludC10b3AnKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgaWYgKHByZXZSb3dFbGVtZW50KSBEb21IYW5kbGVyLnJlbW92ZUNsYXNzKHByZXZSb3dFbGVtZW50LCAncC1kYXRhdGFibGUtZHJhZ3BvaW50LWJvdHRvbScpO2Vsc2UgRG9tSGFuZGxlci5hZGRDbGFzcyhyb3dFbGVtZW50LCAncC1kYXRhdGFibGUtZHJhZ3BvaW50LXRvcCcpOwogICAgICAgICAgdGhpcy5kcm9wcGVkUm93SW5kZXggPSBpbmRleCArIDE7CiAgICAgICAgICBEb21IYW5kbGVyLmFkZENsYXNzKHJvd0VsZW1lbnQsICdwLWRhdGF0YWJsZS1kcmFncG9pbnQtYm90dG9tJyk7CiAgICAgICAgfQoKICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICB9CiAgICB9LAogICAgb25Sb3dEcmFnTGVhdmU6IGZ1bmN0aW9uIG9uUm93RHJhZ0xlYXZlKGV2ZW50KSB7CiAgICAgIHZhciByb3dFbGVtZW50ID0gZXZlbnQuY3VycmVudFRhcmdldDsKICAgICAgdmFyIHByZXZSb3dFbGVtZW50ID0gcm93RWxlbWVudC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nOwoKICAgICAgaWYgKHByZXZSb3dFbGVtZW50KSB7CiAgICAgICAgRG9tSGFuZGxlci5yZW1vdmVDbGFzcyhwcmV2Um93RWxlbWVudCwgJ3AtZGF0YXRhYmxlLWRyYWdwb2ludC1ib3R0b20nKTsKICAgICAgfQoKICAgICAgRG9tSGFuZGxlci5yZW1vdmVDbGFzcyhyb3dFbGVtZW50LCAncC1kYXRhdGFibGUtZHJhZ3BvaW50LWJvdHRvbScpOwogICAgICBEb21IYW5kbGVyLnJlbW92ZUNsYXNzKHJvd0VsZW1lbnQsICdwLWRhdGF0YWJsZS1kcmFncG9pbnQtdG9wJyk7CiAgICB9LAogICAgb25Sb3dEcmFnRW5kOiBmdW5jdGlvbiBvblJvd0RyYWdFbmQoZXZlbnQpIHsKICAgICAgdGhpcy5yb3dEcmFnZ2luZyA9IGZhbHNlOwogICAgICB0aGlzLmRyYWdnZWRSb3dJbmRleCA9IG51bGw7CiAgICAgIHRoaXMuZHJvcHBlZFJvd0luZGV4ID0gbnVsbDsKICAgICAgZXZlbnQuY3VycmVudFRhcmdldC5kcmFnZ2FibGUgPSBmYWxzZTsKICAgIH0sCiAgICBvblJvd0Ryb3A6IGZ1bmN0aW9uIG9uUm93RHJvcChldmVudCkgewogICAgICBpZiAodGhpcy5kcm9wcGVkUm93SW5kZXggIT0gbnVsbCkgewogICAgICAgIHZhciBkcm9wSW5kZXggPSB0aGlzLmRyYWdnZWRSb3dJbmRleCA+IHRoaXMuZHJvcHBlZFJvd0luZGV4ID8gdGhpcy5kcm9wcGVkUm93SW5kZXggOiB0aGlzLmRyb3BwZWRSb3dJbmRleCA9PT0gMCA/IDAgOiB0aGlzLmRyb3BwZWRSb3dJbmRleCAtIDE7CgogICAgICAgIHZhciBwcm9jZXNzZWREYXRhID0gX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMucHJvY2Vzc2VkRGF0YSk7CgogICAgICAgIE9iamVjdFV0aWxzLnJlb3JkZXJBcnJheShwcm9jZXNzZWREYXRhLCB0aGlzLmRyYWdnZWRSb3dJbmRleCwgZHJvcEluZGV4KTsKICAgICAgICB0aGlzLiRlbWl0KCdyb3ctcmVvcmRlcicsIHsKICAgICAgICAgIG9yaWdpbmFsRXZlbnQ6IGV2ZW50LAogICAgICAgICAgZHJhZ0luZGV4OiB0aGlzLmRyYWdnZWRSb3dJbmRleCwKICAgICAgICAgIGRyb3BJbmRleDogZHJvcEluZGV4LAogICAgICAgICAgdmFsdWU6IHByb2Nlc3NlZERhdGEKICAgICAgICB9KTsKICAgICAgfSAvL2NsZWFudXAKCgogICAgICB0aGlzLm9uUm93RHJhZ0xlYXZlKGV2ZW50KTsKICAgICAgdGhpcy5vblJvd0RyYWdFbmQoZXZlbnQpOwogICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgfSwKICAgIHRvZ2dsZVJvdzogZnVuY3Rpb24gdG9nZ2xlUm93KGV2ZW50KSB7CiAgICAgIHZhciByb3dEYXRhID0gZXZlbnQuZGF0YTsKICAgICAgdmFyIGV4cGFuZGVkOwogICAgICB2YXIgZXhwYW5kZWRSb3dJbmRleDsKCiAgICAgIHZhciBfZXhwYW5kZWRSb3dzID0gdGhpcy5leHBhbmRlZFJvd3MgPyBfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5leHBhbmRlZFJvd3MpIDogW107CgogICAgICBpZiAodGhpcy5kYXRhS2V5KSB7CiAgICAgICAgZXhwYW5kZWQgPSB0aGlzLmRfZXhwYW5kZWRSb3dLZXlzID8gdGhpcy5kX2V4cGFuZGVkUm93S2V5c1tPYmplY3RVdGlscy5yZXNvbHZlRmllbGREYXRhKHJvd0RhdGEsIHRoaXMuZGF0YUtleSldICE9PSB1bmRlZmluZWQgOiBmYWxzZTsKICAgICAgfSBlbHNlIHsKICAgICAgICBleHBhbmRlZFJvd0luZGV4ID0gdGhpcy5maW5kSW5kZXgocm93RGF0YSwgdGhpcy5leHBhbmRlZFJvd3MpOwogICAgICAgIGV4cGFuZGVkID0gZXhwYW5kZWRSb3dJbmRleCA+IC0xOwogICAgICB9CgogICAgICBpZiAoZXhwYW5kZWQpIHsKICAgICAgICBpZiAoZXhwYW5kZWRSb3dJbmRleCA9PSBudWxsKSB7CiAgICAgICAgICBleHBhbmRlZFJvd0luZGV4ID0gdGhpcy5maW5kSW5kZXgocm93RGF0YSwgdGhpcy5leHBhbmRlZFJvd3MpOwogICAgICAgIH0KCiAgICAgICAgX2V4cGFuZGVkUm93cy5zcGxpY2UoZXhwYW5kZWRSb3dJbmRleCwgMSk7CgogICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpleHBhbmRlZFJvd3MnLCBfZXhwYW5kZWRSb3dzKTsKICAgICAgICB0aGlzLiRlbWl0KCdyb3ctY29sbGFwc2UnLCBldmVudCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgX2V4cGFuZGVkUm93cy5wdXNoKHJvd0RhdGEpOwoKICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6ZXhwYW5kZWRSb3dzJywgX2V4cGFuZGVkUm93cyk7CiAgICAgICAgdGhpcy4kZW1pdCgncm93LWV4cGFuZCcsIGV2ZW50KTsKICAgICAgfQogICAgfSwKICAgIHRvZ2dsZVJvd0dyb3VwOiBmdW5jdGlvbiB0b2dnbGVSb3dHcm91cChlKSB7CiAgICAgIHZhciBldmVudCA9IGUub3JpZ2luYWxFdmVudDsKICAgICAgdmFyIGRhdGEgPSBlLmRhdGE7CiAgICAgIHZhciBncm91cEZpZWxkVmFsdWUgPSBPYmplY3RVdGlscy5yZXNvbHZlRmllbGREYXRhKGRhdGEsIHRoaXMuZ3JvdXBSb3dzQnkpOwoKICAgICAgdmFyIF9leHBhbmRlZFJvd0dyb3VwcyA9IHRoaXMuZXhwYW5kZWRSb3dHcm91cHMgPyBfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5leHBhbmRlZFJvd0dyb3VwcykgOiBbXTsKCiAgICAgIGlmICh0aGlzLmlzUm93R3JvdXBFeHBhbmRlZChkYXRhKSkgewogICAgICAgIF9leHBhbmRlZFJvd0dyb3VwcyA9IF9leHBhbmRlZFJvd0dyb3Vwcy5maWx0ZXIoZnVuY3Rpb24gKGdyb3VwKSB7CiAgICAgICAgICByZXR1cm4gZ3JvdXAgIT09IGdyb3VwRmllbGRWYWx1ZTsKICAgICAgICB9KTsKICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6ZXhwYW5kZWRSb3dHcm91cHMnLCBfZXhwYW5kZWRSb3dHcm91cHMpOwogICAgICAgIHRoaXMuJGVtaXQoJ3Jvd2dyb3VwLWNvbGxhcHNlJywgewogICAgICAgICAgb3JpZ2luYWxFdmVudDogZXZlbnQsCiAgICAgICAgICBkYXRhOiBncm91cEZpZWxkVmFsdWUKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBfZXhwYW5kZWRSb3dHcm91cHMucHVzaChncm91cEZpZWxkVmFsdWUpOwoKICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6ZXhwYW5kZWRSb3dHcm91cHMnLCBfZXhwYW5kZWRSb3dHcm91cHMpOwogICAgICAgIHRoaXMuJGVtaXQoJ3Jvd2dyb3VwLWV4cGFuZCcsIHsKICAgICAgICAgIG9yaWdpbmFsRXZlbnQ6IGV2ZW50LAogICAgICAgICAgZGF0YTogZ3JvdXBGaWVsZFZhbHVlCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBpc1Jvd0dyb3VwRXhwYW5kZWQ6IGZ1bmN0aW9uIGlzUm93R3JvdXBFeHBhbmRlZChyb3dEYXRhKSB7CiAgICAgIGlmICh0aGlzLmV4cGFuZGFibGVSb3dHcm91cHMgJiYgdGhpcy5leHBhbmRlZFJvd0dyb3VwcykgewogICAgICAgIHZhciBncm91cEZpZWxkVmFsdWUgPSBPYmplY3RVdGlscy5yZXNvbHZlRmllbGREYXRhKHJvd0RhdGEsIHRoaXMuZ3JvdXBSb3dzQnkpOwogICAgICAgIHJldHVybiB0aGlzLmV4cGFuZGVkUm93R3JvdXBzLmluZGV4T2YoZ3JvdXBGaWVsZFZhbHVlKSA+IC0xOwogICAgICB9CgogICAgICByZXR1cm4gZmFsc2U7CiAgICB9LAogICAgaXNTdGF0ZWZ1bDogZnVuY3Rpb24gaXNTdGF0ZWZ1bCgpIHsKICAgICAgcmV0dXJuIHRoaXMuc3RhdGVLZXkgIT0gbnVsbDsKICAgIH0sCiAgICBnZXRTdG9yYWdlOiBmdW5jdGlvbiBnZXRTdG9yYWdlKCkgewogICAgICBzd2l0Y2ggKHRoaXMuc3RhdGVTdG9yYWdlKSB7CiAgICAgICAgY2FzZSAnbG9jYWwnOgogICAgICAgICAgcmV0dXJuIHdpbmRvdy5sb2NhbFN0b3JhZ2U7CgogICAgICAgIGNhc2UgJ3Nlc3Npb24nOgogICAgICAgICAgcmV0dXJuIHdpbmRvdy5zZXNzaW9uU3RvcmFnZTsKCiAgICAgICAgZGVmYXVsdDoKICAgICAgICAgIHRocm93IG5ldyBFcnJvcih0aGlzLnN0YXRlU3RvcmFnZSArICcgaXMgbm90IGEgdmFsaWQgdmFsdWUgZm9yIHRoZSBzdGF0ZSBzdG9yYWdlLCBzdXBwb3J0ZWQgdmFsdWVzIGFyZSAibG9jYWwiIGFuZCAic2Vzc2lvbiIuJyk7CiAgICAgIH0KICAgIH0sCiAgICBzYXZlU3RhdGU6IGZ1bmN0aW9uIHNhdmVTdGF0ZSgpIHsKICAgICAgdmFyIHN0b3JhZ2UgPSB0aGlzLmdldFN0b3JhZ2UoKTsKICAgICAgdmFyIHN0YXRlID0ge307CgogICAgICBpZiAodGhpcy5wYWdpbmF0b3IpIHsKICAgICAgICBzdGF0ZS5maXJzdCA9IHRoaXMuZF9maXJzdDsKICAgICAgICBzdGF0ZS5yb3dzID0gdGhpcy5kX3Jvd3M7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmRfc29ydEZpZWxkKSB7CiAgICAgICAgc3RhdGUuc29ydEZpZWxkID0gdGhpcy5kX3NvcnRGaWVsZDsKICAgICAgICBzdGF0ZS5zb3J0T3JkZXIgPSB0aGlzLmRfc29ydE9yZGVyOwogICAgICB9CgogICAgICBpZiAodGhpcy5kX211bHRpU29ydE1ldGEpIHsKICAgICAgICBzdGF0ZS5tdWx0aVNvcnRNZXRhID0gdGhpcy5kX211bHRpU29ydE1ldGE7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmhhc0ZpbHRlcnMpIHsKICAgICAgICBzdGF0ZS5maWx0ZXJzID0gdGhpcy5maWx0ZXJzOwogICAgICB9CgogICAgICBpZiAodGhpcy5yZXNpemFibGVDb2x1bW5zKSB7CiAgICAgICAgdGhpcy5zYXZlQ29sdW1uV2lkdGhzKHN0YXRlKTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMucmVvcmRlcmFibGVDb2x1bW5zKSB7CiAgICAgICAgc3RhdGUuY29sdW1uT3JkZXIgPSB0aGlzLmRfY29sdW1uT3JkZXI7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmV4cGFuZGVkUm93cykgewogICAgICAgIHN0YXRlLmV4cGFuZGVkUm93cyA9IHRoaXMuZXhwYW5kZWRSb3dzOwogICAgICAgIHN0YXRlLmV4cGFuZGVkUm93S2V5cyA9IHRoaXMuZF9leHBhbmRlZFJvd0tleXM7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmV4cGFuZGVkUm93R3JvdXBzKSB7CiAgICAgICAgc3RhdGUuZXhwYW5kZWRSb3dHcm91cHMgPSB0aGlzLmV4cGFuZGVkUm93R3JvdXBzOwogICAgICB9CgogICAgICBpZiAodGhpcy5zZWxlY3Rpb24pIHsKICAgICAgICBzdGF0ZS5zZWxlY3Rpb24gPSB0aGlzLnNlbGVjdGlvbjsKICAgICAgICBzdGF0ZS5zZWxlY3Rpb25LZXlzID0gdGhpcy5kX3NlbGVjdGlvbktleXM7CiAgICAgIH0KCiAgICAgIGlmIChPYmplY3Qua2V5cyhzdGF0ZSkubGVuZ3RoKSB7CiAgICAgICAgc3RvcmFnZS5zZXRJdGVtKHRoaXMuc3RhdGVLZXksIEpTT04uc3RyaW5naWZ5KHN0YXRlKSk7CiAgICAgIH0KICAgIH0sCiAgICByZXN0b3JlU3RhdGU6IGZ1bmN0aW9uIHJlc3RvcmVTdGF0ZSgpIHsKICAgICAgdmFyIHN0b3JhZ2UgPSB0aGlzLmdldFN0b3JhZ2UoKTsKICAgICAgdmFyIHN0YXRlU3RyaW5nID0gc3RvcmFnZS5nZXRJdGVtKHRoaXMuc3RhdGVLZXkpOwoKICAgICAgaWYgKHN0YXRlU3RyaW5nKSB7CiAgICAgICAgdmFyIHJlc3RvcmVkU3RhdGUgPSBKU09OLnBhcnNlKHN0YXRlU3RyaW5nKTsKCiAgICAgICAgaWYgKHRoaXMucGFnaW5hdG9yKSB7CiAgICAgICAgICB0aGlzLmRfZmlyc3QgPSByZXN0b3JlZFN0YXRlLmZpcnN0OwogICAgICAgICAgdGhpcy5kX3Jvd3MgPSByZXN0b3JlZFN0YXRlLnJvd3M7CiAgICAgICAgfQoKICAgICAgICBpZiAocmVzdG9yZWRTdGF0ZS5zb3J0RmllbGQpIHsKICAgICAgICAgIHRoaXMuZF9zb3J0RmllbGQgPSByZXN0b3JlZFN0YXRlLnNvcnRGaWVsZDsKICAgICAgICAgIHRoaXMuZF9zb3J0T3JkZXIgPSByZXN0b3JlZFN0YXRlLnNvcnRPcmRlcjsKICAgICAgICB9CgogICAgICAgIGlmIChyZXN0b3JlZFN0YXRlLm11bHRpU29ydE1ldGEpIHsKICAgICAgICAgIHRoaXMuZF9tdWx0aVNvcnRNZXRhID0gcmVzdG9yZWRTdGF0ZS5tdWx0aVNvcnRNZXRhOwogICAgICAgIH0KCiAgICAgICAgaWYgKHJlc3RvcmVkU3RhdGUuZmlsdGVycykgewogICAgICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOmZpbHRlcnMnLCByZXN0b3JlZFN0YXRlLmZpbHRlcnMpOwogICAgICAgIH0KCiAgICAgICAgaWYgKHRoaXMucmVzaXphYmxlQ29sdW1ucykgewogICAgICAgICAgdGhpcy5jb2x1bW5XaWR0aHNTdGF0ZSA9IHJlc3RvcmVkU3RhdGUuY29sdW1uV2lkdGhzOwogICAgICAgICAgdGhpcy50YWJsZVdpZHRoU3RhdGUgPSByZXN0b3JlZFN0YXRlLnRhYmxlV2lkdGg7CiAgICAgICAgfQoKICAgICAgICBpZiAodGhpcy5yZW9yZGVyYWJsZUNvbHVtbnMpIHsKICAgICAgICAgIHRoaXMuZF9jb2x1bW5PcmRlciA9IHJlc3RvcmVkU3RhdGUuY29sdW1uT3JkZXI7CiAgICAgICAgfQoKICAgICAgICBpZiAocmVzdG9yZWRTdGF0ZS5leHBhbmRlZFJvd3MpIHsKICAgICAgICAgIHRoaXMuZF9leHBhbmRlZFJvd0tleXMgPSByZXN0b3JlZFN0YXRlLmV4cGFuZGVkUm93S2V5czsKICAgICAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpleHBhbmRlZFJvd3MnLCByZXN0b3JlZFN0YXRlLmV4cGFuZGVkUm93cyk7CiAgICAgICAgfQoKICAgICAgICBpZiAocmVzdG9yZWRTdGF0ZS5leHBhbmRlZFJvd0dyb3VwcykgewogICAgICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOmV4cGFuZGVkUm93R3JvdXBzJywgcmVzdG9yZWRTdGF0ZS5leHBhbmRlZFJvd0dyb3Vwcyk7CiAgICAgICAgfQoKICAgICAgICBpZiAocmVzdG9yZWRTdGF0ZS5zZWxlY3Rpb24pIHsKICAgICAgICAgIHRoaXMuZF9zZWxlY3Rpb25LZXlzID0gcmVzdG9yZWRTdGF0ZS5kX3NlbGVjdGlvbktleXM7CiAgICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6c2VsZWN0aW9uJywgcmVzdG9yZWRTdGF0ZS5zZWxlY3Rpb24pOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIHNhdmVDb2x1bW5XaWR0aHM6IGZ1bmN0aW9uIHNhdmVDb2x1bW5XaWR0aHMoc3RhdGUpIHsKICAgICAgdmFyIHdpZHRocyA9IFtdOwogICAgICB2YXIgaGVhZGVycyA9IERvbUhhbmRsZXIuZmluZCh0aGlzLiRlbCwgJy5wLWRhdGF0YWJsZS10aGVhZCA+IHRyID4gdGgnKTsKICAgICAgaGVhZGVycy5mb3JFYWNoKGZ1bmN0aW9uIChoZWFkZXIpIHsKICAgICAgICByZXR1cm4gd2lkdGhzLnB1c2goRG9tSGFuZGxlci5nZXRPdXRlcldpZHRoKGhlYWRlcikpOwogICAgICB9KTsKICAgICAgc3RhdGUuY29sdW1uV2lkdGhzID0gd2lkdGhzLmpvaW4oJywnKTsKCiAgICAgIGlmICh0aGlzLmNvbHVtblJlc2l6ZU1vZGUgPT09ICdleHBhbmQnKSB7CiAgICAgICAgc3RhdGUudGFibGVXaWR0aCA9IHRoaXMuc2Nyb2xsYWJsZSA/IERvbUhhbmRsZXIuZmluZFNpbmdsZSh0aGlzLiRlbCwgJy5wLWRhdGF0YWJsZS1zY3JvbGxhYmxlLWhlYWRlci10YWJsZScpLnN0eWxlLndpZHRoIDogRG9tSGFuZGxlci5nZXRPdXRlcldpZHRoKHRoaXMuJHJlZnMudGFibGUpICsgJ3B4JzsKICAgICAgfQogICAgfSwKICAgIHJlc3RvcmVDb2x1bW5XaWR0aHM6IGZ1bmN0aW9uIHJlc3RvcmVDb2x1bW5XaWR0aHMoKSB7CiAgICAgIGlmICh0aGlzLmNvbHVtbldpZHRoc1N0YXRlKSB7CiAgICAgICAgdmFyIHdpZHRocyA9IHRoaXMuY29sdW1uV2lkdGhzU3RhdGUuc3BsaXQoJywnKTsKCiAgICAgICAgaWYgKHRoaXMuY29sdW1uUmVzaXplTW9kZSA9PT0gJ2V4cGFuZCcgJiYgdGhpcy50YWJsZVdpZHRoU3RhdGUpIHsKICAgICAgICAgIGlmICh0aGlzLnNjcm9sbGFibGUpIHsKICAgICAgICAgICAgdGhpcy5yZXNpemVTY3JvbGxhYmxlVGFibGUobnVsbCwgdGhpcy50YWJsZVdpZHRoU3RhdGUsIDApOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdGhpcy4kcmVmcy50YWJsZS5zdHlsZS53aWR0aCA9IHRoaXMudGFibGVXaWR0aFN0YXRlOwogICAgICAgICAgICB0aGlzLiRlbC5zdHlsZS53aWR0aCA9IHRoaXMudGFibGVXaWR0aFN0YXRlOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKHRoaXMuc2Nyb2xsYWJsZSkgewogICAgICAgICAgdmFyIGhlYWRlckNvbHMgPSBEb21IYW5kbGVyLmZpbmQodGhpcy4kZWwsICcucC1kYXRhdGFibGUtc2Nyb2xsYWJsZS1oZWFkZXItdGFibGUgPiBjb2xncm91cCA+IGNvbCcpOwogICAgICAgICAgdmFyIGJvZHlDb2xzID0gRG9tSGFuZGxlci5maW5kKHRoaXMuJGVsLCAnLnAtZGF0YXRhYmxlLXNjcm9sbGFibGUtYm9keS10YWJsZSA+IGNvbGdyb3VwID4gY29sJyk7CiAgICAgICAgICBoZWFkZXJDb2xzLmZvckVhY2goZnVuY3Rpb24gKGNvbCwgaW5kZXgpIHsKICAgICAgICAgICAgcmV0dXJuIGNvbC5zdHlsZS53aWR0aCA9IHdpZHRoc1tpbmRleF0gKyAncHgnOwogICAgICAgICAgfSk7CiAgICAgICAgICBib2R5Q29scy5mb3JFYWNoKGZ1bmN0aW9uIChjb2wsIGluZGV4KSB7CiAgICAgICAgICAgIHJldHVybiBjb2wuc3R5bGUud2lkdGggPSB3aWR0aHNbaW5kZXhdICsgJ3B4JzsKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB2YXIgaGVhZGVycyA9IERvbUhhbmRsZXIuZmluZCh0aGlzLiRyZWZzLnRhYmxlLCAnLnAtZGF0YXRhYmxlLXRoZWFkID4gdHIgPiB0aCcpOwogICAgICAgICAgaGVhZGVycy5mb3JFYWNoKGZ1bmN0aW9uIChoZWFkZXIsIGluZGV4KSB7CiAgICAgICAgICAgIHJldHVybiBoZWFkZXIuc3R5bGUud2lkdGggPSB3aWR0aHNbaW5kZXhdICsgJ3B4JzsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIG9uQ2VsbEVkaXRJbml0OiBmdW5jdGlvbiBvbkNlbGxFZGl0SW5pdChldmVudCkgewogICAgICB0aGlzLiRlbWl0KCdjZWxsLWVkaXQtaW5pdCcsIGV2ZW50KTsKICAgIH0sCiAgICBvbkNlbGxFZGl0Q29tcGxldGU6IGZ1bmN0aW9uIG9uQ2VsbEVkaXRDb21wbGV0ZShldmVudCkgewogICAgICB0aGlzLiRlbWl0KCdjZWxsLWVkaXQtY29tcGxldGUnLCBldmVudCk7CiAgICB9LAogICAgb25DZWxsRWRpdENhbmNlbDogZnVuY3Rpb24gb25DZWxsRWRpdENhbmNlbChldmVudCkgewogICAgICB0aGlzLiRlbWl0KCdjZWxsLWVkaXQtY2FuY2VsJywgZXZlbnQpOwogICAgfSwKICAgIG9uUm93RWRpdEluaXQ6IGZ1bmN0aW9uIG9uUm93RWRpdEluaXQoZXZlbnQpIHsKICAgICAgdmFyIF9lZGl0aW5nUm93cyA9IHRoaXMuZWRpdGluZ1Jvd3MgPyBfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5lZGl0aW5nUm93cykgOiBbXTsKCiAgICAgIF9lZGl0aW5nUm93cy5wdXNoKGV2ZW50LmRhdGEpOwoKICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOmVkaXRpbmdSb3dzJywgX2VkaXRpbmdSb3dzKTsKICAgICAgdGhpcy4kZW1pdCgncm93LWVkaXQtaW5pdCcsIGV2ZW50KTsKICAgIH0sCiAgICBvblJvd0VkaXRTYXZlOiBmdW5jdGlvbiBvblJvd0VkaXRTYXZlKGV2ZW50KSB7CiAgICAgIHZhciBfZWRpdGluZ1Jvd3MgPSBfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5lZGl0aW5nUm93cyk7CgogICAgICBfZWRpdGluZ1Jvd3Muc3BsaWNlKHRoaXMuZmluZEluZGV4KGV2ZW50LmRhdGEsIF9lZGl0aW5nUm93cyksIDEpOwoKICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOmVkaXRpbmdSb3dzJywgX2VkaXRpbmdSb3dzKTsKICAgICAgdGhpcy4kZW1pdCgncm93LWVkaXQtc2F2ZScsIGV2ZW50KTsKICAgIH0sCiAgICBvblJvd0VkaXRDYW5jZWw6IGZ1bmN0aW9uIG9uUm93RWRpdENhbmNlbChldmVudCkgewogICAgICB2YXIgX2VkaXRpbmdSb3dzID0gX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMuZWRpdGluZ1Jvd3MpOwoKICAgICAgX2VkaXRpbmdSb3dzLnNwbGljZSh0aGlzLmZpbmRJbmRleChldmVudC5kYXRhLCBfZWRpdGluZ1Jvd3MpLCAxKTsKCiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTplZGl0aW5nUm93cycsIF9lZGl0aW5nUm93cyk7CiAgICAgIHRoaXMuJGVtaXQoJ3Jvdy1lZGl0LWNhbmNlbCcsIGV2ZW50KTsKICAgIH0sCiAgICBvblZpcnR1YWxTY3JvbGw6IGZ1bmN0aW9uIG9uVmlydHVhbFNjcm9sbChldmVudCkgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIGlmICh0aGlzLnZpcnR1YWxTY3JvbGxUaW1lcikgewogICAgICAgIGNsZWFyVGltZW91dCh0aGlzLnZpcnR1YWxTY3JvbGxUaW1lcik7CiAgICAgIH0KCiAgICAgIHRoaXMudmlydHVhbFNjcm9sbFRpbWVyID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXM1LiRlbWl0KCd2aXJ0dWFsLXNjcm9sbCcsIHsKICAgICAgICAgIGZpcnN0OiAoZXZlbnQucGFnZSAtIDEpICogX3RoaXM1LnJvd3MsCiAgICAgICAgICByb3dzOiBfdGhpczUucm93cyAqIDIKICAgICAgICB9KTsKICAgICAgfSwgdGhpcy52aXJ0dWFsU2Nyb2xsRGVsYXkpOwogICAgfSwKICAgIGNyZWF0ZUxhenlMb2FkRXZlbnQ6IGZ1bmN0aW9uIGNyZWF0ZUxhenlMb2FkRXZlbnQoZXZlbnQpIHsKICAgICAgdmFyIGZpbHRlck1hdGNoTW9kZXM7CgogICAgICBpZiAodGhpcy5oYXNGaWx0ZXJzKSB7CiAgICAgICAgZmlsdGVyTWF0Y2hNb2RlcyA9IHt9OwogICAgICAgIHRoaXMuY29sdW1ucy5mb3JFYWNoKGZ1bmN0aW9uIChjb2wpIHsKICAgICAgICAgIGlmIChjb2wuZmllbGQpIHsKICAgICAgICAgICAgZmlsdGVyTWF0Y2hNb2Rlc1tjb2wuZmllbGRdID0gY29sLmZpbHRlck1hdGNoTW9kZTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfQoKICAgICAgcmV0dXJuIHsKICAgICAgICBvcmlnaW5hbEV2ZW50OiBldmVudCwKICAgICAgICBmaXJzdDogdGhpcy5kX2ZpcnN0LAogICAgICAgIHJvd3M6IHRoaXMuZF9yb3dzLAogICAgICAgIHNvcnRGaWVsZDogdGhpcy5kX3NvcnRGaWVsZCwKICAgICAgICBzb3J0T3JkZXI6IHRoaXMuZF9zb3J0T3JkZXIsCiAgICAgICAgbXVsdGlTb3J0TWV0YTogdGhpcy5kX211bHRpU29ydE1ldGEsCiAgICAgICAgZmlsdGVyczogdGhpcy5maWx0ZXJzLAogICAgICAgIGZpbHRlck1hdGNoTW9kZXM6IGZpbHRlck1hdGNoTW9kZXMKICAgICAgfTsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBjb250YWluZXJDbGFzczogZnVuY3Rpb24gY29udGFpbmVyQ2xhc3MoKSB7CiAgICAgIHJldHVybiBbJ3AtZGF0YXRhYmxlIHAtY29tcG9uZW50JywgewogICAgICAgICdwLWRhdGF0YWJsZS1ob3ZlcmFibGUtcm93cyc6IHRoaXMucm93SG92ZXIgfHwgdGhpcy5zZWxlY3Rpb25Nb2RlLAogICAgICAgICdwLWRhdGF0YWJsZS1hdXRvLWxheW91dCc6IHRoaXMuYXV0b0xheW91dCwKICAgICAgICAncC1kYXRhdGFibGUtcmVzaXphYmxlJzogdGhpcy5yZXNpemFibGVDb2x1bW5zLAogICAgICAgICdwLWRhdGF0YWJsZS1yZXNpemFibGUtZml0JzogdGhpcy5yZXNpemFibGVDb2x1bW5zICYmIHRoaXMuY29sdW1uUmVzaXplTW9kZSA9PT0gJ2ZpdCcsCiAgICAgICAgJ3AtZGF0YXRhYmxlLXNjcm9sbGFibGUnOiB0aGlzLnNjcm9sbGFibGUsCiAgICAgICAgJ3AtZGF0YXRhYmxlLXZpcnR1YWwtc2Nyb2xsYWJsZSc6IHRoaXMudmlydHVhbFNjcm9sbCwKICAgICAgICAncC1kYXRhdGFibGUtZmxleC1zY3JvbGxhYmxlJzogdGhpcy5zY3JvbGxhYmxlICYmIHRoaXMuc2Nyb2xsSGVpZ2h0ID09PSAnZmxleCcKICAgICAgfV07CiAgICB9LAogICAgY29sdW1uczogZnVuY3Rpb24gY29sdW1ucygpIHsKICAgICAgdmFyIGNvbHVtbnMgPSBbXTsKCiAgICAgIGlmICh0aGlzLmFsbENoaWxkcmVuKSB7CiAgICAgICAgY29sdW1ucyA9IHRoaXMuYWxsQ2hpbGRyZW4uZmlsdGVyKGZ1bmN0aW9uIChjaGlsZCkgewogICAgICAgICAgcmV0dXJuIGNoaWxkLiRvcHRpb25zLl9wcm9wS2V5cy5pbmRleE9mKCdjb2x1bW5LZXknKSAhPT0gLTE7CiAgICAgICAgfSk7CgogICAgICAgIGlmICh0aGlzLnJlb3JkZXJhYmxlQ29sdW1ucyAmJiB0aGlzLmRfY29sdW1uT3JkZXIpIHsKICAgICAgICAgIHZhciBvcmRlcmVkQ29sdW1ucyA9IFtdOwoKICAgICAgICAgIHZhciBfaXRlcmF0b3I1ID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIodGhpcy5kX2NvbHVtbk9yZGVyKSwKICAgICAgICAgICAgICBfc3RlcDU7CgogICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgZm9yIChfaXRlcmF0b3I1LnMoKTsgIShfc3RlcDUgPSBfaXRlcmF0b3I1Lm4oKSkuZG9uZTspIHsKICAgICAgICAgICAgICB2YXIgY29sdW1uS2V5ID0gX3N0ZXA1LnZhbHVlOwogICAgICAgICAgICAgIHZhciBjb2x1bW4gPSB0aGlzLmZpbmRDb2x1bW5CeUtleShjb2x1bW5zLCBjb2x1bW5LZXkpOwoKICAgICAgICAgICAgICBpZiAoY29sdW1uKSB7CiAgICAgICAgICAgICAgICBvcmRlcmVkQ29sdW1ucy5wdXNoKGNvbHVtbik7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgICAgX2l0ZXJhdG9yNS5lKGVycik7CiAgICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgICBfaXRlcmF0b3I1LmYoKTsKICAgICAgICAgIH0KCiAgICAgICAgICByZXR1cm4gW10uY29uY2F0KG9yZGVyZWRDb2x1bW5zLCBfdG9Db25zdW1hYmxlQXJyYXkoY29sdW1ucy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgcmV0dXJuIG9yZGVyZWRDb2x1bW5zLmluZGV4T2YoaXRlbSkgPCAwOwogICAgICAgICAgfSkpKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBjb2x1bW5zOwogICAgfSwKICAgIGZyb3plbkNvbHVtbnM6IGZ1bmN0aW9uIGZyb3plbkNvbHVtbnMoKSB7CiAgICAgIHZhciBmcm96ZW5Db2x1bW5zID0gW107CgogICAgICB2YXIgX2l0ZXJhdG9yNiA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHRoaXMuY29sdW1ucyksCiAgICAgICAgICBfc3RlcDY7CgogICAgICB0cnkgewogICAgICAgIGZvciAoX2l0ZXJhdG9yNi5zKCk7ICEoX3N0ZXA2ID0gX2l0ZXJhdG9yNi5uKCkpLmRvbmU7KSB7CiAgICAgICAgICB2YXIgY29sID0gX3N0ZXA2LnZhbHVlOwoKICAgICAgICAgIGlmIChjb2wuZnJvemVuKSB7CiAgICAgICAgICAgIGZyb3plbkNvbHVtbnMgPSBmcm96ZW5Db2x1bW5zIHx8IFtdOwogICAgICAgICAgICBmcm96ZW5Db2x1bW5zLnB1c2goY29sKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9pdGVyYXRvcjYuZShlcnIpOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIF9pdGVyYXRvcjYuZigpOwogICAgICB9CgogICAgICByZXR1cm4gZnJvemVuQ29sdW1uczsKICAgIH0sCiAgICBzY3JvbGxhYmxlQ29sdW1uczogZnVuY3Rpb24gc2Nyb2xsYWJsZUNvbHVtbnMoKSB7CiAgICAgIHZhciBzY3JvbGxhYmxlQ29sdW1ucyA9IFtdOwoKICAgICAgdmFyIF9pdGVyYXRvcjcgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcih0aGlzLmNvbHVtbnMpLAogICAgICAgICAgX3N0ZXA3OwoKICAgICAgdHJ5IHsKICAgICAgICBmb3IgKF9pdGVyYXRvcjcucygpOyAhKF9zdGVwNyA9IF9pdGVyYXRvcjcubigpKS5kb25lOykgewogICAgICAgICAgdmFyIGNvbCA9IF9zdGVwNy52YWx1ZTsKCiAgICAgICAgICBpZiAoIWNvbC5mcm96ZW4pIHsKICAgICAgICAgICAgc2Nyb2xsYWJsZUNvbHVtbnMgPSBzY3JvbGxhYmxlQ29sdW1ucyB8fCBbXTsKICAgICAgICAgICAgc2Nyb2xsYWJsZUNvbHVtbnMucHVzaChjb2wpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yNy5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yNy5mKCk7CiAgICAgIH0KCiAgICAgIHJldHVybiBzY3JvbGxhYmxlQ29sdW1uczsKICAgIH0sCiAgICBoYXNGcm96ZW5Db2x1bW5zOiBmdW5jdGlvbiBoYXNGcm96ZW5Db2x1bW5zKCkgewogICAgICByZXR1cm4gdGhpcy5mcm96ZW5Db2x1bW5zLmxlbmd0aCA+IDA7CiAgICB9LAogICAgaGVhZGVyQ29sdW1uR3JvdXA6IGZ1bmN0aW9uIGhlYWRlckNvbHVtbkdyb3VwKCkgewogICAgICBpZiAodGhpcy5hbGxDaGlsZHJlbikgewogICAgICAgIHZhciBfaXRlcmF0b3I4ID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIodGhpcy5hbGxDaGlsZHJlbiksCiAgICAgICAgICAgIF9zdGVwODsKCiAgICAgICAgdHJ5IHsKICAgICAgICAgIGZvciAoX2l0ZXJhdG9yOC5zKCk7ICEoX3N0ZXA4ID0gX2l0ZXJhdG9yOC5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgIHZhciBjaGlsZCA9IF9zdGVwOC52YWx1ZTsKCiAgICAgICAgICAgIGlmIChjaGlsZC4kdm5vZGUudGFnLmluZGV4T2YoJ2NvbHVtbmdyb3VwJykgIT09IC0xICYmIGNoaWxkLnR5cGUgPT09ICdoZWFkZXInKSB7CiAgICAgICAgICAgICAgcmV0dXJuIGNoaWxkOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICBfaXRlcmF0b3I4LmUoZXJyKTsKICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgX2l0ZXJhdG9yOC5mKCk7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gbnVsbDsKICAgIH0sCiAgICBmcm96ZW5IZWFkZXJDb2x1bW5Hcm91cDogZnVuY3Rpb24gZnJvemVuSGVhZGVyQ29sdW1uR3JvdXAoKSB7CiAgICAgIGlmICh0aGlzLmFsbENoaWxkcmVuKSB7CiAgICAgICAgdmFyIF9pdGVyYXRvcjkgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcih0aGlzLmFsbENoaWxkcmVuKSwKICAgICAgICAgICAgX3N0ZXA5OwoKICAgICAgICB0cnkgewogICAgICAgICAgZm9yIChfaXRlcmF0b3I5LnMoKTsgIShfc3RlcDkgPSBfaXRlcmF0b3I5Lm4oKSkuZG9uZTspIHsKICAgICAgICAgICAgdmFyIGNoaWxkID0gX3N0ZXA5LnZhbHVlOwoKICAgICAgICAgICAgaWYgKGNoaWxkLiR2bm9kZS50YWcuaW5kZXhPZignY29sdW1uZ3JvdXAnKSAhPT0gLTEgJiYgY2hpbGQudHlwZSA9PT0gJ2Zyb3plbmhlYWRlcicpIHsKICAgICAgICAgICAgICByZXR1cm4gY2hpbGQ7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgIF9pdGVyYXRvcjkuZShlcnIpOwogICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICBfaXRlcmF0b3I5LmYoKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBudWxsOwogICAgfSwKICAgIGZvb3RlckNvbHVtbkdyb3VwOiBmdW5jdGlvbiBmb290ZXJDb2x1bW5Hcm91cCgpIHsKICAgICAgaWYgKHRoaXMuYWxsQ2hpbGRyZW4pIHsKICAgICAgICB2YXIgX2l0ZXJhdG9yMTAgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcih0aGlzLmFsbENoaWxkcmVuKSwKICAgICAgICAgICAgX3N0ZXAxMDsKCiAgICAgICAgdHJ5IHsKICAgICAgICAgIGZvciAoX2l0ZXJhdG9yMTAucygpOyAhKF9zdGVwMTAgPSBfaXRlcmF0b3IxMC5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgIHZhciBjaGlsZCA9IF9zdGVwMTAudmFsdWU7CgogICAgICAgICAgICBpZiAoY2hpbGQuJHZub2RlLnRhZy5pbmRleE9mKCdjb2x1bW5ncm91cCcpICE9PSAtMSAmJiBjaGlsZC50eXBlID09PSAnZm9vdGVyJykgewogICAgICAgICAgICAgIHJldHVybiBjaGlsZDsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgX2l0ZXJhdG9yMTAuZShlcnIpOwogICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICBfaXRlcmF0b3IxMC5mKCk7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gbnVsbDsKICAgIH0sCiAgICBmcm96ZW5Gb290ZXJDb2x1bW5Hcm91cDogZnVuY3Rpb24gZnJvemVuRm9vdGVyQ29sdW1uR3JvdXAoKSB7CiAgICAgIGlmICh0aGlzLmFsbENoaWxkcmVuKSB7CiAgICAgICAgdmFyIF9pdGVyYXRvcjExID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIodGhpcy5hbGxDaGlsZHJlbiksCiAgICAgICAgICAgIF9zdGVwMTE7CgogICAgICAgIHRyeSB7CiAgICAgICAgICBmb3IgKF9pdGVyYXRvcjExLnMoKTsgIShfc3RlcDExID0gX2l0ZXJhdG9yMTEubigpKS5kb25lOykgewogICAgICAgICAgICB2YXIgY2hpbGQgPSBfc3RlcDExLnZhbHVlOwoKICAgICAgICAgICAgaWYgKGNoaWxkLiR2bm9kZS50YWcuaW5kZXhPZignY29sdW1uZ3JvdXAnKSAhPT0gLTEgJiYgY2hpbGQudHlwZSA9PT0gJ2Zyb3plbmZvb3RlcicpIHsKICAgICAgICAgICAgICByZXR1cm4gY2hpbGQ7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgIF9pdGVyYXRvcjExLmUoZXJyKTsKICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgX2l0ZXJhdG9yMTEuZigpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIG51bGw7CiAgICB9LAogICAgcHJvY2Vzc2VkRGF0YTogZnVuY3Rpb24gcHJvY2Vzc2VkRGF0YSgpIHsKICAgICAgaWYgKHRoaXMubGF6eSkgewogICAgICAgIHJldHVybiB0aGlzLnZhbHVlOwogICAgICB9IGVsc2UgewogICAgICAgIGlmICh0aGlzLnZhbHVlICYmIHRoaXMudmFsdWUubGVuZ3RoKSB7CiAgICAgICAgICB2YXIgZGF0YSA9IHRoaXMudmFsdWU7CgogICAgICAgICAgaWYgKHRoaXMuc29ydGVkKSB7CiAgICAgICAgICAgIGlmICh0aGlzLnNvcnRNb2RlID09PSAnc2luZ2xlJykgZGF0YSA9IHRoaXMuc29ydFNpbmdsZShkYXRhKTtlbHNlIGlmICh0aGlzLnNvcnRNb2RlID09PSAnbXVsdGlwbGUnKSBkYXRhID0gdGhpcy5zb3J0TXVsdGlwbGUoZGF0YSk7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKHRoaXMuaGFzRmlsdGVycykgewogICAgICAgICAgICBkYXRhID0gdGhpcy5maWx0ZXIoZGF0YSk7CiAgICAgICAgICB9CgogICAgICAgICAgcmV0dXJuIGRhdGE7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJldHVybiBudWxsOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGRhdGFUb1JlbmRlcjogZnVuY3Rpb24gZGF0YVRvUmVuZGVyKCkgewogICAgICB2YXIgZGF0YSA9IHRoaXMucHJvY2Vzc2VkRGF0YTsKCiAgICAgIGlmIChkYXRhICYmIHRoaXMucGFnaW5hdG9yKSB7CiAgICAgICAgdmFyIGZpcnN0ID0gdGhpcy5sYXp5ID8gMCA6IHRoaXMuZF9maXJzdDsKICAgICAgICByZXR1cm4gZGF0YS5zbGljZShmaXJzdCwgZmlyc3QgKyB0aGlzLmRfcm93cyk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGRhdGE7CiAgICAgIH0KICAgIH0sCiAgICB0b3RhbFJlY29yZHNMZW5ndGg6IGZ1bmN0aW9uIHRvdGFsUmVjb3Jkc0xlbmd0aCgpIHsKICAgICAgaWYgKHRoaXMubGF6eSkgewogICAgICAgIHJldHVybiB0aGlzLnRvdGFsUmVjb3JkczsKICAgICAgfSBlbHNlIHsKICAgICAgICB2YXIgZGF0YSA9IHRoaXMucHJvY2Vzc2VkRGF0YTsKICAgICAgICByZXR1cm4gZGF0YSA/IGRhdGEubGVuZ3RoIDogMDsKICAgICAgfQogICAgfSwKICAgIGVtcHR5OiBmdW5jdGlvbiBlbXB0eSgpIHsKICAgICAgdmFyIGRhdGEgPSB0aGlzLnByb2Nlc3NlZERhdGE7CiAgICAgIHJldHVybiAhZGF0YSB8fCBkYXRhLmxlbmd0aCA9PT0gMDsKICAgIH0sCiAgICBwYWdpbmF0b3JUb3A6IGZ1bmN0aW9uIHBhZ2luYXRvclRvcCgpIHsKICAgICAgcmV0dXJuIHRoaXMucGFnaW5hdG9yICYmICh0aGlzLnBhZ2luYXRvclBvc2l0aW9uICE9PSAnYm90dG9tJyB8fCB0aGlzLnBhZ2luYXRvclBvc2l0aW9uID09PSAnYm90aCcpOwogICAgfSwKICAgIHBhZ2luYXRvckJvdHRvbTogZnVuY3Rpb24gcGFnaW5hdG9yQm90dG9tKCkgewogICAgICByZXR1cm4gdGhpcy5wYWdpbmF0b3IgJiYgKHRoaXMucGFnaW5hdG9yUG9zaXRpb24gIT09ICd0b3AnIHx8IHRoaXMucGFnaW5hdG9yUG9zaXRpb24gPT09ICdib3RoJyk7CiAgICB9LAogICAgc29ydGVkOiBmdW5jdGlvbiBzb3J0ZWQoKSB7CiAgICAgIHJldHVybiB0aGlzLmRfc29ydEZpZWxkIHx8IHRoaXMuZF9tdWx0aVNvcnRNZXRhICYmIHRoaXMuZF9tdWx0aVNvcnRNZXRhLmxlbmd0aCA+IDA7CiAgICB9LAogICAgaGFzRmlsdGVyczogZnVuY3Rpb24gaGFzRmlsdGVycygpIHsKICAgICAgcmV0dXJuIHRoaXMuZmlsdGVycyAmJiBPYmplY3Qua2V5cyh0aGlzLmZpbHRlcnMpLmxlbmd0aCA+IDAgJiYgdGhpcy5maWx0ZXJzLmNvbnN0cnVjdG9yID09PSBPYmplY3Q7CiAgICB9LAogICAgaGFzR2xvYmFsRmlsdGVyOiBmdW5jdGlvbiBoYXNHbG9iYWxGaWx0ZXIoKSB7CiAgICAgIHJldHVybiB0aGlzLmZpbHRlcnMgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRoaXMuZmlsdGVycywgJ2dsb2JhbCcpOwogICAgfSwKICAgIGxvYWRpbmdJY29uQ2xhc3M6IGZ1bmN0aW9uIGxvYWRpbmdJY29uQ2xhc3MoKSB7CiAgICAgIHJldHVybiBbJ3AtZGF0YXRhYmxlLWxvYWRpbmctaWNvbiBwaS1zcGluJywgdGhpcy5sb2FkaW5nSWNvbl07CiAgICB9LAogICAgYWxsUm93c1NlbGVjdGVkOiBmdW5jdGlvbiBhbGxSb3dzU2VsZWN0ZWQoKSB7CiAgICAgIHZhciB2YWwgPSB0aGlzLnByb2Nlc3NlZERhdGE7CiAgICAgIHJldHVybiB2YWwgJiYgdmFsLmxlbmd0aCA+IDAgJiYgdGhpcy5zZWxlY3Rpb24gJiYgdGhpcy5zZWxlY3Rpb24ubGVuZ3RoID4gMCAmJiB0aGlzLnNlbGVjdGlvbi5sZW5ndGggPT09IHZhbC5sZW5ndGg7CiAgICB9CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICAnRFRQYWdpbmF0b3InOiBQYWdpbmF0b3IsCiAgICAnRFRTY3JvbGxhYmxlVmlldyc6IFNjcm9sbGFibGVWaWV3LAogICAgJ0RUVGFibGVIZWFkZXInOiBUYWJsZUhlYWRlciwKICAgICdEVFRhYmxlQm9keSc6IFRhYmxlQm9keSwKICAgICdEVFRhYmxlRm9vdGVyJzogVGFibGVGb290ZXIKICB9Cn07"},{"version":3,"sources":["DataTable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div :class=\"containerClass\">\n        <slot></slot>\n        <div class=\"p-datatable-loading\" v-if=\"loading\">\n            <div class=\"p-datatable-loading-overlay p-component-overlay\">\n                <i :class=\"loadingIconClass\"></i>\n            </div>\n        </div>\n        <div class=\"p-datatable-header\" v-if=\"$scopedSlots.header\">\n            <slot name=\"header\"></slot>\n        </div>\n        <DTPaginator v-if=\"paginatorTop\" :rows=\"d_rows\" :first=\"d_first\" :totalRecords=\"totalRecordsLength\" :pageLinkSize=\"pageLinkSize\" :template=\"paginatorTemplate\" :rowsPerPageOptions=\"rowsPerPageOptions\"\n                :currentPageReportTemplate=\"currentPageReportTemplate\" class=\"p-paginator-top\" @page=\"onPage($event)\" :alwaysShow=\"alwaysShowPaginator\">\n            <template #left v-if=\"$scopedSlots.paginatorLeft\">\n                <slot name=\"paginatorLeft\"></slot>\n            </template>\n            <template #right v-if=\"$scopedSlots.paginatorRight\">\n                <slot name=\"paginatorRight\"></slot>\n            </template>\n        </DTPaginator>\n        <div class=\"p-datatable-wrapper\" v-if=\"!scrollable\">\n            <table ref=\"table\" role=\"grid\">\n                <DTTableHeader :columnGroup=\"headerColumnGroup\" :columns=\"columns\" :rowGroupMode=\"rowGroupMode\"\n                        :groupRowsBy=\"groupRowsBy\" :resizableColumns=\"resizableColumns\" :allRowsSelected=\"allRowsSelected\" :empty=\"empty\"\n                        :sortMode=\"sortMode\" :sortField=\"d_sortField\" :sortOrder=\"d_sortOrder\" :multiSortMeta=\"d_multiSortMeta\"\n                        @column-click=\"onColumnHeaderClick($event)\" @column-mousedown=\"onColumnHeaderMouseDown($event)\"\n                        @column-dragstart=\"onColumnHeaderDragStart($event)\" @column-dragover=\"onColumnHeaderDragOver($event)\" @column-dragleave=\"onColumnHeaderDragLeave($event)\" @column-drop=\"onColumnHeaderDrop($event)\"\n                        @column-resizestart=\"onColumnResizeStart($event)\" @checkbox-change=\"toggleRowsWithCheckbox($event)\" />\n                <DTTableBody :value=\"dataToRender\" :columns=\"columns\" :empty=\"empty\" :dataKey=\"dataKey\" :selection=\"selection\" :selectionKeys=\"d_selectionKeys\" :selectionMode=\"selectionMode\" :contextMenu=\"contextMenu\" :contextMenuSelection=\"contextMenuSelection\"\n                    :rowGroupMode=\"rowGroupMode\" :groupRowsBy=\"groupRowsBy\" :expandableRowGroups=\"expandableRowGroups\" :rowClass=\"rowClass\" :editMode=\"editMode\" :compareSelectionBy=\"compareSelectionBy\"\n                    :expandedRowIcon=\"expandedRowIcon\" :collapsedRowIcon=\"collapsedRowIcon\" :expandedRows=\"expandedRows\" :expandedRowKeys=\"d_expandedRowKeys\" :expandedRowGroups=\"expandedRowGroups\"\n                    :editingRows=\"editingRows\" :editingRowKeys=\"d_editingRowKeys\" :templates=\"$scopedSlots\" :loading=\"loading\"\n                    @rowgroup-toggle=\"toggleRowGroup\" @row-click=\"onRowClick($event)\" @row-rightclick=\"onRowRightClick($event)\" @row-touchend=\"onRowTouchEnd\" @row-keydown=\"onRowKeyDown\"\n                    @row-mousedown=\"onRowMouseDown\" @row-dragstart=\"onRowDragStart($event)\" @row-dragover=\"onRowDragOver($event)\" @row-dragleave=\"onRowDragLeave($event)\" @row-dragend=\"onRowDragEnd($event)\" @row-drop=\"onRowDrop($event)\"\n                    @row-toggle=\"toggleRow($event)\" @radio-change=\"toggleRowWithRadio($event)\" @checkbox-change=\"toggleRowWithCheckbox($event)\"\n                    @cell-edit-init=\"onCellEditInit($event)\" @cell-edit-complete=\"onCellEditComplete($event)\" @cell-edit-cancel=\"onCellEditCancel($event)\"\n                    @row-edit-init=\"onRowEditInit($event)\" @row-edit-save=\"onRowEditSave($event)\" @row-edit-cancel=\"onRowEditCancel($event)\"/>\n                <DTTableFooter :columnGroup=\"footerColumnGroup\" :columns=\"columns\" />\n            </table>\n        </div>\n        <div class=\"p-datatable-scrollable-wrapper\" v-else>\n            <DTScrollableView v-if=\"hasFrozenColumns\" :scrollHeight=\"scrollHeight\" :columns=\"frozenColumns\" :frozenWidth=\"frozenWidth\" :frozen=\"true\"\n                :rowGroupMode=\"rowGroupMode\" :groupRowsBy=\"groupRowsBy\">\n                <template #header>\n                    <DTTableHeader :columnGroup=\"frozenHeaderColumnGroup\" :columns=\"frozenColumns\" :rowGroupMode=\"rowGroupMode\"\n                        :groupRowsBy=\"groupRowsBy\" :resizableColumns=\"resizableColumns\" :allRowsSelected=\"allRowsSelected\" :empty=\"empty\"\n                        :sortMode=\"sortMode\" :sortField=\"d_sortField\" :sortOrder=\"d_sortOrder\" :multiSortMeta=\"d_multiSortMeta\"\n                        @column-click=\"onColumnHeaderClick($event)\" @column-mousedown=\"onColumnHeaderMouseDown($event)\"\n                        @column-dragstart=\"onColumnHeaderDragStart($event)\" @column-dragover=\"onColumnHeaderDragOver($event)\" @column-dragleave=\"onColumnHeaderDragLeave($event)\" @column-drop=\"onColumnHeaderDrop($event)\"\n                        @column-resizestart=\"onColumnResizeStart($event)\" @checkbox-change=\"toggleRowsWithCheckbox($event)\" />\n                </template>\n                <template #body>\n                    <DTTableBody :value=\"dataToRender\" :columns=\"frozenColumns\" :empty=\"empty\" :dataKey=\"dataKey\" :selection=\"selection\" :selectionKeys=\"d_selectionKeys\" :selectionMode=\"selectionMode\" :contextMenu=\"contextMenu\" :contextMenuSelection=\"contextMenuSelection\"\n                        :rowGroupMode=\"rowGroupMode\" :groupRowsBy=\"groupRowsBy\" :expandableRowGroups=\"expandableRowGroups\" :rowClass=\"rowClass\" :editMode=\"editMode\" :compareSelectionBy=\"compareSelectionBy\"\n                        :expandedRowIcon=\"expandedRowIcon\" :collapsedRowIcon=\"collapsedRowIcon\" :expandedRows=\"expandedRows\" :expandedRowKeys=\"d_expandedRowKeys\" :expandedRowGroups=\"expandedRowGroups\"\n                        :editingRows=\"editingRows\" :editingRowKeys=\"d_editingRowKeys\" :templates=\"$scopedSlots\" :loading=\"loading\"\n                        @rowgroup-toggle=\"toggleRowGroup\" @row-click=\"onRowClick($event)\" @row-rightclick=\"onRowRightClick($event)\" @row-touchend=\"onRowTouchEnd\" @row-keydown=\"onRowKeyDown\"\n                        @row-mousedown=\"onRowMouseDown\" @row-dragstart=\"onRowDragStart($event)\" @row-dragover=\"onRowDragOver($event)\" @row-dragleave=\"onRowDragLeave($event)\" @row-dragend=\"onRowDragEnd($event)\" @row-drop=\"onRowDrop($event)\"\n                        @row-toggle=\"toggleRow($event)\" @radio-change=\"toggleRowWithRadio($event)\" @checkbox-change=\"toggleRowWithCheckbox($event)\"\n                        @cell-edit-init=\"onCellEditInit($event)\" @cell-edit-complete=\"onCellEditComplete($event)\" @cell-edit-cancel=\"onCellEditCancel($event)\"\n                        @row-edit-init=\"onRowEditInit($event)\" @row-edit-save=\"onRowEditSave($event)\" @row-edit-cancel=\"onRowEditCancel($event)\"/>\n                </template>\n                <template #frozenbody>\n                    <DTTableBody v-if=\"frozenValue\" :value=\"frozenValue\" :columns=\"frozenColumns\" :dataKey=\"dataKey\" :selection=\"selection\" :selectionKeys=\"d_selectionKeys\" :selectionMode=\"selectionMode\" :contextMenu=\"contextMenu\" :contextMenuSelection=\"contextMenuSelection\"\n                        :rowGroupMode=\"rowGroupMode\" :groupRowsBy=\"groupRowsBy\" :expandableRowGroups=\"expandableRowGroups\" :rowClass=\"rowClass\" :editMode=\"editMode\" :compareSelectionBy=\"compareSelectionBy\"\n                        :expandedRowIcon=\"expandedRowIcon\" :collapsedRowIcon=\"collapsedRowIcon\" :expandedRows=\"expandedRows\" :expandedRowKeys=\"d_expandedRowKeys\" :expandedRowGroups=\"expandedRowGroups\"\n                        :editingRows=\"editingRows\" :editingRowKeys=\"d_editingRowKeys\" :templates=\"$scopedSlots\" :loading=\"loading\"\n                        @rowgroup-toggle=\"toggleRowGroup\" @row-click=\"onRowClick($event)\" @row-rightclick=\"onRowRightClick($event)\" @row-touchend=\"onRowTouchEnd\" @row-keydown=\"onRowKeyDown\"\n                        @row-mousedown=\"onRowMouseDown\" @row-dragstart=\"onRowDragStart($event)\" @row-dragover=\"onRowDragOver($event)\" @row-dragleave=\"onRowDragLeave($event)\" @row-dragend=\"onRowDragEnd($event)\" @row-drop=\"onRowDrop($event)\"\n                        @row-toggle=\"toggleRow($event)\" @radio-change=\"toggleRowWithRadio($event)\" @checkbox-change=\"toggleRowWithCheckbox($event)\"\n                        @cell-edit-init=\"onCellEditInit($event)\" @cell-edit-complete=\"onCellEditComplete($event)\" @cell-edit-cancel=\"onCellEditCancel($event)\"\n                        @row-edit-init=\"onRowEditInit($event)\" @row-edit-save=\"onRowEditSave($event)\" @row-edit-cancel=\"onRowEditCancel($event)\"/>\n                </template>\n                <template #footer>\n                    <DTTableFooter :columnGroup=\"frozenFooterColumnGroup\" :columns=\"frozenColumns\" />\n                </template>\n            </DTScrollableView>\n            <DTScrollableView :scrollHeight=\"scrollHeight\" :columns=\"scrollableColumns\" :frozenWidth=\"frozenWidth\" :rows=\"rows\"\n                :virtualScroll=\"virtualScroll\" :virtualRowHeight=\"virtualRowHeight\" :totalRecords=\"totalRecordsLength\" @virtual-scroll=\"onVirtualScroll\"\n                :rowGroupMode=\"rowGroupMode\" :groupRowsBy=\"groupRowsBy\">\n                <template #header>\n                    <DTTableHeader :columnGroup=\"headerColumnGroup\" :columns=\"scrollableColumns\" :rowGroupMode=\"rowGroupMode\"\n                        :groupRowsBy=\"groupRowsBy\" :resizableColumns=\"resizableColumns\" :allRowsSelected=\"allRowsSelected\" :empty=\"empty\"\n                        :sortMode=\"sortMode\" :sortField=\"d_sortField\" :sortOrder=\"d_sortOrder\" :multiSortMeta=\"d_multiSortMeta\"\n                        @column-click=\"onColumnHeaderClick($event)\" @column-mousedown=\"onColumnHeaderMouseDown($event)\"\n                        @column-dragstart=\"onColumnHeaderDragStart($event)\" @column-dragover=\"onColumnHeaderDragOver($event)\" @column-dragleave=\"onColumnHeaderDragLeave($event)\" @column-drop=\"onColumnHeaderDrop($event)\"\n                        @column-resizestart=\"onColumnResizeStart($event)\" @checkbox-change=\"toggleRowsWithCheckbox($event)\" />\n                </template>\n                <template #body>\n                    <DTTableBody :value=\"dataToRender\" :columns=\"scrollableColumns\" :empty=\"empty\" :dataKey=\"dataKey\" :selection=\"selection\" :selectionKeys=\"d_selectionKeys\" :selectionMode=\"selectionMode\" :contextMenu=\"contextMenu\" :contextMenuSelection=\"contextMenuSelection\"\n                        :rowGroupMode=\"rowGroupMode\" :groupRowsBy=\"groupRowsBy\" :expandableRowGroups=\"expandableRowGroups\" :rowClass=\"rowClass\" :editMode=\"editMode\" :compareSelectionBy=\"compareSelectionBy\"\n                        :expandedRowIcon=\"expandedRowIcon\" :collapsedRowIcon=\"collapsedRowIcon\" :expandedRows=\"expandedRows\" :expandedRowKeys=\"d_expandedRowKeys\" :expandedRowGroups=\"expandedRowGroups\"\n                        :editingRows=\"editingRows\" :editingRowKeys=\"d_editingRowKeys\" :templates=\"$scopedSlots\" :loading=\"loading\"\n                        @rowgroup-toggle=\"toggleRowGroup\" @row-click=\"onRowClick($event)\" @row-rightclick=\"onRowRightClick($event)\" @row-touchend=\"onRowTouchEnd\" @row-keydown=\"onRowKeyDown\"\n                        @row-mousedown=\"onRowMouseDown\" @row-dragstart=\"onRowDragStart($event)\" @row-dragover=\"onRowDragOver($event)\" @row-dragleave=\"onRowDragLeave($event)\" @row-dragend=\"onRowDragEnd($event)\" @row-drop=\"onRowDrop($event)\"\n                        @row-toggle=\"toggleRow($event)\" @radio-change=\"toggleRowWithRadio($event)\" @checkbox-change=\"toggleRowWithCheckbox($event)\"\n                        @cell-edit-init=\"onCellEditInit($event)\" @cell-edit-complete=\"onCellEditComplete($event)\" @cell-edit-cancel=\"onCellEditCancel($event)\"\n                        @row-edit-init=\"onRowEditInit($event)\" @row-edit-save=\"onRowEditSave($event)\" @row-edit-cancel=\"onRowEditCancel($event)\"/>\n                </template>\n                <template #frozenbody>\n                    <DTTableBody  v-if=\"frozenValue\" :value=\"frozenValue\" :columns=\"scrollableColumns\" :dataKey=\"dataKey\" :selection=\"selection\" :selectionKeys=\"d_selectionKeys\" :selectionMode=\"selectionMode\" :contextMenu=\"contextMenu\" :contextMenuSelection=\"contextMenuSelection\"\n                        :rowGroupMode=\"rowGroupMode\" :groupRowsBy=\"groupRowsBy\" :expandableRowGroups=\"expandableRowGroups\" :rowClass=\"rowClass\" :editMode=\"editMode\" :compareSelectionBy=\"compareSelectionBy\"\n                        :expandedRowIcon=\"expandedRowIcon\" :collapsedRowIcon=\"collapsedRowIcon\" :expandedRows=\"expandedRows\" :expandedRowKeys=\"d_expandedRowKeys\" :expandedRowGroups=\"expandedRowGroups\"\n                        :editingRows=\"editingRows\" :editingRowKeys=\"d_editingRowKeys\" :templates=\"$scopedSlots\" :loading=\"loading\"\n                        @rowgroup-toggle=\"toggleRowGroup\" @row-click=\"onRowClick($event)\" @row-rightclick=\"onRowRightClick($event)\" @row-touchend=\"onRowTouchEnd\" @row-keydown=\"onRowKeyDown\"\n                        @row-mousedown=\"onRowMouseDown\" @row-dragstart=\"onRowDragStart($event)\" @row-dragover=\"onRowDragOver($event)\" @row-dragleave=\"onRowDragLeave($event)\" @row-dragend=\"onRowDragEnd($event)\" @row-drop=\"onRowDrop($event)\"\n                        @row-toggle=\"toggleRow($event)\" @radio-change=\"toggleRowWithRadio($event)\" @checkbox-change=\"toggleRowWithCheckbox($event)\"\n                        @cell-edit-init=\"onCellEditInit($event)\" @cell-edit-complete=\"onCellEditComplete($event)\" @cell-edit-cancel=\"onCellEditCancel($event)\"\n                        @row-edit-init=\"onRowEditInit($event)\" @row-edit-save=\"onRowEditSave($event)\" @row-edit-cancel=\"onRowEditCancel($event)\"/>\n                </template>\n                <template #footer>\n                    <DTTableFooter :columnGroup=\"footerColumnGroup\" :columns=\"scrollableColumns\" />\n                </template>\n            </DTScrollableView>\n        </div>\n        <DTPaginator v-if=\"paginatorBottom\" :rows=\"d_rows\" :first=\"d_first\" :totalRecords=\"totalRecordsLength\" :pageLinkSize=\"pageLinkSize\" :template=\"paginatorTemplate\" :rowsPerPageOptions=\"rowsPerPageOptions\"\n                :currentPageReportTemplate=\"currentPageReportTemplate\" class=\"p-paginator-bottom\" @page=\"onPage($event)\" :alwaysShow=\"alwaysShowPaginator\">\n            <template #left v-if=\"$scopedSlots.paginatorLeft\">\n                <slot name=\"paginatorLeft\"></slot>\n            </template>\n            <template #right v-if=\"$scopedSlots.paginatorRight\">\n                <slot name=\"paginatorRight\"></slot>\n            </template>\n        </DTPaginator>\n        <div class=\"p-datatable-footer\" v-if=\"$scopedSlots.footer\">\n            <slot name=\"footer\"></slot>\n        </div>\n        <div ref=\"resizeHelper\" class=\"p-column-resizer-helper p-highlight\" style=\"display: none\"></div>\n        <span ref=\"reorderIndicatorUp\" class=\"pi pi-arrow-down p-datatable-reorder-indicator-up\" style=\"position: absolute; display: none\" v-if=\"reorderableColumns\" />\n        <span ref=\"reorderIndicatorDown\" class=\"pi pi-arrow-up p-datatable-reorder-indicator-down\" style=\"position: absolute; display: none\" v-if=\"reorderableColumns\" />\n    </div>\n</template>\n\n<script>\nimport ObjectUtils from '../utils/ObjectUtils';\nimport FilterUtils from '../utils/FilterUtils';\nimport DomHandler from '../utils/DomHandler';\nimport Paginator from '../paginator/Paginator';\nimport ScrollableView from './ScrollableView.vue';\nimport TableHeader from './TableHeader.vue';\nimport TableBody from './TableBody.vue';\nimport TableFooter from './TableFooter.vue';\n\nexport default {\n    props: {\n        value: {\n            type: Array,\n            default: null\n        },\n        dataKey: {\n            type: String,\n            default: null\n        },\n        rows: {\n            type: Number,\n            default: 0\n        },\n        first: {\n            type: Number,\n            default: 0\n        },\n        totalRecords: {\n            type: Number,\n            default: 0\n        },\n        paginator: {\n            type: Boolean,\n            default: false\n        },\n        paginatorPosition: {\n            type: String,\n            default: 'bottom'\n        },\n        alwaysShowPaginator: {\n            type: Boolean,\n            default: true\n        },\n        paginatorTemplate: {\n            type: String,\n            default: 'FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown'\n        },\n        pageLinkSize: {\n            type: Number,\n            default: 5\n        },\n        rowsPerPageOptions: {\n            type: Array,\n            default: null\n        },\n        currentPageReportTemplate: {\n            type: String,\n            default: '({currentPage} of {totalPages})'\n        },\n        lazy: {\n            type: Boolean,\n            default: false\n        },\n        loading: {\n            type: Boolean,\n            default: false\n        },\n        loadingIcon: {\n            type: String,\n            default: 'pi pi-spinner'\n        },\n        sortField: {\n            type: String,\n            default: null\n        },\n        sortOrder: {\n            type: Number,\n            default: null\n        },\n        defaultSortOrder: {\n            type: Number,\n            default: 1\n        },\n        multiSortMeta: {\n            type: Array,\n            default: null\n        },\n        sortMode: {\n            type: String,\n            default: 'single'\n        },\n        removableSort: {\n            type: Boolean,\n            default: false\n        },\n        filters: {\n            type: Object,\n            default: null\n        },\n        filterLocale: {\n            type: String,\n            default: undefined\n        },\n        selection: {\n            type: [Array,Object],\n            default: null\n        },\n        selectionMode: {\n            type: String,\n            default: null\n        },\n        compareSelectionBy: {\n            type: String,\n            default: 'deepEquals'\n        },\n        metaKeySelection: {\n            type: Boolean,\n            default: true\n        },\n        contextMenu: {\n            type: Boolean,\n            default: false\n        },\n        contextMenuSelection: {\n            type: Object,\n            default: null\n        },\n        rowHover: {\n            type: Boolean,\n            default: false\n        },\n        csvSeparator: {\n            type: String,\n            default: ','\n        },\n        exportFilename: {\n            type: String,\n            default: 'download'\n        },\n        autoLayout: {\n            type: Boolean,\n            default: false\n        },\n        resizableColumns: {\n            type: Boolean,\n            default: false\n        },\n        columnResizeMode: {\n            type: String,\n            default: 'fit'\n        },\n        reorderableColumns: {\n            type: Boolean,\n            default: false\n        },\n        expandedRows: {\n            type: Array,\n            default: null\n        },\n        expandedRowIcon: {\n            type: String,\n            default: 'pi-chevron-down'\n        },\n        collapsedRowIcon: {\n            type: String,\n            default: 'pi-chevron-right'\n        },\n        rowGroupMode: {\n            type: String,\n            default: null\n        },\n        groupRowsBy: {\n            type: [Array,String],\n            default: null\n        },\n        expandableRowGroups: {\n            type: Boolean,\n            default: false\n        },\n        expandedRowGroups: {\n            type: Array,\n            default: null\n        },\n        stateStorage: {\n            type: String,\n            default: 'session'\n        },\n        stateKey: {\n            type: String,\n            default: null\n        },\n        editMode: {\n            type: String,\n            default: null\n        },\n        editingRows: {\n            type: Array,\n            default: null\n        },\n        rowClass: {\n            type: null,\n            default: null\n        },\n        scrollable: {\n            type: Boolean,\n            default: false\n        },\n        scrollHeight: {\n            type: String,\n            default: null\n        },\n        frozenValue: {\n            type: Array,\n            default: null\n        },\n        frozenWidth: {\n            type: String,\n            default: null\n        },\n        virtualScroll: {\n            type: Boolean,\n            default: false\n        },\n        virtualRowHeight: {\n            type: Number,\n            default: 28\n        },\n        virtualScrollDelay: {\n            type: Number,\n            default: 150\n        }\n    },\n    data() {\n        return {\n            allChildren: null,\n            d_first: this.first,\n            d_rows: this.rows,\n            d_sortField: this.sortField,\n            d_sortOrder: this.sortOrder,\n            d_multiSortMeta: this.multiSortMeta ? [...this.multiSortMeta] : [],\n            d_selectionKeys: null,\n            d_expandedRowKeys: null,\n            d_columnOrder: null,\n            d_editingRowKeys: null\n        };\n    },\n    rowTouched: false,\n    anchorRowIndex: null,\n    rangeRowIndex: null,\n    documentColumnResizeListener: null,\n    documentColumnResizeEndListener: null,\n    lastResizeHelperX: null,\n    resizeColumnElement: null,\n    columnResizing: false,\n    colReorderIconWidth: null,\n    colReorderIconHeight: null,\n    draggedColumn: null,\n    draggedRowIndex: null,\n    droppedRowIndex: null,\n    rowDragging: null,\n    columnWidthsState: null,\n    tableWidthState: null,\n    columnWidthsRestored: false,\n    virtualScrollTimer: null,\n    watch: {\n        first(newValue) {\n            this.d_first = newValue;\n        },\n        rows(newValue) {\n            this.d_rows = newValue;\n        },\n        sortField(newValue) {\n            this.d_sortField = newValue;\n        },\n        sortOrder(newValue) {\n            this.d_sortOrder = newValue;\n        },\n        multiSortMeta(newValue) {\n            this.d_multiSortMeta = newValue;\n        },\n        selection(newValue) {\n            if (this.dataKey) {\n                this.updateSelectionKeys(newValue);\n            }\n        },\n        expandedRows(newValue) {\n            if (this.dataKey) {\n                this.updateExpandedRowKeys(newValue);\n            }\n        },\n        editingRows(newValue) {\n            if (this.dataKey) {\n                this.updateEditingRowKeys(newValue);\n            }\n        }\n    },\n    beforeMount() {\n        if (this.isStateful()) {\n            this.restoreState();\n        }\n    },\n    mounted() {\n        this.allChildren = this.$children;\n\n        if (this.reorderableColumns) {\n            let columnOrder = [];\n            for (let child of this.allChildren) {\n                if (child.$options._propKeys.indexOf('columnKey') !== -1) {\n                    columnOrder.push(child.columnKey||child.field);\n                }\n            }\n            this.d_columnOrder = columnOrder;\n        }\n    },\n    beforeDestroy() {\n        this.unbindColumnResizeEvents();\n    },\n    updated() {\n        if (this.isStateful()) {\n            this.saveState();\n\n            if (this.resizableColumns && !this.columnWidthsRestored) {\n                this.restoreColumnWidths();\n                this.columnWidthsRestored = true;\n            }\n        }\n    },\n    methods: {\n        onPage(event) {\n            this.d_first = event.first;\n            this.d_rows = event.rows;\n\n            let pageEvent = this.createLazyLoadEvent(event);\n            pageEvent.pageCount = event.pageCount;\n            pageEvent.page = event.page;\n\n            this.$emit('update:first', this.d_first);\n            this.$emit('update:rows', this.d_rows);\n            this.$emit('page', pageEvent);\n        },\n        onColumnHeaderClick(e) {\n            const event = e.originalEvent;\n            const column = e.column;\n\n            if (column.sortable) {\n                const targetNode = event.target;\n                const columnField = column.sortField || column.field;\n\n                if (DomHandler.hasClass(targetNode, 'p-sortable-column') || DomHandler.hasClass(targetNode, 'p-column-title')\n                    || DomHandler.hasClass(targetNode, 'p-sortable-column-icon') || DomHandler.hasClass(targetNode.parentElement, 'p-sortable-column-icon')) {\n                    DomHandler.clearSelection();\n\n                    if (this.sortMode === 'single') {\n                        if (this.d_sortField === columnField) {\n                            if (this.removableSort && (this.d_sortOrder * -1 === this.defaultSortOrder)) {\n                                this.d_sortOrder = null;\n                                this.d_sortField = null;\n                            }\n                            else {\n                                this.d_sortOrder = this.d_sortOrder * -1;\n                            }\n                        }\n                        else {\n                            this.d_sortOrder = this.defaultSortOrder;\n                            this.d_sortField = columnField;\n                        }\n\n                        this.$emit('update:sortField', this.d_sortField);\n                        this.$emit('update:sortOrder', this.d_sortOrder);\n                        this.resetPage();\n                    }\n                    else if (this.sortMode === 'multiple') {\n                        let metaKey = event.metaKey || event.ctrlKey;\n                        if (!metaKey) {\n                            this.d_multiSortMeta =  this.d_multiSortMeta.filter(meta => meta.field === columnField);\n                        }\n\n                        this.addMultiSortField(columnField);\n                        this.$emit('update:multiSortMeta', this.d_multiSortMeta);\n                    }\n\n                    this.$emit('sort', this.createLazyLoadEvent(event));\n                }\n            }\n        },\n        sortSingle(value) {\n            let data = [...value];\n\n            data.sort((data1, data2) => {\n                let value1 = ObjectUtils.resolveFieldData(data1, this.d_sortField);\n                let value2 = ObjectUtils.resolveFieldData(data2, this.d_sortField);\n\n                let result = null;\n\n                if (value1 == null && value2 != null)\n                    result = -1;\n                else if (value1 != null && value2 == null)\n                    result = 1;\n                else if (value1 == null && value2 == null)\n                    result = 0;\n                else if (typeof value1 === 'string' && typeof value2 === 'string')\n                    result = value1.localeCompare(value2, undefined, { numeric: true });\n                else\n                    result = (value1 < value2) ? -1 : (value1 > value2) ? 1 : 0;\n\n                return (this.d_sortOrder * result);\n            });\n\n            return data;\n        },\n        sortMultiple(value) {\n            let data = [...value];\n\n            data.sort((data1, data2) => {\n                return this.multisortField(data1, data2, 0);\n            });\n\n            return data;\n        },\n        multisortField(data1, data2, index) {\n            const value1 = ObjectUtils.resolveFieldData(data1, this.d_multiSortMeta[index].field);\n            const value2 = ObjectUtils.resolveFieldData(data2, this.d_multiSortMeta[index].field);\n            let result = null;\n\n            if (typeof value1 === 'string' || value1 instanceof String) {\n                if (value1.localeCompare && (value1 !== value2)) {\n                    return (this.d_multiSortMeta[index].order * value1.localeCompare(value2, undefined, { numeric: true }));\n                }\n            }\n            else {\n                result = (value1 < value2) ? -1 : 1;\n            }\n\n            if (value1 === value2)  {\n                return (this.d_multiSortMeta.length - 1) > (index) ? (this.multisortField(data1, data2, index + 1)) : 0;\n            }\n\n            return (this.d_multiSortMeta[index].order * result);\n        },\n        addMultiSortField(field) {\n            let index =  this.d_multiSortMeta.findIndex(meta => meta.field === field);\n\n            if (index >= 0) {\n                if (this.removableSort && (this.d_multiSortMeta[index].order * -1 === this.defaultSortOrder))\n                    this.d_multiSortMeta.splice(index, 1);\n                else\n                    this.d_multiSortMeta[index] = {field: field, order: this.d_multiSortMeta[index].order * -1};\n            }\n            else {\n                this.d_multiSortMeta.push({field: field, order: this.defaultSortOrder});\n            }\n\n            this.d_multiSortMeta = [...this.d_multiSortMeta];\n        },\n        filter(data) {\n            let filteredValue = [];\n\n            for(let i = 0; i < data.length; i++) {\n                let localMatch = true;\n                let globalMatch = false;\n\n                for(let j = 0; j < this.columns.length; j++) {\n                    let col = this.columns[j];\n                    let columnField = col.filterField || col.field;\n\n                    //local\n                    if (Object.prototype.hasOwnProperty.call(this.filters, columnField)) {\n                        let filterValue = this.filters[columnField];\n                        let dataFieldValue = ObjectUtils.resolveFieldData(data[i], columnField);\n                        let filterConstraint = col.filterMatchMode === 'custom' ? col.filterFunction : FilterUtils[col.filterMatchMode];\n                        if (!filterConstraint(dataFieldValue, filterValue, this.filterLocale)) {\n                            localMatch = false;\n                        }\n\n                        if (!localMatch) {\n                            break;\n                        }\n                    }\n\n                    if (!col.excludeGlobalFilter && this.hasGlobalFilter && !globalMatch) {\n                        globalMatch = FilterUtils.contains(ObjectUtils.resolveFieldData(data[i], columnField), this.filters['global'], this.filterLocale);\n                    }\n                }\n\n                let matches = localMatch;\n                if(this.hasGlobalFilter) {\n                    matches = localMatch && globalMatch;\n                }\n\n                if(matches) {\n                    filteredValue.push(data[i]);\n                }\n            }\n\n            if (filteredValue.length === data.length) {\n                filteredValue = data;\n            }\n\n            let filterEvent = this.createLazyLoadEvent();\n            filterEvent.filteredValue = filteredValue;\n            this.$emit('filter', filterEvent);\n\n            return filteredValue;\n        },\n        onRowClick(e) {\n            const event = e.originalEvent;\n            if (DomHandler.isClickable(event.target)) {\n                return;\n            }\n\n            this.$emit('row-click', e);\n\n            if (this.selectionMode) {\n                const rowData = e.data;\n                const rowIndex = e.index;\n\n                if (this.isMultipleSelectionMode() && event.shiftKey && this.anchorRowIndex != null) {\n                    DomHandler.clearSelection();\n                    this.rangeRowIndex = rowIndex;\n                    this.selectRange(event);\n                }\n                else {\n                    const selected = this.isSelected(rowData);\n                    const metaSelection = this.rowTouched ? false : this.metaKeySelection;\n                    this.anchorRowIndex = rowIndex;\n                    this.rangeRowIndex = rowIndex;\n\n                    if (metaSelection) {\n                        let metaKey = event.metaKey || event.ctrlKey;\n\n                        if (selected && metaKey) {\n                            if(this.isSingleSelectionMode()) {\n                                this.$emit('update:selection', null);\n                            }\n                            else {\n                                const selectionIndex = this.findIndexInSelection(rowData);\n                                const _selection = this.selection.filter((val,i) => i != selectionIndex);\n                                this.$emit('update:selection', _selection);\n                            }\n\n                            this.$emit('row-unselect', {originalEvent: event, data: rowData, index: event.index, type: 'row'});\n                        }\n                        else {\n                            if(this.isSingleSelectionMode()) {\n                                this.$emit('update:selection', rowData);\n                            }\n                            else if (this.isMultipleSelectionMode()) {\n                                let _selection = metaKey ? (this.selection || []) : [];\n                                _selection = [..._selection, rowData];\n                                this.$emit('update:selection', _selection);\n                            }\n\n                            this.$emit('row-select', {originalEvent: event, data: rowData, index: event.index, type: 'row'});\n                        }\n                    }\n                    else {\n                        if (this.selectionMode === 'single') {\n                            if (selected) {\n                                this.$emit('update:selection', null);\n                                this.$emit('row-unselect', {originalEvent: event, data: rowData, index: event.index, type: 'row'});\n                            }\n                            else {\n                                this.$emit('update:selection', rowData);\n                                this.$emit('row-select', {originalEvent: event, data: rowData, index: event.index, type: 'row'});\n                            }\n                        }\n                        else if (this.selectionMode === 'multiple') {\n                            if (selected) {\n                                const selectionIndex = this.findIndexInSelection(rowData);\n                                const _selection = this.selection.filter((val, i) => i != selectionIndex);\n                                this.$emit('update:selection', _selection);\n                                this.$emit('row-unselect', {originalEvent: event, data: rowData, index: event.index, type: 'row'});\n                            }\n                            else {\n                                const _selection = this.selection ? [...this.selection, rowData] : [rowData];\n                                this.$emit('update:selection', _selection);\n                                this.$emit('row-select', {originalEvent: event, data: rowData, index: event.index, type: 'row'});\n                            }\n                        }\n                    }\n                }\n            }\n\n            this.rowTouched = false;\n        },\n        onRowRightClick(event) {\n            DomHandler.clearSelection();\n            event.originalEvent.target.focus();\n\n            this.$emit('update:contextMenuSelection', event.data);\n            this.$emit('row-contextmenu', event);\n        },\n        onRowTouchEnd() {\n            this.rowTouched = true;\n        },\n        onRowKeyDown(e) {\n            const event = e.originalEvent;\n            const rowData = e.data;\n            const rowIndex = e.index;\n\n            if (this.selectionMode) {\n                const row = event.target;\n\n                switch (event.which) {\n                    //down arrow\n                    case 40:\n                        var nextRow = this.findNextSelectableRow(row);\n                        if (nextRow) {\n                            nextRow.focus();\n                        }\n\n                        event.preventDefault();\n                    break;\n\n                    //up arrow\n                    case 38:\n                        var prevRow = this.findPrevSelectableRow(row);\n                        if (prevRow) {\n                            prevRow.focus();\n                        }\n\n                        event.preventDefault();\n                    break;\n\n                    //enter\n                    case 13:\n                        this.onRowClick({originalEvent: event, data: rowData, index: rowIndex});\n                    break;\n\n                    default:\n                        //no op\n                    break;\n                }\n            }\n        },\n        findNextSelectableRow(row) {\n            let nextRow = row.nextElementSibling;\n            if (nextRow) {\n                if (DomHandler.hasClass(nextRow, 'p-datatable-row'))\n                    return nextRow;\n                else\n                    return this.findNextSelectableRow(nextRow);\n            }\n            else {\n                return null;\n            }\n        },\n        findPrevSelectableRow(row) {\n            let prevRow = row.previousElementSibling;\n            if (prevRow) {\n                if (DomHandler.hasClass(prevRow, 'p-datatable-row'))\n                    return prevRow;\n                else\n                    return this.findPrevSelectableRow(prevRow);\n            }\n            else {\n                return null;\n            }\n        },\n        toggleRowWithRadio(event) {\n            const rowData = event.data;\n\n            if (this.isSelected(rowData)) {\n                this.$emit('update:selection', null);\n                this.$emit('row-unselect', {originalEvent: event, data: rowData, type: 'radiobutton'});\n            }\n            else {\n                this.$emit('update:selection', rowData);\n                this.$emit('row-select', {originalEvent: event, data: rowData, type: 'radiobutton'});\n            }\n        },\n        toggleRowWithCheckbox(event) {\n            const rowData = event.data;\n\n            if (this.isSelected(rowData)) {\n                const selectionIndex = this.findIndexInSelection(rowData);\n                const _selection = this.selection.filter((val, i) => i != selectionIndex);\n                this.$emit('update:selection', _selection);\n                this.$emit('row-unselect', {originalEvent: event, data: rowData, type: 'checkbox'});\n            }\n            else {\n                let _selection = this.selection ? [...this.selection] : [];\n                _selection = [..._selection, rowData];\n                this.$emit('update:selection', _selection);\n                this.$emit('row-select', {originalEvent: event, data: rowData, type: 'checkbox'});\n            }\n        },\n        toggleRowsWithCheckbox(event) {\n            const processedData = this.processedData;\n            const checked = this.allRowsSelected;\n            const _selection = checked ? [] : (processedData ? [...processedData] : [...this.value]);\n            this.$emit('update:selection', _selection);\n\n            if (checked)\n                this.$emit('row-unselect-all', {originalEvent: event});\n            else\n                this.$emit('row-select-all', {originalEvent: event, data: _selection});\n        },\n        isSingleSelectionMode() {\n            return this.selectionMode === 'single';\n        },\n        isMultipleSelectionMode() {\n            return this.selectionMode === 'multiple';\n        },\n        isSelected(rowData) {\n            if (rowData && this.selection) {\n                if (this.dataKey) {\n                    return this.d_selectionKeys ? this.d_selectionKeys[ObjectUtils.resolveFieldData(rowData, this.dataKey)] !== undefined : false;\n                }\n                else {\n                    if (this.selection instanceof Array)\n                        return this.findIndexInSelection(rowData) > -1;\n                    else\n                        return this.equals(rowData, this.selection);\n                }\n            }\n\n            return false;\n        },\n        findIndexInSelection(rowData) {\n            return this.findIndex(rowData, this.selection);\n        },\n        findIndex(rowData, collection) {\n            let index = -1;\n            if (collection && collection.length) {\n                for (let i = 0; i < collection.length; i++) {\n                    if (this.equals(rowData, collection[i])) {\n                        index = i;\n                        break;\n                    }\n                }\n            }\n\n            return index;\n        },\n        updateSelectionKeys(selection) {\n            this.d_selectionKeys = {};\n            if (Array.isArray(selection)) {\n                for (let data of selection) {\n                    this.d_selectionKeys[String(ObjectUtils.resolveFieldData(data, this.dataKey))] = 1;\n                }\n            }\n            else {\n                this.d_selectionKeys[String(ObjectUtils.resolveFieldData(selection, this.dataKey))] = 1;\n            }\n        },\n        updateExpandedRowKeys(expandedRows) {\n            if (expandedRows && expandedRows.length) {\n                this.d_expandedRowKeys = {};\n                for (let data of expandedRows) {\n                    this.d_expandedRowKeys[String(ObjectUtils.resolveFieldData(data, this.dataKey))] = 1;\n                }\n            }\n            else {\n                this.d_expandedRowKeys = null;\n            }\n        },\n        updateEditingRowKeys(editingRows) {\n            if (editingRows && editingRows.length) {\n                this.d_editingRowKeys = {};\n                for (let data of editingRows) {\n                    this.d_editingRowKeys[String(ObjectUtils.resolveFieldData(data, this.dataKey))] = 1;\n                }\n            }\n            else {\n                this.d_editingRowKeys = null;\n            }\n        },\n        equals(data1, data2) {\n            return this.compareSelectionBy === 'equals' ? (data1 === data2) : ObjectUtils.equals(data1, data2, this.dataKey);\n        },\n        selectRange(event) {\n            let rangeStart, rangeEnd;\n\n            if (this.rangeRowIndex > this.anchorRowIndex) {\n                rangeStart = this.anchorRowIndex;\n                rangeEnd = this.rangeRowIndex;\n            }\n            else if(this.rangeRowIndex < this.anchorRowIndex) {\n                rangeStart = this.rangeRowIndex;\n                rangeEnd = this.anchorRowIndex;\n            }\n            else {\n                rangeStart = this.rangeRowIndex;\n                rangeEnd = this.rangeRowIndex;\n            }\n\n            if (this.lazy && this.paginator) {\n                rangeStart -= this.first;\n                rangeEnd -= this.first;\n            }\n\n            const value = this.processedData;\n            let _selection = [];\n            for(let i = rangeStart; i <= rangeEnd; i++) {\n                let rangeRowData = value[i];\n                _selection.push(rangeRowData);\n                this.$emit('row-select', {originalEvent: event, data: rangeRowData, type: 'row'});\n            }\n\n            this.$emit('update:selection', _selection);\n        },\n        exportCSV(options) {\n            let data = this.processedData;\n            let csv = '\\ufeff';\n\n            if (options && options.selectionOnly) {\n                data = this.selection || [];\n            }\n\n            //headers\n            for (let i = 0; i < this.columns.length; i++) {\n                let column = this.columns[i];\n                if (column.exportable !== false && column.field) {\n                    csv += '\"' + (column.header || column.field) + '\"';\n\n                    if (i < (this.columns.length - 1)) {\n                        csv += this.csvSeparator;\n                    }\n                }\n            }\n\n            //body\n            data.forEach(record => {\n                csv += '\\n';\n                for (let i = 0; i < this.columns.length; i++) {\n                    let column = this.columns[i];\n                    if (column.exportable !== false && column.field) {\n                        let cellData = ObjectUtils.resolveFieldData(record, column.field);\n\n                        if (cellData != null) {\n                            if (this.exportFunction) {\n                                cellData = this.exportFunction({\n                                    data: cellData,\n                                    field: column.field\n                                });\n                            }\n                            else\n                                cellData = String(cellData).replace(/\"/g, '\"\"');\n                        }\n                        else\n                            cellData = '';\n\n\n                        csv += '\"' + cellData + '\"';\n\n                        if (i < (this.columns.length - 1)) {\n                            csv += this.csvSeparator;\n                        }\n                    }\n                }\n            });\n\n            let blob = new Blob([csv], {\n                type: 'text/csv;charset=utf-8;'\n            });\n\n            if (window.navigator.msSaveOrOpenBlob) {\n                navigator.msSaveOrOpenBlob(blob, this.exportFilename + '.csv');\n            }\n            else {\n                let link = document.createElement(\"a\");\n                link.style.display = 'none';\n                document.body.appendChild(link);\n                if (link.download !== undefined) {\n                    link.setAttribute('href', URL.createObjectURL(blob));\n                    link.setAttribute('download', this.exportFilename + '.csv');\n                    link.click();\n                }\n                else {\n                    csv = 'data:text/csv;charset=utf-8,' + csv;\n                    window.open(encodeURI(csv));\n                }\n                document.body.removeChild(link);\n            }\n        },\n        resetPage() {\n            this.d_first = 0;\n            this.$emit('update:first', this.d_first);\n        },\n        onColumnResizeStart(event) {\n            let containerLeft = DomHandler.getOffset(this.$el).left;\n            this.resizeColumnElement = event.target.parentElement;\n            this.columnResizing = true;\n            this.lastResizeHelperX = (event.pageX - containerLeft + this.$el.scrollLeft);\n\n            this.bindColumnResizeEvents();\n        },\n        onColumnResize(event) {\n            let containerLeft = DomHandler.getOffset(this.$el).left;\n            DomHandler.addClass(this.$el, 'p-unselectable-text');\n            this.$refs.resizeHelper.style.height = this.$el.offsetHeight + 'px';\n            this.$refs.resizeHelper.style.top = 0 + 'px';\n            this.$refs.resizeHelper.style.left = (event.pageX - containerLeft + this.$el.scrollLeft) + 'px';\n\n            this.$refs.resizeHelper.style.display = 'block';\n        },\n        onColumnResizeEnd() {\n            let delta = this.$refs.resizeHelper.offsetLeft - this.lastResizeHelperX;\n            let columnWidth = this.resizeColumnElement.offsetWidth;\n            let newColumnWidth = columnWidth + delta;\n            let minWidth = this.resizeColumnElement.style.minWidth||15;\n\n            if (columnWidth + delta > parseInt(minWidth, 10)) {\n                if (this.columnResizeMode === 'fit') {\n                    let nextColumn = this.resizeColumnElement.nextElementSibling;\n                    let nextColumnWidth = nextColumn.offsetWidth - delta;\n\n                    if (newColumnWidth > 15 && nextColumnWidth > 15) {\n                        if(this.scrollable) {\n                            const scrollableView = this.findParentScrollableView(this.resizeColumnElement);\n                            const scrollableBodyTable = DomHandler.findSingle(scrollableView, 'table.p-datatable-scrollable-body-table');\n                            const scrollableHeaderTable = DomHandler.findSingle(scrollableView, 'table.p-datatable-scrollable-header-table');\n                            const scrollableFooterTable = DomHandler.findSingle(scrollableView, 'table.p-datatable-scrollable-footer-table');\n                            const resizeColumnIndex = DomHandler.index(this.resizeColumnElement);\n\n                            this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                            this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                            this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);\n                        }\n                        else {\n                            this.resizeColumnElement.style.width = newColumnWidth + 'px';\n                            if(nextColumn) {\n                                nextColumn.style.width = nextColumnWidth + 'px';\n                            }\n                        }\n                    }\n                }\n                else if (this.columnResizeMode === 'expand') {\n                    if (this.scrollable) {\n                        this.resizeScrollableTable(this.resizeColumnElement, newColumnWidth, delta);\n                    }\n                    else {\n                        this.$refs.table.style.width = this.$refs.table.offsetWidth + delta + 'px';\n                        this.resizeColumnElement.style.width = newColumnWidth + 'px';\n                    }\n                }\n\n                this.$emit('column-resize-end', {\n                    element: this.resizeColumnElement,\n                    delta: delta\n                });\n            }\n\n            this.$refs.resizeHelper.style.display = 'none';\n            this.resizeColumn = null;\n            DomHandler.removeClass(this.$el, 'p-unselectable-text');\n\n            this.unbindColumnResizeEvents();\n\n            if (this.isStateful()) {\n                this.saveState();\n            }\n        },\n        resizeColGroup(table, resizeColumnIndex, newColumnWidth, nextColumnWidth) {\n            if(table) {\n                let colGroup = table.children[0].nodeName === 'COLGROUP' ? table.children[0] : null;\n\n                if(colGroup) {\n                    let col = colGroup.children[resizeColumnIndex];\n                    let nextCol = col.nextElementSibling;\n                    col.style.width = newColumnWidth + 'px';\n\n                    if (nextCol && nextColumnWidth) {\n                        nextCol.style.width = nextColumnWidth + 'px';\n                    }\n                }\n                else {\n                    throw new Error(\"Scrollable tables require a colgroup to support resizable columns\");\n                }\n            }\n        },\n        bindColumnResizeEvents() {\n            if (!this.documentColumnResizeListener) {\n                this.documentColumnResizeListener = document.addEventListener('mousemove', () => {\n                    if(this.columnResizing) {\n                        this.onColumnResize(event);\n                    }\n                });\n            }\n\n            if (!this.documentColumnResizeEndListener) {\n                this.documentColumnResizeEndListener = document.addEventListener('mouseup', () => {\n                    if(this.columnResizing) {\n                        this.columnResizing = false;\n                        this.onColumnResizeEnd();\n                    }\n                });\n            }\n\n        },\n        unbindColumnResizeEvents() {\n            if (this.documentColumnResizeListener) {\n                document.removeEventListener('document', this.documentColumnResizeListener);\n                this.documentColumnResizeListener = null;\n            }\n\n            if (this.documentColumnResizeEndListener) {\n                document.removeEventListener('document', this.documentColumnResizeEndListener);\n                 this.documentColumnResizeEndListener = null;\n            }\n        },\n        onColumnHeaderMouseDown(e) {\n            const event = e.originalEvent;\n            const column = e.column;\n\n            if (this.reorderableColumns && column.reorderableColumn) {\n                if (event.target.nodeName === 'INPUT' || event.target.nodeName === 'TEXTAREA' || DomHandler.hasClass(event.target, 'p-column-resizer'))\n                    event.currentTarget.draggable = false;\n                else\n                    event.currentTarget.draggable = true;\n            }\n        },\n        onColumnHeaderDragStart(event) {\n            if (this.columnResizing) {\n                event.preventDefault();\n                return;\n            }\n\n            this.colReorderIconWidth = DomHandler.getHiddenElementOuterWidth(this.$refs.reorderIndicatorUp);\n            this.colReorderIconHeight = DomHandler.getHiddenElementOuterHeight(this.$refs.reorderIndicatorUp);\n\n            this.draggedColumn = this.findParentHeader(event.target);\n            event.dataTransfer.setData('text', 'b'); // Firefox requires this to make dragging possible\n        },\n        onColumnHeaderDragOver(event) {\n            let dropHeader = this.findParentHeader(event.target);\n            if(this.reorderableColumns && this.draggedColumn && dropHeader) {\n                event.preventDefault();\n                let containerOffset = DomHandler.getOffset(this.$el);\n                let dropHeaderOffset = DomHandler.getOffset(dropHeader);\n\n                if (this.draggedColumn !== dropHeader) {\n                    let targetLeft =  dropHeaderOffset.left - containerOffset.left;\n                    let columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;\n\n                    this.$refs.reorderIndicatorUp.style.top = dropHeaderOffset.top - containerOffset.top - (this.colReorderIconHeight - 1) + 'px';\n                    this.$refs.reorderIndicatorDown.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';\n\n                    if(event.pageX > columnCenter) {\n                        this.$refs.reorderIndicatorUp.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.colReorderIconWidth / 2)) + 'px';\n                        this.$refs.reorderIndicatorDown.style.left = (targetLeft + dropHeader.offsetWidth - Math.ceil(this.colReorderIconWidth / 2))+ 'px';\n                        this.dropPosition = 1;\n                    }\n                    else {\n                        this.$refs.reorderIndicatorUp.style.left = (targetLeft - Math.ceil(this.colReorderIconWidth / 2)) + 'px';\n                        this.$refs.reorderIndicatorDown.style.left = (targetLeft - Math.ceil(this.colReorderIconWidth / 2))+ 'px';\n                        this.dropPosition = -1;\n                    }\n\n                    this.$refs.reorderIndicatorUp.style.display = 'block';\n                    this.$refs.reorderIndicatorDown.style.display = 'block';\n                }\n            }\n        },\n        onColumnHeaderDragLeave(event) {\n            if(this.reorderableColumns && this.draggedColumn) {\n                event.preventDefault();\n                this.$refs.reorderIndicatorUp.style.display = 'none';\n                this.$refs.reorderIndicatorDown.style.display = 'none';\n            }\n        },\n        onColumnHeaderDrop(event) {\n            event.preventDefault();\n            if (this.draggedColumn) {\n                let dragIndex = DomHandler.index(this.draggedColumn);\n                let dropIndex = DomHandler.index(this.findParentHeader(event.target));\n                let allowDrop = (dragIndex !== dropIndex);\n                if (allowDrop && ((dropIndex - dragIndex === 1 && this.dropPosition === -1) || (dragIndex - dropIndex === 1 && this.dropPosition === 1))) {\n                    allowDrop = false;\n                }\n\n                if (allowDrop) {\n                    ObjectUtils.reorderArray(this.d_columnOrder, dragIndex, dropIndex);\n\n                    this.$emit('column-reorder', {\n                        originalEvent: event,\n                        dragIndex: dragIndex,\n                        dropIndex: dropIndex\n                    });\n                }\n\n                this.$refs.reorderIndicatorUp.style.display = 'none';\n                this.$refs.reorderIndicatorDown.style.display = 'none';\n                this.draggedColumn.draggable = false;\n                this.draggedColumn = null;\n                this.dropPosition = null;\n            }\n        },\n        findParentHeader(element) {\n            if(element.nodeName === 'TH') {\n                return element;\n            }\n            else {\n                let parent = element.parentElement;\n                while(parent.nodeName !== 'TH') {\n                    parent = parent.parentElement;\n                    if (!parent) break;\n                }\n                return parent;\n            }\n        },\n        findParentScrollableView(column) {\n            if (column) {\n                let parent = column.parentElement;\n                while (parent && !DomHandler.hasClass(parent, 'p-datatable-scrollable-view')) {\n                    parent = parent.parentElement;\n                }\n\n                return parent;\n            }\n            else {\n                return null;\n            }\n        },\n        findColumnByKey(columns, key) {\n            if(columns && columns.length) {\n                for(let i = 0; i < columns.length; i++) {\n                    let child = columns[i];\n                    if(child.columnKey === key || child.field === key) {\n                        return child;\n                    }\n                }\n            }\n\n            return null;\n        },\n        resizeScrollableTable(column, newColumnWidth, delta) {\n            const scrollableView = column ? this.findParentScrollableView(column) : this.$el;\n            const scrollableBody = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-body');\n            const scrollableHeader = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-header');\n            const scrollableFooter = DomHandler.findSingle(scrollableView, '.p-datatable-scrollable-footer');\n            const scrollableBodyTable = DomHandler.findSingle(scrollableBody, 'table.p-datatable-scrollable-body-table');\n            const scrollableHeaderTable = DomHandler.findSingle(scrollableHeader, 'table.p-datatable-scrollable-header-table');\n            const scrollableFooterTable = DomHandler.findSingle(scrollableFooter, 'table.p-datatable-scrollable-footer-table');\n\n            const scrollableBodyTableWidth = column ? scrollableBodyTable.offsetWidth + delta : newColumnWidth;\n            const scrollableHeaderTableWidth = column ? scrollableHeaderTable.offsetWidth + delta : newColumnWidth;\n            const isContainerInViewport = this.$el.offsetWidth >= parseFloat(scrollableBodyTableWidth);\n\n            let setWidth = (container, table, width, isContainerInViewport) => {\n                if (container && table) {\n                    container.style.width = isContainerInViewport ? width + DomHandler.calculateScrollbarWidth(scrollableBody) + 'px' : 'auto'\n                    table.style.width = width + 'px';\n                }\n            };\n\n            setWidth(scrollableBody, scrollableBodyTable, scrollableBodyTableWidth, isContainerInViewport);\n            setWidth(scrollableHeader, scrollableHeaderTable, scrollableHeaderTableWidth, isContainerInViewport);\n            setWidth(scrollableFooter, scrollableFooterTable, scrollableHeaderTableWidth, isContainerInViewport);\n\n            if (column) {\n                let resizeColumnIndex = DomHandler.index(column);\n\n                this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, null);\n                this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, null);\n                this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, null);\n            }\n        },\n        onRowMouseDown(event) {\n            if (DomHandler.hasClass(event.target, 'p-datatable-reorderablerow-handle'))\n                event.currentTarget.draggable = true;\n            else\n                event.currentTarget.draggable = false;\n        },\n        onRowDragStart(e) {\n            const event = e.originalEvent;\n            const index = e.index;\n            this.rowDragging = true;\n            this.draggedRowIndex = index;\n            event.dataTransfer.setData('text', 'b');    // For firefox\n        },\n        onRowDragOver(e) {\n            const event = e.originalEvent;\n            const index = e.index;\n\n            if (this.rowDragging && this.draggedRowIndex !== index) {\n                let rowElement = event.currentTarget;\n                let rowY = DomHandler.getOffset(rowElement).top + DomHandler.getWindowScrollTop();\n                let pageY = event.pageY;\n                let rowMidY = rowY + DomHandler.getOuterHeight(rowElement) / 2;\n                let prevRowElement = rowElement.previousElementSibling;\n\n                if (pageY < rowMidY) {\n                    DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-bottom');\n\n                    this.droppedRowIndex = index;\n                    if (prevRowElement)\n                        DomHandler.addClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n                    else\n                        DomHandler.addClass(rowElement, 'p-datatable-dragpoint-top');\n                }\n                else {\n                    if (prevRowElement)\n                        DomHandler.removeClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n                    else\n                        DomHandler.addClass(rowElement, 'p-datatable-dragpoint-top');\n\n                    this.droppedRowIndex = index + 1;\n                    DomHandler.addClass(rowElement, 'p-datatable-dragpoint-bottom');\n                }\n\n                event.preventDefault();\n            }\n        },\n        onRowDragLeave(event) {\n            let rowElement = event.currentTarget;\n            let prevRowElement = rowElement.previousElementSibling;\n            if (prevRowElement) {\n                DomHandler.removeClass(prevRowElement, 'p-datatable-dragpoint-bottom');\n            }\n\n            DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-bottom');\n            DomHandler.removeClass(rowElement, 'p-datatable-dragpoint-top');\n        },\n        onRowDragEnd(event) {\n            this.rowDragging = false;\n            this.draggedRowIndex = null;\n            this.droppedRowIndex = null;\n            event.currentTarget.draggable = false;\n        },\n        onRowDrop(event) {\n            if (this.droppedRowIndex != null) {\n                let dropIndex = (this.draggedRowIndex > this.droppedRowIndex) ? this.droppedRowIndex : (this.droppedRowIndex === 0) ? 0 : this.droppedRowIndex - 1;\n                let processedData = [...this.processedData];\n                ObjectUtils.reorderArray(processedData, this.draggedRowIndex, dropIndex);\n\n                this.$emit('row-reorder', {\n                    originalEvent: event,\n                    dragIndex: this.draggedRowIndex,\n                    dropIndex: dropIndex,\n                    value: processedData\n                });\n            }\n\n            //cleanup\n            this.onRowDragLeave(event);\n            this.onRowDragEnd(event);\n            event.preventDefault();\n        },\n        toggleRow(event) {\n            let rowData = event.data;\n            let expanded;\n            let expandedRowIndex;\n            let _expandedRows = this.expandedRows ? [...this.expandedRows] : [];\n\n            if (this.dataKey) {\n                expanded = this.d_expandedRowKeys ? this.d_expandedRowKeys[ObjectUtils.resolveFieldData(rowData, this.dataKey)] !== undefined : false;\n            }\n            else {\n                expandedRowIndex = this.findIndex(rowData, this.expandedRows);\n                expanded = expandedRowIndex > -1;\n            }\n\n            if (expanded) {\n                if (expandedRowIndex == null) {\n                    expandedRowIndex = this.findIndex(rowData, this.expandedRows);\n                }\n                _expandedRows.splice(expandedRowIndex, 1);\n                this.$emit('update:expandedRows', _expandedRows);\n                this.$emit('row-collapse', event);\n            }\n            else {\n                _expandedRows.push(rowData);\n                this.$emit('update:expandedRows', _expandedRows);\n                this.$emit('row-expand', event);\n            }\n        },\n        toggleRowGroup(e) {\n            const event = e.originalEvent;\n            const data = e.data;\n            const groupFieldValue = ObjectUtils.resolveFieldData(data, this.groupRowsBy);\n            let _expandedRowGroups = this.expandedRowGroups ? [...this.expandedRowGroups] : [];\n\n            if (this.isRowGroupExpanded(data)) {\n                _expandedRowGroups = _expandedRowGroups.filter(group => group !== groupFieldValue);\n                this.$emit('update:expandedRowGroups', _expandedRowGroups);\n                this.$emit('rowgroup-collapse', {originalEvent: event, data: groupFieldValue});\n            }\n            else {\n                _expandedRowGroups.push(groupFieldValue);\n                this.$emit('update:expandedRowGroups', _expandedRowGroups);\n                this.$emit('rowgroup-expand', {originalEvent: event, data: groupFieldValue});\n            }\n        },\n        isRowGroupExpanded(rowData) {\n            if (this.expandableRowGroups && this.expandedRowGroups) {\n                let groupFieldValue = ObjectUtils.resolveFieldData(rowData, this.groupRowsBy);\n                return this.expandedRowGroups.indexOf(groupFieldValue) > -1;\n            }\n            return false;\n        },\n        isStateful() {\n            return this.stateKey != null;\n        },\n        getStorage() {\n            switch(this.stateStorage) {\n                case 'local':\n                    return window.localStorage;\n\n                case 'session':\n                    return window.sessionStorage;\n\n                default:\n                    throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\n            }\n        },\n        saveState() {\n            const storage = this.getStorage();\n            let state = {};\n\n            if (this.paginator) {\n                state.first = this.d_first;\n                state.rows = this.d_rows;\n            }\n\n            if (this.d_sortField) {\n                state.sortField = this.d_sortField;\n                state.sortOrder = this.d_sortOrder;\n            }\n\n            if (this.d_multiSortMeta) {\n                state.multiSortMeta = this.d_multiSortMeta;\n            }\n\n            if (this.hasFilters) {\n                state.filters = this.filters;\n            }\n\n            if (this.resizableColumns) {\n                this.saveColumnWidths(state);\n            }\n\n            if (this.reorderableColumns) {\n                state.columnOrder = this.d_columnOrder;\n            }\n\n            if (this.expandedRows) {\n                state.expandedRows = this.expandedRows;\n                state.expandedRowKeys = this.d_expandedRowKeys;\n            }\n\n            if (this.expandedRowGroups) {\n                state.expandedRowGroups = this.expandedRowGroups;\n            }\n\n            if (this.selection) {\n                state.selection = this.selection;\n                state.selectionKeys = this.d_selectionKeys;\n            }\n\n            if (Object.keys(state).length) {\n                storage.setItem(this.stateKey, JSON.stringify(state));\n            }\n        },\n        restoreState() {\n            const storage = this.getStorage();\n            const stateString = storage.getItem(this.stateKey);\n\n            if (stateString) {\n                let restoredState = JSON.parse(stateString);\n\n                if (this.paginator) {\n                    this.d_first = restoredState.first;\n                    this.d_rows = restoredState.rows;\n                }\n\n                if (restoredState.sortField) {\n                    this.d_sortField = restoredState.sortField;\n                    this.d_sortOrder = restoredState.sortOrder;\n                }\n\n                if (restoredState.multiSortMeta) {\n                    this.d_multiSortMeta = restoredState.multiSortMeta;\n                }\n\n                if (restoredState.filters) {\n                    this.$emit('update:filters', restoredState.filters);\n                }\n\n                if (this.resizableColumns) {\n                    this.columnWidthsState = restoredState.columnWidths;\n                    this.tableWidthState = restoredState.tableWidth;\n                }\n\n                if (this.reorderableColumns) {\n                    this.d_columnOrder = restoredState.columnOrder;\n                }\n\n                if (restoredState.expandedRows) {\n                    this.d_expandedRowKeys = restoredState.expandedRowKeys;\n                    this.$emit('update:expandedRows', restoredState.expandedRows);\n                }\n\n                if (restoredState.expandedRowGroups) {\n                    this.$emit('update:expandedRowGroups', restoredState.expandedRowGroups);\n                }\n\n                if (restoredState.selection) {\n                    this.d_selectionKeys = restoredState.d_selectionKeys;\n                    this.$emit('update:selection', restoredState.selection);\n                }\n            }\n        },\n        saveColumnWidths(state) {\n            let widths = [];\n            let headers = DomHandler.find(this.$el, '.p-datatable-thead > tr > th');\n            headers.forEach(header => widths.push(DomHandler.getOuterWidth(header)));\n            state.columnWidths = widths.join(',');\n\n            if (this.columnResizeMode === 'expand') {\n                state.tableWidth = this.scrollable ? DomHandler.findSingle(this.$el, '.p-datatable-scrollable-header-table').style.width :\n                                                    DomHandler.getOuterWidth(this.$refs.table) + 'px';\n            }\n        },\n        restoreColumnWidths() {\n            if (this.columnWidthsState) {\n                let widths = this.columnWidthsState.split(',');\n\n                if (this.columnResizeMode === 'expand' && this.tableWidthState) {\n                    if (this.scrollable) {\n                        this.resizeScrollableTable(null, this.tableWidthState, 0);\n                    }\n                    else {\n                        this.$refs.table.style.width = this.tableWidthState;\n                        this.$el.style.width = this.tableWidthState;\n                    }\n                }\n\n                if (this.scrollable) {\n                    let headerCols = DomHandler.find(this.$el, '.p-datatable-scrollable-header-table > colgroup > col');\n                    let bodyCols = DomHandler.find(this.$el, '.p-datatable-scrollable-body-table > colgroup > col');\n\n                    headerCols.forEach((col, index) => col.style.width = widths[index] + 'px');\n                    bodyCols.forEach((col, index) => col.style.width = widths[index] + 'px');\n                }\n                else {\n                    let headers = DomHandler.find(this.$refs.table, '.p-datatable-thead > tr > th');\n                    headers.forEach((header, index) => header.style.width = widths[index] + 'px');\n                }\n\n\n            }\n        },\n        onCellEditInit(event) {\n            this.$emit('cell-edit-init', event);\n        },\n        onCellEditComplete(event) {\n            this.$emit('cell-edit-complete', event);\n        },\n        onCellEditCancel(event) {\n            this.$emit('cell-edit-cancel', event);\n        },\n        onRowEditInit(event) {\n            let _editingRows = this.editingRows ? [...this.editingRows] : [];\n            _editingRows.push(event.data);\n            this.$emit('update:editingRows', _editingRows);\n            this.$emit('row-edit-init', event);\n        },\n        onRowEditSave(event) {\n            let _editingRows = [...this.editingRows];\n            _editingRows.splice(this.findIndex(event.data, _editingRows), 1);\n            this.$emit('update:editingRows', _editingRows);\n            this.$emit('row-edit-save', event);\n        },\n        onRowEditCancel(event) {\n            let _editingRows = [...this.editingRows];\n            _editingRows.splice(this.findIndex(event.data, _editingRows), 1);\n            this.$emit('update:editingRows', _editingRows);\n            this.$emit('row-edit-cancel', event);\n        },\n        onVirtualScroll(event) {\n            if(this.virtualScrollTimer) {\n                clearTimeout(this.virtualScrollTimer);\n            }\n\n            this.virtualScrollTimer = setTimeout(() => {\n                this.$emit('virtual-scroll', {\n                        first: (event.page - 1) * this.rows,\n                        rows: this.rows * 2\n                    });\n                }, this.virtualScrollDelay);\n        },\n        createLazyLoadEvent(event) {\n            let filterMatchModes;\n            if (this.hasFilters) {\n                filterMatchModes = {};\n                this.columns.forEach(col => {\n                    if (col.field) {\n                        filterMatchModes[col.field] = col.filterMatchMode;\n                    }\n                });\n            }\n\n            return {\n                originalEvent: event,\n                first: this.d_first,\n                rows: this.d_rows,\n                sortField: this.d_sortField,\n                sortOrder: this.d_sortOrder,\n                multiSortMeta: this.d_multiSortMeta,\n                filters: this.filters,\n                filterMatchModes: filterMatchModes\n            };\n        }\n    },\n    computed: {\n        containerClass() {\n            return [\n                'p-datatable p-component', {\n                    'p-datatable-hoverable-rows': (this.rowHover || this.selectionMode),\n                    'p-datatable-auto-layout': this.autoLayout,\n                    'p-datatable-resizable': this.resizableColumns,\n                    'p-datatable-resizable-fit': this.resizableColumns && this.columnResizeMode === 'fit',\n                    'p-datatable-scrollable': this.scrollable,\n                    'p-datatable-virtual-scrollable': this.virtualScroll,\n                    'p-datatable-flex-scrollable': (this.scrollable && this.scrollHeight === 'flex')\n                }\n            ];\n        },\n        columns() {\n            let columns = [];\n\n            if (this.allChildren) {\n                columns = this.allChildren.filter(child => child.$options._propKeys.indexOf('columnKey') !== -1);\n\n                if (this.reorderableColumns && this.d_columnOrder) {\n                    let orderedColumns = [];\n                    for (let columnKey of this.d_columnOrder) {\n                        let column = this.findColumnByKey(columns, columnKey);\n                        if (column) {\n                            orderedColumns.push(column);\n                        }\n                    }\n\n                    return [...orderedColumns, ...columns.filter((item) => {\n                        return orderedColumns.indexOf(item) < 0;\n                    })];\n                }\n            }\n            return columns;\n        },\n        frozenColumns() {\n            let frozenColumns = [];\n\n            for(let col of this.columns) {\n                if(col.frozen) {\n                    frozenColumns = frozenColumns||[];\n                    frozenColumns.push(col);\n                }\n            }\n\n            return frozenColumns;\n        },\n        scrollableColumns() {\n            let scrollableColumns = [];\n\n            for(let col of this.columns) {\n                if(!col.frozen) {\n                    scrollableColumns = scrollableColumns||[];\n                    scrollableColumns.push(col);\n                }\n            }\n\n            return scrollableColumns;\n        },\n        hasFrozenColumns() {\n            return this.frozenColumns.length > 0;\n        },\n        headerColumnGroup() {\n            if (this.allChildren) {\n                for (let child of this.allChildren) {\n                    if (child.$vnode.tag.indexOf('columngroup') !== -1 && child.type === 'header') {\n                        return child;\n                    }\n                }\n            }\n\n            return null;\n        },\n        frozenHeaderColumnGroup() {\n            if (this.allChildren) {\n                for (let child of this.allChildren) {\n                    if (child.$vnode.tag.indexOf('columngroup') !== -1 && child.type === 'frozenheader') {\n                        return child;\n                    }\n                }\n            }\n\n            return null;\n        },\n        footerColumnGroup() {\n            if (this.allChildren) {\n                for (let child of this.allChildren) {\n                    if (child.$vnode.tag.indexOf('columngroup') !== -1 && child.type === 'footer') {\n                        return child;\n                    }\n                }\n            }\n\n            return null;\n        },\n        frozenFooterColumnGroup() {\n            if (this.allChildren) {\n                for (let child of this.allChildren) {\n                    if (child.$vnode.tag.indexOf('columngroup') !== -1 && child.type === 'frozenfooter') {\n                        return child;\n                    }\n                }\n            }\n\n            return null;\n        },\n        processedData() {\n            if (this.lazy) {\n                return this.value;\n            }\n            else {\n                if (this.value && this.value.length) {\n                    let data = this.value;\n\n                    if (this.sorted) {\n                        if(this.sortMode === 'single')\n                            data = this.sortSingle(data);\n                        else if(this.sortMode === 'multiple')\n                            data = this.sortMultiple(data);\n                    }\n\n                    if (this.hasFilters) {\n                        data = this.filter(data);\n                    }\n\n                    return data;\n                }\n                else {\n                    return null;\n                }\n            }\n        },\n        dataToRender() {\n            const data = this.processedData;\n\n            if (data && this.paginator) {\n                const first = this.lazy ? 0 : this.d_first;\n                return data.slice(first, first + this.d_rows);\n            }\n            else {\n                return data;\n            }\n        },\n        totalRecordsLength() {\n            if (this.lazy) {\n                return this.totalRecords;\n            }\n            else {\n                const data = this.processedData;\n                return data ? data.length : 0;\n            }\n        },\n        empty() {\n            const data = this.processedData;\n            return (!data || data.length === 0);\n        },\n        paginatorTop() {\n            return this.paginator && (this.paginatorPosition !== 'bottom' || this.paginatorPosition === 'both');\n        },\n        paginatorBottom() {\n            return this.paginator && (this.paginatorPosition !== 'top' || this.paginatorPosition === 'both');\n        },\n        sorted() {\n            return this.d_sortField || (this.d_multiSortMeta && this.d_multiSortMeta.length > 0);\n        },\n        hasFilters() {\n            return this.filters && Object.keys(this.filters).length > 0 && this.filters.constructor === Object;\n        },\n        hasGlobalFilter() {\n            return this.filters && Object.prototype.hasOwnProperty.call(this.filters, 'global');\n        },\n        loadingIconClass() {\n            return ['p-datatable-loading-icon pi-spin', this.loadingIcon];\n        },\n        allRowsSelected() {\n            const val = this.processedData;\n            return (val && val.length > 0 && this.selection && this.selection.length > 0 && this.selection.length === val.length);\n        }\n    },\n    components: {\n        'DTPaginator': Paginator,\n        'DTScrollableView': ScrollableView,\n        'DTTableHeader': TableHeader,\n        'DTTableBody': TableBody,\n        'DTTableFooter': TableFooter,\n    }\n}\n</script>\n\n<style>\n.p-datatable {\n    position: relative;\n}\n\n.p-datatable table {\n    border-collapse: collapse;\n    width: 100%;\n    table-layout: fixed;\n}\n\n.p-datatable .p-sortable-column {\n    cursor: pointer;\n    user-select: none;\n}\n\n.p-datatable .p-sortable-column .p-column-title,\n.p-datatable .p-sortable-column .p-sortable-column-icon,\n.p-datatable .p-sortable-column .p-sortable-column-badge {\n    vertical-align: middle;\n}\n\n.p-datatable .p-sortable-column .p-sortable-column-badge {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.p-datatable-auto-layout > .p-datatable-wrapper {\n    overflow-x: auto;\n}\n\n.p-datatable-auto-layout > .p-datatable-wrapper > table {\n    table-layout: auto;\n}\n\n.p-datatable-hoverable-rows .p-datatable-row {\n    cursor: pointer;\n}\n\n/* Scrollable */\n.p-datatable-scrollable-wrapper {\n    position: relative;\n}\n\n.p-datatable-scrollable-header,\n.p-datatable-scrollable-footer {\n    overflow: hidden;\n}\n\n.p-datatable-scrollable-body {\n    overflow: auto;\n    position: relative;\n}\n\n.p-datatable-scrollable-body > table > .p-datatable-tbody > tr:first-child > td {\n    border-top: 0 none;\n}\n\n.p-datatable-virtual-table {\n    position: absolute;\n}\n\n/* Frozen Columns */\n.p-datatable-frozen-view .p-datatable-scrollable-body {\n    overflow: hidden;\n}\n\n.p-datatable-frozen-view > .p-datatable-scrollable-body > table > .p-datatable-tbody > tr > td:last-child {\n    border-right: 0 none;\n}\n\n.p-datatable-unfrozen-view {\n    position: absolute;\n    top: 0;\n}\n\n/* Flex Scrollable */\n.p-datatable-flex-scrollable {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    height: 100%;\n}\n\n.p-datatable-flex-scrollable .p-datatable-scrollable-wrapper,\n.p-datatable-flex-scrollable .p-datatable-scrollable-view {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    height: 100%;\n}\n\n.p-datatable-flex-scrollable .p-datatable-scrollable-body {\n    flex: 1;\n}\n\n/* Resizable */\n.p-datatable-resizable > .p-datatable-wrapper {\n    overflow-x: auto;\n}\n\n.p-datatable-resizable .p-datatable-thead > tr > th,\n.p-datatable-resizable .p-datatable-tfoot > tr > td,\n.p-datatable-resizable .p-datatable-tbody > tr > td {\n    overflow: hidden;\n}\n\n.p-datatable-resizable .p-resizable-column {\n    background-clip: padding-box;\n    position: relative;\n}\n\n.p-datatable-resizable-fit .p-resizable-column:last-child .p-column-resizer {\n    display: none;\n}\n\n.p-datatable .p-column-resizer {\n    display: block;\n    position: absolute !important;\n    top: 0;\n    right: 0;\n    margin: 0;\n    width: .5rem;\n    height: 100%;\n    padding: 0px;\n    cursor:col-resize;\n    border: 1px solid transparent;\n}\n\n.p-datatable .p-column-resizer-helper {\n    width: 1px;\n    position: absolute;\n    z-index: 10;\n    display: none;\n}\n\n.p-datatable .p-row-editor-init,\n.p-datatable .p-row-editor-save,\n.p-datatable .p-row-editor-cancel {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n    position: relative;\n}\n\n/* Expand */\n.p-datatable .p-row-toggler {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n    position: relative;\n}\n\n/* Reorder */\n.p-datatable-reorder-indicator-up,\n.p-datatable-reorder-indicator-down {\n    position: absolute;\n    display: none;\n}\n\n/* Loader */\n.p-datatable .p-datatable-loading-overlay {\n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 1;\n}\n</style>\n"],"sourceRoot":"node_modules/primevue/components/datatable"}]}